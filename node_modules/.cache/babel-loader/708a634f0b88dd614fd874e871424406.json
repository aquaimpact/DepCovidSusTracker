{"ast":null,"code":"import _classCallCheck from\"D:\\\\DeployCSITWEBSITE\\\\csit-website\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\DeployCSITWEBSITE\\\\csit-website\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"D:\\\\DeployCSITWEBSITE\\\\csit-website\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"D:\\\\DeployCSITWEBSITE\\\\csit-website\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import mapboxgl from'mapbox-gl';mapboxgl.accessToken='pk.eyJ1IjoiYXF1YWltcGFjdCIsImEiOiJja2R0d2N3emswdzlwMnptcGliNTk4ZHNkIn0.jPYEzZD-aErgL25Zx9N_Kg';var map;var popup;var source;var Maps=/*#__PURE__*/function(_React$Component){_inherits(Maps,_React$Component);var _super=_createSuper(Maps);function Maps(props){var _this;_classCallCheck(this,Maps);_this=_super.call(this,props);_this.state={lng:103.851959,lat:1.290270,zoom:10.5,movements:[]};_this.mapContainer=React.createRef();return _this;}_createClass(Maps,[{key:\"getMovements\",value:function getMovements(id){var _this2=this;fetch(\"https://internshipcsit.herokuapp.com/getMovementbyID?IDs=\".concat(id)).then(function(r){return r.json();}).then(function(data){return _this2.setState({movements:data});}).catch(function(err){console.log(err);});}},{key:\"componentDidMount\",value:function componentDidMount(){this.getMovements(this.props.UID);map=new mapboxgl.Map({container:this.mapContainer,style:'mapbox://styles/mapbox/streets-v11',center:[this.state.lng,this.state.lat],zoom:this.state.zoom});var size=100;// Create a popup, but don't add it to the map yet.\nvar popup2=new mapboxgl.Popup({closeButton:false,closeOnClick:false});popup=popup2;var pulsingDot={width:size,height:size,data:new Uint8Array(size*size*4),// get rendering context for the map canvas when layer is added to the map\nonAdd:function onAdd(){var canvas=document.createElement('canvas');canvas.width=this.width;canvas.height=this.height;this.context=canvas.getContext('2d');},// called once before every frame where the icon will be used\nrender:function render(){var duration=1000;var t=performance.now()%duration/duration;var radius=size/2*0.3;var outerRadius=size/2*0.7*t+radius;var context=this.context;// draw outer circle\ncontext.clearRect(0,0,this.width,this.height);context.beginPath();context.arc(this.width/2,this.height/2,outerRadius,0,Math.PI*2);context.fillStyle='rgba(255, 200, 200,'+(1-t)+')';context.fill();// draw inner circle\ncontext.beginPath();context.arc(this.width/2,this.height/2,radius,0,Math.PI*2);context.fillStyle='rgba(255, 100, 100, 1)';context.strokeStyle='white';context.lineWidth=2+4*(1-t);context.fill();context.stroke();// update this image's data with data from the canvas\nthis.data=context.getImageData(0,0,this.width,this.height).data;// continuously repaint the map, resulting in the smooth animation of the dot\nmap.triggerRepaint();// return `true` to let the map know that the image was updated\nreturn true;}};map.addImage('pulsing-dot',pulsingDot,{pixelRatio:2});}},{key:\"getDatetime\",value:function getDatetime(datetime,selection){var date=new Date(datetime);date=(date+\"\").split(\" \");var mon=date[1];var day=date[2];var year=date[3];var fullTime=date[4].split(\":\");var hh=fullTime[0];var min=fullTime[1];var sec=fullTime[2];// const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\nvar finalDatetime;if(selection===\"d\"){finalDatetime=day+\" \"+mon+\" \"+year;}else if(selection===\"t\"){var timing=\"AM\";if(parseInt(hh)===12){timing=\"PM\";}if(parseInt(hh)>12){hh=parseInt(hh)-12;timing=\"PM\";}finalDatetime=hh+\":\"+min+\" \"+timing;}else if(selection===\"dt\"){finalDatetime=new Date(datetime);}return finalDatetime;}},{key:\"getPeople\",value:function getPeople(id,enter,leave){var _this3=this;fetch(\"https://internshipcsit.herokuapp.com/getPeopleTiming?IDs=\".concat(id)).then(function(r){return r.json();}).then(function(data){_this3.props.callbackFromParent({data:data,enter:enter,leave:leave});}).catch(function(err){console.log(err);});}},{key:\"componentDidUpdate\",value:function componentDidUpdate(){var _this4=this;console.log(this.state.movements);for(var key in map.style.sourceCaches){console.log(key);if(key!='composite'){map.removeLayer(key);if(key==\"placeIDs\"){map.off('click','placeIDs',function(e){// that.getPeople(movementID, enter, leave)\n});map.off('mouseenter','placeIDs',function(e){// Change the cursor style as a UI indicator.\nmap.getCanvas().style.cursor='pointer';var coordinates=e.features[0].geometry.coordinates.slice();var description=e.features[0].properties.description;// Ensure that if the map is zoomed out such that multiple\n// copies of the feature are visible, the popup appears\n// over the copy being pointed to.\nwhile(Math.abs(e.lngLat.lng-coordinates[0])>180){coordinates[0]+=e.lngLat.lng>coordinates[0]?360:-360;}// Populate the popup and set its coordinates\n// based on the feature found.\npopup.setLngLat(coordinates).setHTML(description).addTo(map);});map.off('mouseleave','placeIDs',function(){map.getCanvas().style.cursor='';popup.remove();});}map.removeSource(key);}// console.log(map.getStyle().layers)\n}var UPoints=this.state.movements.map(function(x){return{'type':'Feature','properties':{'movementID':x.id,'enter':x.datetimeEntered,'leave':x.datetimeLeft,'description':\"<strong>\".concat(x.locationShortaddress,\"</strong><p>Time Entered: \").concat(_this4.getDatetime(x.datetimeEntered,'t'),\"</p><p>Time Left: \").concat(_this4.getDatetime(x.datetimeLeft,'t'),\"</p><p>Date: \").concat(_this4.getDatetime(x.datetimeLeft,'d'),\"</p>\")},'geometry':{'type':'Point','coordinates':[x.locationLong,x.locationLat]}};});var UMovements=this.state.movements.map(function(x){return[x.locationLong,x.locationLat];});console.log(\"Maps debug 1\");var that=this;map.addSource('route',{'type':'geojson','data':{'type':'Feature','properties':{},'geometry':{'type':'LineString','coordinates':UMovements}}});console.log(\"Maps debug 2\");map.addLayer({'id':'route','type':'line','source':'route','layout':{'line-join':'round','line-cap':'round'},'paint':{'line-color':'#888','line-width':5}});console.log(\"Maps debug 3\");map.addSource('places',{'type':'geojson','data':{'type':'FeatureCollection','features':UPoints}});console.log(\"Maps debug 4\");// Add a layer showing the places.\nmap.addLayer({'id':'places','type':'symbol','source':'places','layout':{// \"line-cap\": \"round\",\n// \"line-join\": \"round\"\n'icon-image':'pulsing-dot','icon-allow-overlap':true}});console.log(\"Maps debug 5\");map.on('click','places',function(e){var description=e.features[0].properties.description;var movementID=e.features[0].properties.movementID;var enter=e.features[0].properties.enter;var leave=e.features[0].properties.leave;// console.log(movementID)\nthat.getPeople(movementID,enter,leave);});map.on('mouseenter','places',function(e){// Change the cursor style as a UI indicator.\nmap.getCanvas().style.cursor='pointer';var coordinates=e.features[0].geometry.coordinates.slice();var description=e.features[0].properties.description;// Ensure that if the map is zoomed out such that multiple\n// copies of the feature are visible, the popup appears\n// over the copy being pointed to.\nwhile(Math.abs(e.lngLat.lng-coordinates[0])>180){coordinates[0]+=e.lngLat.lng>coordinates[0]?360:-360;}// Populate the popup and set its coordinates\n// based on the feature found.\npopup.setLngLat(coordinates).setHTML(description).addTo(map);});map.on('mouseleave','places',function(){map.getCanvas().style.cursor='';popup.remove();});}},{key:\"render\",value:function render(){var _this5=this;return/*#__PURE__*/React.createElement(\"div\",{style:{position:\"relative\",height:\"300px\",width:\"100%\"}},/*#__PURE__*/React.createElement(\"div\",{ref:function ref(el){return _this5.mapContainer=el;},style:{position:\"reletive\",width:\"inherit\",height:\"inherit\"}}));}}]);return Maps;}(React.Component);export default Maps;","map":{"version":3,"sources":["D:/DeployCSITWEBSITE/csit-website/src/Components/maps.js"],"names":["React","mapboxgl","accessToken","map","popup","source","Maps","props","state","lng","lat","zoom","movements","mapContainer","createRef","id","fetch","then","r","json","data","setState","catch","err","console","log","getMovements","UID","Map","container","style","center","size","popup2","Popup","closeButton","closeOnClick","pulsingDot","width","height","Uint8Array","onAdd","canvas","document","createElement","context","getContext","render","duration","t","performance","now","radius","outerRadius","clearRect","beginPath","arc","Math","PI","fillStyle","fill","strokeStyle","lineWidth","stroke","getImageData","triggerRepaint","addImage","pixelRatio","datetime","selection","date","Date","split","mon","day","year","fullTime","hh","min","sec","finalDatetime","timing","parseInt","enter","leave","callbackFromParent","key","sourceCaches","removeLayer","off","e","getCanvas","cursor","coordinates","features","geometry","slice","description","properties","abs","lngLat","setLngLat","setHTML","addTo","remove","removeSource","UPoints","x","datetimeEntered","datetimeLeft","locationShortaddress","getDatetime","locationLong","locationLat","UMovements","that","addSource","addLayer","on","movementID","getPeople","position","el","Component"],"mappings":"4mBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,QAAP,KAAqB,WAArB,CAEAA,QAAQ,CAACC,WAAT,CAAuB,+FAAvB,CAEA,GAAIC,CAAAA,GAAJ,CACA,GAAIC,CAAAA,KAAJ,CACA,GAAIC,CAAAA,MAAJ,C,GAEMC,CAAAA,I,wGAEF,cAAYC,KAAZ,CAAkB,sCACd,uBAAMA,KAAN,EAEA,MAAKC,KAAL,CAAa,CACTC,GAAG,CAAE,UADI,CAETC,GAAG,CAAE,QAFI,CAGTC,IAAI,CAAE,IAHG,CAITC,SAAS,CAAC,EAJD,CAAb,CAOA,MAAKC,YAAL,CAAoBb,KAAK,CAACc,SAAN,EAApB,CAVc,aAWjB,C,mEAEYC,E,CAAG,iBACZC,KAAK,oEAA6DD,EAA7D,EAAL,CAAwEE,IAAxE,CAA6E,SAAAC,CAAC,QAAIA,CAAAA,CAAC,CAACC,IAAF,EAAJ,EAA9E,EAA4FF,IAA5F,CAAiG,SAAAG,IAAI,QAAI,CAAA,MAAI,CAACC,QAAL,CAAc,CAACT,SAAS,CAACQ,IAAX,CAAd,CAAJ,EAArG,EAA0IE,KAA1I,CAAgJ,SAAAC,GAAG,CAAI,CAACC,OAAO,CAACC,GAAR,CAAYF,GAAZ,EAAiB,CAAzK,EACH,C,6DAEmB,CAChB,KAAKG,YAAL,CAAkB,KAAKnB,KAAL,CAAWoB,GAA7B,EAEAxB,GAAG,CAAG,GAAIF,CAAAA,QAAQ,CAAC2B,GAAb,CAAiB,CACnBC,SAAS,CAAE,KAAKhB,YADG,CAEnBiB,KAAK,CAAE,oCAFY,CAGnBC,MAAM,CAAE,CAAC,KAAKvB,KAAL,CAAWC,GAAZ,CAAiB,KAAKD,KAAL,CAAWE,GAA5B,CAHW,CAInBC,IAAI,CAAE,KAAKH,KAAL,CAAWG,IAJE,CAAjB,CAAN,CAOA,GAAIqB,CAAAA,IAAI,CAAG,GAAX,CAEA;AACA,GAAIC,CAAAA,MAAM,CAAG,GAAIhC,CAAAA,QAAQ,CAACiC,KAAb,CAAmB,CAC5BC,WAAW,CAAE,KADe,CAE5BC,YAAY,CAAE,KAFc,CAAnB,CAAb,CAKAhC,KAAK,CAAG6B,MAAR,CAEA,GAAII,CAAAA,UAAU,CAAG,CACbC,KAAK,CAAEN,IADM,CAEbO,MAAM,CAAEP,IAFK,CAGbZ,IAAI,CAAE,GAAIoB,CAAAA,UAAJ,CAAeR,IAAI,CAAGA,IAAP,CAAc,CAA7B,CAHO,CAKb;AACAS,KAAK,CAAE,gBAAY,CACf,GAAIC,CAAAA,MAAM,CAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAb,CACAF,MAAM,CAACJ,KAAP,CAAe,KAAKA,KAApB,CACAI,MAAM,CAACH,MAAP,CAAgB,KAAKA,MAArB,CACA,KAAKM,OAAL,CAAeH,MAAM,CAACI,UAAP,CAAkB,IAAlB,CAAf,CACH,CAXY,CAab;AACAC,MAAM,CAAE,iBAAY,CAChB,GAAIC,CAAAA,QAAQ,CAAG,IAAf,CACA,GAAIC,CAAAA,CAAC,CAAIC,WAAW,CAACC,GAAZ,GAAoBH,QAArB,CAAiCA,QAAzC,CAEA,GAAII,CAAAA,MAAM,CAAIpB,IAAI,CAAG,CAAR,CAAa,GAA1B,CACA,GAAIqB,CAAAA,WAAW,CAAIrB,IAAI,CAAG,CAAR,CAAa,GAAb,CAAmBiB,CAAnB,CAAuBG,MAAzC,CACA,GAAIP,CAAAA,OAAO,CAAG,KAAKA,OAAnB,CAEA;AACAA,OAAO,CAACS,SAAR,CAAkB,CAAlB,CAAqB,CAArB,CAAwB,KAAKhB,KAA7B,CAAoC,KAAKC,MAAzC,EACAM,OAAO,CAACU,SAAR,GACAV,OAAO,CAACW,GAAR,CACI,KAAKlB,KAAL,CAAa,CADjB,CAEI,KAAKC,MAAL,CAAc,CAFlB,CAGIc,WAHJ,CAII,CAJJ,CAKII,IAAI,CAACC,EAAL,CAAU,CALd,EAOJb,OAAO,CAACc,SAAR,CAAoB,uBAAyB,EAAIV,CAA7B,EAAkC,GAAtD,CACAJ,OAAO,CAACe,IAAR,GAEA;AACAf,OAAO,CAACU,SAAR,GACAV,OAAO,CAACW,GAAR,CACA,KAAKlB,KAAL,CAAa,CADb,CAEA,KAAKC,MAAL,CAAc,CAFd,CAGAa,MAHA,CAIA,CAJA,CAKAK,IAAI,CAACC,EAAL,CAAU,CALV,EAOAb,OAAO,CAACc,SAAR,CAAoB,wBAApB,CACAd,OAAO,CAACgB,WAAR,CAAsB,OAAtB,CACAhB,OAAO,CAACiB,SAAR,CAAoB,EAAI,GAAK,EAAIb,CAAT,CAAxB,CACAJ,OAAO,CAACe,IAAR,GACAf,OAAO,CAACkB,MAAR,GAEA;AACA,KAAK3C,IAAL,CAAYyB,OAAO,CAACmB,YAAR,CACZ,CADY,CAEZ,CAFY,CAGZ,KAAK1B,KAHO,CAIZ,KAAKC,MAJO,EAKVnB,IALF,CAOA;AACAjB,GAAG,CAAC8D,cAAJ,GAEA;AACA,MAAO,KAAP,CACC,CA/DY,CAAjB,CAkEA9D,GAAG,CAAC+D,QAAJ,CAAa,aAAb,CAA4B7B,UAA5B,CAAwC,CAAE8B,UAAU,CAAE,CAAd,CAAxC,EACH,C,gDAEWC,Q,CAAUC,S,CAAU,CAC5B,GAAIC,CAAAA,IAAI,CAAG,GAAIC,CAAAA,IAAJ,CAASH,QAAT,CAAX,CACAE,IAAI,CAAG,CAACA,IAAI,CAAG,EAAR,EAAYE,KAAZ,CAAkB,GAAlB,CAAP,CACA,GAAIC,CAAAA,GAAG,CAAGH,IAAI,CAAC,CAAD,CAAd,CACA,GAAII,CAAAA,GAAG,CAAGJ,IAAI,CAAC,CAAD,CAAd,CACA,GAAIK,CAAAA,IAAI,CAAGL,IAAI,CAAC,CAAD,CAAf,CACA,GAAIM,CAAAA,QAAQ,CAAGN,IAAI,CAAC,CAAD,CAAJ,CAAQE,KAAR,CAAc,GAAd,CAAf,CACA,GAAIK,CAAAA,EAAE,CAAGD,QAAQ,CAAC,CAAD,CAAjB,CACA,GAAIE,CAAAA,GAAG,CAAGF,QAAQ,CAAC,CAAD,CAAlB,CACA,GAAIG,CAAAA,GAAG,CAAGH,QAAQ,CAAC,CAAD,CAAlB,CAEA;AAEA,GAAII,CAAAA,aAAJ,CACA,GAAGX,SAAS,GAAK,GAAjB,CAAqB,CACjBW,aAAa,CAAGN,GAAG,CAAG,GAAN,CAAYD,GAAZ,CAAkB,GAAlB,CAAwBE,IAAxC,CACH,CAFD,IAGK,IAAGN,SAAS,GAAK,GAAjB,CAAqB,CACtB,GAAIY,CAAAA,MAAM,CAAG,IAAb,CACA,GAAGC,QAAQ,CAACL,EAAD,CAAR,GAAiB,EAApB,CAAuB,CACnBI,MAAM,CAAG,IAAT,CACH,CACD,GAAGC,QAAQ,CAACL,EAAD,CAAR,CAAe,EAAlB,CAAqB,CACjBA,EAAE,CAAGK,QAAQ,CAACL,EAAD,CAAR,CAAe,EAApB,CACAI,MAAM,CAAG,IAAT,CACH,CACDD,aAAa,CAAGH,EAAE,CAAG,GAAL,CAAWC,GAAX,CAAiB,GAAjB,CAAuBG,MAAvC,CACH,CAVI,IAWA,IAAGZ,SAAS,GAAK,IAAjB,CAAsB,CACvBW,aAAa,CAAG,GAAIT,CAAAA,IAAJ,CAASH,QAAT,CAAhB,CACH,CACD,MAAOY,CAAAA,aAAP,CACH,C,4CAESjE,E,CAAIoE,K,CAAOC,K,CACrB,iBACIpE,KAAK,oEAA6DD,EAA7D,EAAL,CAAwEE,IAAxE,CAA6E,SAAAC,CAAC,QAAIA,CAAAA,CAAC,CAACC,IAAF,EAAJ,EAA9E,EAA4FF,IAA5F,CAAiG,SAACG,IAAD,CAAU,CAAC,MAAI,CAACb,KAAL,CAAW8E,kBAAX,CAA8B,CAACjE,IAAI,CAACA,IAAN,CAAY+D,KAAK,CAACA,KAAlB,CAAyBC,KAAK,CAACA,KAA/B,CAA9B,EAAqE,CAAjL,EAAmL9D,KAAnL,CAAyL,SAAAC,GAAG,CAAI,CAACC,OAAO,CAACC,GAAR,CAAYF,GAAZ,EAAiB,CAAlN,EACH,C,+DAEmB,iBAEhBC,OAAO,CAACC,GAAR,CAAY,KAAKjB,KAAL,CAAWI,SAAvB,EAEA,IAAI,GAAI0E,CAAAA,GAAR,GAAenF,CAAAA,GAAG,CAAC2B,KAAJ,CAAUyD,YAAzB,CAAsC,CAClC/D,OAAO,CAACC,GAAR,CAAY6D,GAAZ,EACA,GAAGA,GAAG,EAAI,WAAV,CAAsB,CAClBnF,GAAG,CAACqF,WAAJ,CAAgBF,GAAhB,EACA,GAAGA,GAAG,EAAI,UAAV,CAAqB,CACjBnF,GAAG,CAACsF,GAAJ,CAAQ,OAAR,CAAiB,UAAjB,CAA6B,SAASC,CAAT,CAAW,CAEpC;AACH,CAHD,EAKAvF,GAAG,CAACsF,GAAJ,CAAQ,YAAR,CAAsB,UAAtB,CAAkC,SAASC,CAAT,CAAY,CAE1C;AACAvF,GAAG,CAACwF,SAAJ,GAAgB7D,KAAhB,CAAsB8D,MAAtB,CAA+B,SAA/B,CAEA,GAAIC,CAAAA,WAAW,CAAGH,CAAC,CAACI,QAAF,CAAW,CAAX,EAAcC,QAAd,CAAuBF,WAAvB,CAAmCG,KAAnC,EAAlB,CACA,GAAIC,CAAAA,WAAW,CAAGP,CAAC,CAACI,QAAF,CAAW,CAAX,EAAcI,UAAd,CAAyBD,WAA3C,CAEA;AACA;AACA;AACA,MAAOxC,IAAI,CAAC0C,GAAL,CAAST,CAAC,CAACU,MAAF,CAAS3F,GAAT,CAAeoF,WAAW,CAAC,CAAD,CAAnC,EAA0C,GAAjD,CAAsD,CAClDA,WAAW,CAAC,CAAD,CAAX,EAAkBH,CAAC,CAACU,MAAF,CAAS3F,GAAT,CAAeoF,WAAW,CAAC,CAAD,CAA1B,CAAgC,GAAhC,CAAsC,CAAC,GAAzD,CACH,CAED;AACA;AACAzF,KAAK,CAACiG,SAAN,CAAgBR,WAAhB,EAA6BS,OAA7B,CAAqCL,WAArC,EAAkDM,KAAlD,CAAwDpG,GAAxD,EACH,CAlBD,EAoBAA,GAAG,CAACsF,GAAJ,CAAQ,YAAR,CAAsB,UAAtB,CAAkC,UAAW,CACzCtF,GAAG,CAACwF,SAAJ,GAAgB7D,KAAhB,CAAsB8D,MAAtB,CAA+B,EAA/B,CACAxF,KAAK,CAACoG,MAAN,GACH,CAHD,EAIH,CACDrG,GAAG,CAACsG,YAAJ,CAAiBnB,GAAjB,EACH,CACD;AACH,CAED,GAAIoB,CAAAA,OAAO,CAAG,KAAKlG,KAAL,CAAWI,SAAX,CAAqBT,GAArB,CAAyB,SAAAwG,CAAC,CAAI,CACxC,MAAO,CACH,OAAQ,SADL,CAEH,aAAc,CACV,aAAcA,CAAC,CAAC5F,EADN,CAEV,QAAS4F,CAAC,CAACC,eAFD,CAGV,QAASD,CAAC,CAACE,YAHD,CAIV,gCACeF,CAAC,CAACG,oBADjB,sCACkE,MAAI,CAACC,WAAL,CAAiBJ,CAAC,CAACC,eAAnB,CAAoC,GAApC,CADlE,8BAC+H,MAAI,CAACG,WAAL,CAAiBJ,CAAC,CAACE,YAAnB,CAAiC,GAAjC,CAD/H,yBACoL,MAAI,CAACE,WAAL,CAAiBJ,CAAC,CAACE,YAAnB,CAAiC,GAAjC,CADpL,QAJU,CAFX,CASH,WAAY,CACR,OAAQ,OADA,CAER,cAAe,CAACF,CAAC,CAACK,YAAH,CAAiBL,CAAC,CAACM,WAAnB,CAFP,CATT,CAAP,CAcH,CAfa,CAAd,CAiBA,GAAIC,CAAAA,UAAU,CAAG,KAAK1G,KAAL,CAAWI,SAAX,CAAqBT,GAArB,CAAyB,SAAAwG,CAAC,CAAI,CAC3C,MAAO,CAACA,CAAC,CAACK,YAAH,CAAiBL,CAAC,CAACM,WAAnB,CAAP,CACH,CAFgB,CAAjB,CAIAzF,OAAO,CAACC,GAAR,CAAY,cAAZ,EAEA,GAAI0F,CAAAA,IAAI,CAAG,IAAX,CAEAhH,GAAG,CAACiH,SAAJ,CAAc,OAAd,CAAuB,CACnB,OAAQ,SADW,CAEnB,OAAQ,CACJ,OAAQ,SADJ,CAEJ,aAAc,EAFV,CAGJ,WAAY,CACR,OAAQ,YADA,CAER,cAAeF,UAFP,CAHR,CAFW,CAAvB,EAYA1F,OAAO,CAACC,GAAR,CAAY,cAAZ,EAEAtB,GAAG,CAACkH,QAAJ,CAAa,CACT,KAAM,OADG,CAET,OAAQ,MAFC,CAGT,SAAU,OAHD,CAIT,SAAU,CACN,YAAa,OADP,CAEN,WAAY,OAFN,CAJD,CAQT,QAAS,CACL,aAAc,MADT,CAEL,aAAc,CAFT,CARA,CAAb,EAcA7F,OAAO,CAACC,GAAR,CAAY,cAAZ,EAEAtB,GAAG,CAACiH,SAAJ,CAAc,QAAd,CAAwB,CACpB,OAAQ,SADY,CAEpB,OAAQ,CACJ,OAAQ,mBADJ,CAEJ,WAAYV,OAFR,CAFY,CAAxB,EAQAlF,OAAO,CAACC,GAAR,CAAY,cAAZ,EAEA;AACAtB,GAAG,CAACkH,QAAJ,CAAa,CACT,KAAM,QADG,CAET,OAAQ,QAFC,CAGT,SAAU,QAHD,CAIT,SAAU,CACN;AACA;AACA,aAAc,aAHR,CAIN,qBAAsB,IAJhB,CAJD,CAAb,EAYA7F,OAAO,CAACC,GAAR,CAAY,cAAZ,EAEAtB,GAAG,CAACmH,EAAJ,CAAO,OAAP,CAAgB,QAAhB,CAA0B,SAAS5B,CAAT,CAAW,CACjC,GAAIO,CAAAA,WAAW,CAAGP,CAAC,CAACI,QAAF,CAAW,CAAX,EAAcI,UAAd,CAAyBD,WAA3C,CACA,GAAIsB,CAAAA,UAAU,CAAG7B,CAAC,CAACI,QAAF,CAAW,CAAX,EAAcI,UAAd,CAAyBqB,UAA1C,CACA,GAAIpC,CAAAA,KAAK,CAAGO,CAAC,CAACI,QAAF,CAAW,CAAX,EAAcI,UAAd,CAAyBf,KAArC,CACA,GAAIC,CAAAA,KAAK,CAAGM,CAAC,CAACI,QAAF,CAAW,CAAX,EAAcI,UAAd,CAAyBd,KAArC,CACA;AACA+B,IAAI,CAACK,SAAL,CAAeD,UAAf,CAA2BpC,KAA3B,CAAkCC,KAAlC,EACH,CAPD,EASAjF,GAAG,CAACmH,EAAJ,CAAO,YAAP,CAAqB,QAArB,CAA+B,SAAS5B,CAAT,CAAY,CACvC;AACAvF,GAAG,CAACwF,SAAJ,GAAgB7D,KAAhB,CAAsB8D,MAAtB,CAA+B,SAA/B,CAEA,GAAIC,CAAAA,WAAW,CAAGH,CAAC,CAACI,QAAF,CAAW,CAAX,EAAcC,QAAd,CAAuBF,WAAvB,CAAmCG,KAAnC,EAAlB,CACA,GAAIC,CAAAA,WAAW,CAAGP,CAAC,CAACI,QAAF,CAAW,CAAX,EAAcI,UAAd,CAAyBD,WAA3C,CAEA;AACA;AACA;AACA,MAAOxC,IAAI,CAAC0C,GAAL,CAAST,CAAC,CAACU,MAAF,CAAS3F,GAAT,CAAeoF,WAAW,CAAC,CAAD,CAAnC,EAA0C,GAAjD,CAAsD,CAClDA,WAAW,CAAC,CAAD,CAAX,EAAkBH,CAAC,CAACU,MAAF,CAAS3F,GAAT,CAAeoF,WAAW,CAAC,CAAD,CAA1B,CAAgC,GAAhC,CAAsC,CAAC,GAAzD,CACH,CAED;AACA;AACAzF,KAAK,CAACiG,SAAN,CAAgBR,WAAhB,EAA6BS,OAA7B,CAAqCL,WAArC,EAAkDM,KAAlD,CAAwDpG,GAAxD,EACH,CAjBD,EAmBAA,GAAG,CAACmH,EAAJ,CAAO,YAAP,CAAqB,QAArB,CAA+B,UAAW,CACtCnH,GAAG,CAACwF,SAAJ,GAAgB7D,KAAhB,CAAsB8D,MAAtB,CAA+B,EAA/B,CACAxF,KAAK,CAACoG,MAAN,GACH,CAHD,EAIH,C,uCAEO,iBAEJ,mBACI,2BAAK,KAAK,CAAE,CAACiB,QAAQ,CAAC,UAAV,CAAqBlF,MAAM,CAAC,OAA5B,CAAqCD,KAAK,CAAC,MAA3C,CAAZ,eACI,2BAAK,GAAG,CAAE,aAAAoF,EAAE,QAAI,CAAA,MAAI,CAAC7G,YAAL,CAAoB6G,EAAxB,EAAZ,CAAwC,KAAK,CAAE,CAACD,QAAQ,CAAC,UAAV,CAAsBnF,KAAK,CAAC,SAA5B,CAAuCC,MAAM,CAAC,SAA9C,CAA/C,EADJ,CADJ,CAMH,C,kBAzTcvC,KAAK,CAAC2H,S,EA4TzB,cAAerH,CAAAA,IAAf","sourcesContent":["import React from 'react'\r\nimport mapboxgl from 'mapbox-gl';\r\n\r\nmapboxgl.accessToken = 'pk.eyJ1IjoiYXF1YWltcGFjdCIsImEiOiJja2R0d2N3emswdzlwMnptcGliNTk4ZHNkIn0.jPYEzZD-aErgL25Zx9N_Kg';\r\n\r\nlet map\r\nlet popup\r\nlet source\r\n\r\nclass Maps extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        \r\n        this.state = {\r\n            lng: 103.851959,\r\n            lat: 1.290270,\r\n            zoom: 10.5,\r\n            movements:[],\r\n        };\r\n\r\n        this.mapContainer = React.createRef();\r\n    }\r\n\r\n    getMovements(id){\r\n        fetch(`https://internshipcsit.herokuapp.com/getMovementbyID?IDs=${id}`).then(r => r.json()).then(data => this.setState({movements:data})).catch(err => {console.log(err)})\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getMovements(this.props.UID)\r\n\r\n        map = new mapboxgl.Map({\r\n            container: this.mapContainer,\r\n            style: 'mapbox://styles/mapbox/streets-v11',\r\n            center: [this.state.lng, this.state.lat],\r\n            zoom: this.state.zoom\r\n        });\r\n\r\n        var size = 100\r\n        \r\n        // Create a popup, but don't add it to the map yet.\r\n        var popup2 = new mapboxgl.Popup({\r\n            closeButton: false,\r\n            closeOnClick: false\r\n        });\r\n\r\n        popup = popup2\r\n\r\n        var pulsingDot = {\r\n            width: size,\r\n            height: size,\r\n            data: new Uint8Array(size * size * 4),\r\n             \r\n            // get rendering context for the map canvas when layer is added to the map\r\n            onAdd: function () {\r\n                var canvas = document.createElement('canvas');\r\n                canvas.width = this.width;\r\n                canvas.height = this.height;\r\n                this.context = canvas.getContext('2d');\r\n            },\r\n             \r\n            // called once before every frame where the icon will be used\r\n            render: function () {\r\n                var duration = 1000;\r\n                var t = (performance.now() % duration) / duration;\r\n                \r\n                var radius = (size / 2) * 0.3;\r\n                var outerRadius = (size / 2) * 0.7 * t + radius;\r\n                var context = this.context;\r\n                \r\n                // draw outer circle\r\n                context.clearRect(0, 0, this.width, this.height);\r\n                context.beginPath();\r\n                context.arc(\r\n                    this.width / 2,\r\n                    this.height / 2,\r\n                    outerRadius,\r\n                    0,\r\n                    Math.PI * 2\r\n                );\r\n            context.fillStyle = 'rgba(255, 200, 200,' + (1 - t) + ')';\r\n            context.fill();\r\n             \r\n            // draw inner circle\r\n            context.beginPath();\r\n            context.arc(\r\n            this.width / 2,\r\n            this.height / 2,\r\n            radius,\r\n            0,\r\n            Math.PI * 2\r\n            );\r\n            context.fillStyle = 'rgba(255, 100, 100, 1)';\r\n            context.strokeStyle = 'white';\r\n            context.lineWidth = 2 + 4 * (1 - t);\r\n            context.fill();\r\n            context.stroke();\r\n             \r\n            // update this image's data with data from the canvas\r\n            this.data = context.getImageData(\r\n            0,\r\n            0,\r\n            this.width,\r\n            this.height\r\n            ).data;\r\n             \r\n            // continuously repaint the map, resulting in the smooth animation of the dot\r\n            map.triggerRepaint();\r\n             \r\n            // return `true` to let the map know that the image was updated\r\n            return true;\r\n            }\r\n        };\r\n\r\n        map.addImage('pulsing-dot', pulsingDot, { pixelRatio: 2 });\r\n    }\r\n\r\n    getDatetime(datetime, selection){\r\n        let date = new Date(datetime)\r\n        date = (date + \"\").split(\" \")\r\n        let mon = date[1]\r\n        let day = date[2]\r\n        let year = date[3]\r\n        let fullTime = date[4].split(\":\")\r\n        let hh = fullTime[0]\r\n        let min = fullTime[1]\r\n        let sec = fullTime[2]\r\n\r\n        // const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n\r\n        let finalDatetime\r\n        if(selection === \"d\"){\r\n            finalDatetime = day + \" \" + mon + \" \" + year\r\n        }\r\n        else if(selection === \"t\"){\r\n            let timing = \"AM\"\r\n            if(parseInt(hh) === 12){\r\n                timing = \"PM\"\r\n            }\r\n            if(parseInt(hh) > 12){\r\n                hh = parseInt(hh) - 12\r\n                timing = \"PM\"\r\n            }\r\n            finalDatetime = hh + \":\" + min + \" \" + timing\r\n        }\r\n        else if(selection === \"dt\"){\r\n            finalDatetime = new Date(datetime)\r\n        }\r\n        return finalDatetime\r\n    }\r\n\r\n    getPeople(id, enter, leave)\r\n    {\r\n        fetch(`https://internshipcsit.herokuapp.com/getPeopleTiming?IDs=${id}`).then(r => r.json()).then((data) => {this.props.callbackFromParent({data:data, enter:enter, leave:leave})}).catch(err => {console.log(err)})\r\n    }\r\n\r\n    componentDidUpdate(){\r\n\r\n        console.log(this.state.movements)\r\n\r\n        for(var key in map.style.sourceCaches){\r\n            console.log(key)\r\n            if(key != 'composite'){\r\n                map.removeLayer(key)\r\n                if(key == \"placeIDs\"){\r\n                    map.off('click', 'placeIDs', function(e){\r\n        \r\n                        // that.getPeople(movementID, enter, leave)\r\n                    });\r\n        \r\n                    map.off('mouseenter', 'placeIDs', function(e) {\r\n        \r\n                        // Change the cursor style as a UI indicator.\r\n                        map.getCanvas().style.cursor = 'pointer';\r\n                        \r\n                        var coordinates = e.features[0].geometry.coordinates.slice();\r\n                        var description = e.features[0].properties.description;\r\n        \r\n                        // Ensure that if the map is zoomed out such that multiple\r\n                        // copies of the feature are visible, the popup appears\r\n                        // over the copy being pointed to.\r\n                        while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {\r\n                            coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;\r\n                        }\r\n                        \r\n                        // Populate the popup and set its coordinates\r\n                        // based on the feature found.\r\n                        popup.setLngLat(coordinates).setHTML(description).addTo(map);\r\n                    });\r\n                        \r\n                    map.off('mouseleave', 'placeIDs', function() {\r\n                        map.getCanvas().style.cursor = '';\r\n                        popup.remove();\r\n                    });\r\n                }\r\n                map.removeSource(key)\r\n            }\r\n            // console.log(map.getStyle().layers)\r\n        }\r\n\r\n        let UPoints = this.state.movements.map(x => {\r\n            return({\r\n                'type': 'Feature',\r\n                'properties': {\r\n                    'movementID': x.id,\r\n                    'enter': x.datetimeEntered,\r\n                    'leave': x.datetimeLeft,\r\n                    'description':\r\n                        `<strong>${x.locationShortaddress}</strong><p>Time Entered: ${this.getDatetime(x.datetimeEntered, 't')}</p><p>Time Left: ${this.getDatetime(x.datetimeLeft, 't')}</p><p>Date: ${this.getDatetime(x.datetimeLeft, 'd')}</p>`\r\n                    },\r\n                'geometry': {\r\n                    'type': 'Point',\r\n                    'coordinates': [x.locationLong, x.locationLat]\r\n                }\r\n            })\r\n        })\r\n\r\n        let UMovements = this.state.movements.map(x => {\r\n            return([x.locationLong, x.locationLat])\r\n        })\r\n\r\n        console.log(\"Maps debug 1\")\r\n\r\n        let that = this\r\n       \r\n        map.addSource('route', {\r\n            'type': 'geojson',\r\n            'data': {\r\n                'type': 'Feature',\r\n                'properties': {},\r\n                'geometry': {\r\n                    'type': 'LineString',\r\n                    'coordinates': UMovements\r\n                }\r\n            }\r\n        });\r\n\r\n        console.log(\"Maps debug 2\")\r\n        \r\n        map.addLayer({\r\n            'id': 'route',\r\n            'type': 'line',\r\n            'source': 'route',\r\n            'layout': {\r\n                'line-join': 'round',\r\n                'line-cap': 'round'\r\n            },\r\n            'paint': {\r\n                'line-color': '#888',\r\n                'line-width': 5\r\n            }\r\n        });\r\n\r\n        console.log(\"Maps debug 3\")\r\n\r\n        map.addSource('places', {\r\n            'type': 'geojson',\r\n            'data': {\r\n                'type': 'FeatureCollection',\r\n                'features': UPoints\r\n            }\r\n        });\r\n\r\n        console.log(\"Maps debug 4\")\r\n        \r\n        // Add a layer showing the places.\r\n        map.addLayer({\r\n            'id': 'places',\r\n            'type': 'symbol',\r\n            'source': 'places',\r\n            'layout': {\r\n                // \"line-cap\": \"round\",\r\n                // \"line-join\": \"round\"\r\n                'icon-image': 'pulsing-dot',\r\n                'icon-allow-overlap': true\r\n            }\r\n        });\r\n\r\n        console.log(\"Maps debug 5\")\r\n        \r\n        map.on('click', 'places', function(e){\r\n            var description = e.features[0].properties.description;\r\n            var movementID = e.features[0].properties.movementID;\r\n            var enter = e.features[0].properties.enter;\r\n            var leave = e.features[0].properties.leave;\r\n            // console.log(movementID)\r\n            that.getPeople(movementID, enter, leave)\r\n        });\r\n\r\n        map.on('mouseenter', 'places', function(e) {\r\n            // Change the cursor style as a UI indicator.\r\n            map.getCanvas().style.cursor = 'pointer';\r\n            \r\n            var coordinates = e.features[0].geometry.coordinates.slice();\r\n            var description = e.features[0].properties.description;\r\n            \r\n            // Ensure that if the map is zoomed out such that multiple\r\n            // copies of the feature are visible, the popup appears\r\n            // over the copy being pointed to.\r\n            while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {\r\n                coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;\r\n            }\r\n            \r\n            // Populate the popup and set its coordinates\r\n            // based on the feature found.\r\n            popup.setLngLat(coordinates).setHTML(description).addTo(map);\r\n        });\r\n            \r\n        map.on('mouseleave', 'places', function() {\r\n            map.getCanvas().style.cursor = '';\r\n            popup.remove();\r\n        });\r\n    }\r\n\r\n    render(){\r\n\r\n        return(\r\n            <div style={{position:\"relative\",height:\"300px\", width:\"100%\"}}>\r\n                <div ref={el => this.mapContainer = el} style={{position:\"reletive\", width:\"inherit\", height:\"inherit\"}}/>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default Maps"]},"metadata":{},"sourceType":"module"}