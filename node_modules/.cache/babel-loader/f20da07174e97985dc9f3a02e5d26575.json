{"ast":null,"code":"import _defineProperty from\"D:\\\\DeployCSITWEBSITE\\\\csit-website\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"D:\\\\DeployCSITWEBSITE\\\\csit-website\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _createForOfIteratorHelper from\"D:\\\\DeployCSITWEBSITE\\\\csit-website\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createForOfIteratorHelper\";import _classCallCheck from\"D:\\\\DeployCSITWEBSITE\\\\csit-website\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\DeployCSITWEBSITE\\\\csit-website\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _assertThisInitialized from\"D:\\\\DeployCSITWEBSITE\\\\csit-website\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";import _inherits from\"D:\\\\DeployCSITWEBSITE\\\\csit-website\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"D:\\\\DeployCSITWEBSITE\\\\csit-website\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{useRef}from'react';import*as rb from'react-bootstrap';import{ReactComponent as Logo}from\"@svgr/webpack?-svgo,+titleProp,+ref!../Imgs/upload.svg\";import Papa from'papaparse';import axios from'axios';import Graph from'./Graphs/Graphs';import Table from'./Tables/Table';import Table2 from'./Tables/Table2';import ProfileModal from'./ProfileModal';import MainMap from'./MainMap';// import Chip from '@material-ui/core/Chip';\nvar TopNavBar=/*#__PURE__*/function(_React$Component){_inherits(TopNavBar,_React$Component);var _super=_createSuper(TopNavBar);function TopNavBar(props){var _this;_classCallCheck(this,TopNavBar);_this=_super.call(this,props);_this.myCallback=function(dataFromChild){// console.log(\"Data1:\" + dataFromChild)\n_this.setState({CCID:dataFromChild});};_this.myCallback2=function(dataFromChild){// console.log(\"Data2:\" + dataFromChild)\n_this.setState({fromCCID:dataFromChild});};_this.databackTable=function(dataFromChild){_this.setState({profileModal:dataFromChild});_this.setState({showSelection2:true});};_this.toCCClicked=function(){var IDs=[];if(_this.state.datas.length>0){var placename=_this.state.datas[0].locationShortaddress;// console.log(this.state.CCID)\n_this.state.datas.map(function(x){var _iterator=_createForOfIteratorHelper(_this.state.CCID),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var data=_step.value;// console.log(data)\nif(x.peopleProfileId==data){IDs.push(x.peopleProfileId);}}}catch(err){_iterator.e(err);}finally{_iterator.f();}});// console.log(\"TO: \" + IDs)\nvar newItem=_objectSpread(_objectSpread({},_this.state.CloseContacts),{},_defineProperty({},placename,IDs));_this.setState({CloseContacts:newItem});}};_this.fromCCClicked=function(){if(_this.state.datas.length>0){var placename=_this.state.datas[0].locationShortaddress;var IDs=_this.state.CloseContacts[placename].filter(function(x){return _this.state.fromCCID.includes(x)===false;}).map(function(x){return x;});// console.log(\"From: \" + IDs)\nvar newItem=_objectSpread(_objectSpread({},_this.state.CloseContacts),{},_defineProperty({},placename,IDs));// console.log(\"Items:\" + newItem)\n_this.setState({CloseContacts:newItem});}};_this.dataRetrievedMap=function(dataFromChild){_this.setState({mapData:dataFromChild});};_this.uploadFile=_this.uploadFile.bind(_assertThisInitialized(_this));_this.uploadFile2=_this.uploadFile2.bind(_assertThisInitialized(_this));_this.handleClick=_this.handleClick.bind(_assertThisInitialized(_this));_this.handleClick2=_this.handleClick2.bind(_assertThisInitialized(_this));_this.state={dropDownValue:\"None\",dataList:[\"None\"],suspectCases:[],movements:[],error:false,errorMsg:\"\",showModal:false,filenames:[],series:{},datas:[],placename:\"\",datetime:[],showSelection:false,CCID:[],CloseContacts:{},fromCCID:[],profileModal:{},showSelection2:false,mapData:[]};return _this;}_createClass(TopNavBar,[{key:\"importCompleted\",value:function importCompleted(){var list=this.state;this.props.handleData(list);return;}// // Suspect Profile File Upload\n// handleClick(e) {\n//     this.refs.fileUploader.click();\n// }\n// //Suspect Movement File Upload\n// handleClick2(e) {\n//     this.refs.fileUploader2.click();\n// }\n// // Suspect File Upload\n// uploadFile(event) {\n//     const file = event.target.files[0]\n//     if(file){\n//         if (file.name.includes(\"_suspected\")){\n//             this.setState({filenames:[...this.state.filenames, file.name]})\n//             const reader = new FileReader();\n//             reader.onload = () => {\n//                 // Use reader.result\n//                 const lols = Papa.parse(reader.result, {header: true, skipEmptyLines: true}, )\n//                 // console.log(lols.data)\n//                 // Posting csv data into db\n//                 // this.postData('\"' + JSON.stringify(lols.data) + '\"')\n//                 // this.postSuspects(JSON.stringify(lols.data))\n//                 // Adds names into dropdown\n//                 this.setState({dataList: [\"All Suspected Cases\", ...lols.data.map(names => names.firstName + \" \" + names.lastName)]})\n//                 const data = lols.data\n//                 this.setState({suspectCases: data})\n//             }\n//             reader.readAsText(file)\n//         }\n//         else{\n//             this.setState({error:true, errorMsg:\"You have uploaded invalid files! Please rename the file to <filename>_suspected (For suspected cases)\"})\n//             return\n//         }\n//     }\n// }\n// // Movement File Upload\n// uploadFile2(event) {\n//     const file = event.target.files[0]\n//     if(file){\n//         if (file.name.includes(\"_movements\")){\n//             this.setState({filenames:[...this.state.filenames, file.name]})\n//             const reader = new FileReader();\n//             reader.onload = () => {\n//                 // Use reader.result\n//                 const lols = Papa.parse(reader.result, {header: true, skipEmptyLines: true}, )\n//                 // console.log(lols.data)\n//                 // Posting csv data into db\n//                 // this.postData('\"' + JSON.stringify(lols.data) + '\"')\n//                 // this.postMovements(JSON.stringify(lols.data))\n//                 const data = lols.data\n//                 this.setState({movements: data})\n//             }\n//             reader.readAsText(file)\n//         }\n//         else{\n//             this.setState({error:true, errorMsg:\"You have uploaded invalid files! Please rename the file to <filename>_movement (For suspected case movement)\"})\n//             return\n//         }\n//     }\n// }\n},{key:\"dropdownClicked\",value:function dropdownClicked(text){this.setState({dropDownValue:text});}},{key:\"convertDate\",value:function convertDate(date){var lol=date;var dateTimeParts=lol.split(' ');// console.log(dateTimeParts)\nvar dateParts=dateTimeParts[0].split('/');var timeParts=dateTimeParts[1].split(':');var timeOfDay=dateTimeParts[2];if(timeOfDay===\"pm\"){timeParts[0]+=12;}// new Date(year, month, day, hours, minutes, seconds, milliseconds)\nvar finalDate=new Date(dateParts[2],dateParts[1]-1,dateParts[0],timeParts[0],timeParts[1]);// console.log(finalDate)\nreturn finalDate.getTime();}//// ### UNCOMMENT FOR GANTT CHART ###\n// Gantt Chart Data Formatter from movements and suspects\n},{key:\"populateGraph1\",value:function populateGraph1(){var _this2=this;var series2=[];var string=this.state.mapData;var numbers=string.match(/\\d+/g).map(Number);// console.log(numbers)\n// console.log(this.state.suspectCases)\nnumbers.forEach(function(x){var data=[];var m1=_this2.state.movements.filter(function(moves){return moves.id===x.toString();})[0];var p1=_this2.state.suspectCases.filter(function(sus){return sus.id===m1.suspectId;})[0];data.push({x:m1.locationShortaddress,y:[_this2.convertDate(m1.datetimeEntered),_this2.convertDate(m1.datetimeLeft)]});series2.push({name:p1.firstName+\" \"+p1.lastName,data:data});});console.log(series2);// console.log(this.state.mapData[0])\n// if(Array.isArray(this.state.mapData)){\n//     console.log(\"NAY\")\n//     \n// }\n// this.state.suspectCases.forEach(suspect => {\n//     let data = []\n//     this.state.movements.filter(moves => moves.suspectId === suspect.id).forEach(movement => {\n//         data.push(\n//             {\n//                 x: movement.locationShortaddress,\n//                 y: [this.convertDate(movement.datetimeEntered),this.convertDate(movement.datetimeLeft)]\n//             }\n//         )\n//     })\n//     series2.push(\n//         {\n//             name: suspect.firstName + \" \" + suspect.lastName,\n//             data: data\n//         }\n//     )\n// })\nreturn series2;}},{key:\"convertSQLDate\",value:function convertSQLDate(startDate1,endDate){var type=arguments.length>2&&arguments[2]!==undefined?arguments[2]:undefined;if(startDate1!==undefined&&endDate!==undefined){var date=new Date(startDate1);var date2=date.toString().split(\" \");var time=date2[4].split(\":\");var date1=new Date(endDate);var date21=date1.toString().split(\" \");var time1=date21[4].split(\":\");var str;if(type===\"header\"){str=time[0]+\":\"+time[1]+\" - \"+time1[0]+\":\"+time1[1];}else{str=date2[2]+\" \"+date2[1]+\", \"+time[0]+\":\"+time[1]+\" - \"+time1[0]+\":\"+time1[1];}return str;}// return date2[1]\n}},{key:\"isEmptyObject\",value:function isEmptyObject(obj){return!!obj&&Object.keys(obj).length===0&&obj.constructor===Object;}},{key:\"compare\",value:function compare(arr1,arr2){var _this3=this;if(!arr1||!arr2)return;var result;arr1.forEach(function(e1,i){return arr2.forEach(function(e2){if(e1.length>1&&e2.length){result=_this3.compare(e1,e2);}else if(e1!==e2){result=false;}else{result=true;}});});return result;}},{key:\"render\",value:function render(){var _this4=this;var suspected=this.state.dataList.map(function(sus){return/*#__PURE__*/React.createElement(rb.NavDropdown.Item,{eventKey:Math.random()},sus);});var displaySetting,displaySetting2,seriesdata;//// ### UNCOMMENT FOR GANTT CHART ###\nvar test;if(this.state.suspectCases.length>0&&this.state.movements.length>0){displaySetting=\"none\";displaySetting2=\"block\";}else{displaySetting=\"block\";displaySetting2=\"none\";}var graph1,graph11;var that=this;var placename;//// ### UNCOMMENT FOR GANTT CHART ###\nif(this.state.mapData!=\"\"){console.log(\"YAY\");test=this.populateGraph1();}//// ### UNCOMMENT FOR GANTT CHART ###\nif(test!==undefined){var options={options:{chart:{height:450,type:'rangeBar',events:{dataPointSelection:function dataPointSelection(event,chartContext,config){// Name of place\n// console.log(test[config.seriesIndex].data[config.dataPointIndex].x)\nthat.setState({placename:test[config.seriesIndex].data[config.dataPointIndex].x,datetime:test[config.seriesIndex].data[config.dataPointIndex].y});// For the time\n// console.log(test[config.seriesIndex].data[config.dataPointIndex].y)\n// For the Name\n// console.log(test[config.seriesIndex].name)\nplacename=test[config.seriesIndex].data[config.dataPointIndex].x;fetch(\"http://localhost:8080/getMovementForDate?placeName=\"+test[config.seriesIndex].data[config.dataPointIndex].x+\"&dates=\"+test[config.seriesIndex].data[config.dataPointIndex].y+\"&personName=\"+test[config.seriesIndex].name).then(function(response){return response.json();}).then(function(data){return that.setState({datas:data});}).catch(function(err){console.log(err);});}}},plotOptions:{bar:{horizontal:true,barHeight:'80%'}},xaxis:{type:'datetime'},stroke:{width:1},fill:{type:'solid',opacity:0.6},legend:{position:'top',horizontalAlign:'left'}}};graph1=/*#__PURE__*/React.createElement(Graph,{display:displaySetting2,options:options.options,series:test,tool:true});}// Creating the COnfirmed Cases\nvar mappingsCC=this.state.datas.filter(function(data){return data.caseNumber!=null;}).map(function(data){return{caseNumber:data.caseNumber,UID:data.peopleProfileId,name:data.firstName+\" \"+data.lastName,place:data.locationShortaddress,datetime:_this4.convertSQLDate(data.datetimeEntered,data.datetimeLeft)};});// Creating the Public at the place List\nvar mappingsPATP;// Checks if there are any close contacts be begin with. If there are none than the below will run\nif(this.isEmptyObject(this.state.CloseContacts)){mappingsPATP=this.state.datas.filter(function(data){return data.caseNumber==null;}).map(function(data){return{UID:data.peopleProfileId,name:data.firstName+\" \"+data.lastName,place:data.locationShortaddress,datetime:_this4.convertSQLDate(data.datetimeEntered,data.datetimeLeft)};});}// If you added the close contacts, no need to be for the current place (any place), then the below will run\nelse{var newlist=[];this.state.datas.filter(function(data){return data.caseNumber==null;}).map(function(data){// Checks if the place that the user has clicked on contains any close contacts assigned to it. If there are, then it will take away all the people that are in the close \n// contact list from the PATP\nif(_this4.state.CloseContacts[data.locationShortaddress]!=undefined){// console.log(\"Logged: \" + this.state.CloseContacts[placename] + \": \" + Array.isArray(this.state.CloseContacts[placename]))\nif(_this4.state.CloseContacts[data.locationShortaddress].includes(data.peopleProfileId)===false){newlist.push({UID:data.peopleProfileId,name:data.firstName+\" \"+data.lastName,place:data.locationShortaddress,datetime:_this4.convertSQLDate(data.datetimeEntered,data.datetimeLeft)});}}// If there isnt any close contacts then it will just return all the people from the PTAP back to PTAP\nelse{newlist.push({UID:data.peopleProfileId,name:data.firstName+\" \"+data.lastName,place:data.locationShortaddress,datetime:_this4.convertSQLDate(data.datetimeEntered,data.datetimeLeft)});}});mappingsPATP=newlist;}//Mapping the Contacts\nvar newlist2=[];this.state.datas.filter(function(data){return data.caseNumber==null;}).map(function(data){if(_this4.state.CloseContacts[data.locationShortaddress]!=undefined){if(_this4.state.CloseContacts[data.locationShortaddress].includes(data.peopleProfileId)){newlist2.push({UID:data.peopleProfileId,name:data.firstName+\" \"+data.lastName,place:data.locationShortaddress,datetime:_this4.convertSQLDate(data.datetimeEntered,data.datetimeLeft)});}}});var mappingsclose=newlist2;// console.log(this.state.showSelection2)\nreturn/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{style:{display:displaySetting2}},/*#__PURE__*/React.createElement(\"div\",{style:{textAlign:\"left\",height:\"100%\",float:\"left\",width:\"50%\"}}),/*#__PURE__*/React.createElement(\"div\",{style:{float:\"left\",width:\"50%\"}},/*#__PURE__*/React.createElement(rb.Tabs,{defaultActiveKey:\"home\",id:\"uncontrolled-tab-example\"},/*#__PURE__*/React.createElement(rb.Tab,{eventKey:\"home\",title:\"CONFIRMED CASES\"},/*#__PURE__*/React.createElement(\"div\",{style:{textAlign:\"left\",height:\"100%\"}},/*#__PURE__*/React.createElement(\"h5\",null,/*#__PURE__*/React.createElement(rb.Badge,{pill:true,variant:\"primary\"},this.state.placename),' ',/*#__PURE__*/React.createElement(rb.Badge,{pill:true,variant:\"primary\"},this.convertSQLDate(this.state.datetime[0],this.state.datetime[1],\"header\"))),/*#__PURE__*/React.createElement(Table,{tableprops:mappingsCC,display:displaySetting2,type:\"CC\",databack:this.databackTable}))),/*#__PURE__*/React.createElement(rb.Tab,{eventKey:\"profile\",title:\"CLOSE CONTACT\"},/*#__PURE__*/React.createElement(\"div\",{style:{textAlign:\"left\",height:\"100%\"}},/*#__PURE__*/React.createElement(\"h5\",null,/*#__PURE__*/React.createElement(rb.Badge,{pill:true,variant:\"primary\"},this.state.placename),' ',/*#__PURE__*/React.createElement(rb.Badge,{pill:true,variant:\"primary\"},this.convertSQLDate(this.state.datetime[0],this.state.datetime[1],\"header\"))),/*#__PURE__*/React.createElement(Table,{tableprops:mappingsclose,display:displaySetting2,type:\"PATP\",databack:this.databackTable}),/*#__PURE__*/React.createElement(rb.Button,{onClick:function onClick(){return _this4.setState({showSelection:true});}},\"Manual Import\"))),/*#__PURE__*/React.createElement(rb.Tab,{eventKey:\"contact\",title:\"PUBLIC AT THE PLACE\"},/*#__PURE__*/React.createElement(\"div\",{style:{textAlign:\"left\",height:\"100%\"}},/*#__PURE__*/React.createElement(\"h5\",null,/*#__PURE__*/React.createElement(rb.Badge,{pill:true,variant:\"primary\"},this.state.placename),' ',/*#__PURE__*/React.createElement(rb.Badge,{pill:true,variant:\"primary\"},this.convertSQLDate(this.state.datetime[0],this.state.datetime[1],\"header\"))),/*#__PURE__*/React.createElement(Table,{tableprops:mappingsPATP,display:displaySetting2,type:\"PATP\",databack:this.databackTable}))))),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(rb.Modal,{show:this.state.showSelection,onHide:function onHide(){return _this4.setState({showSelection:false});},centered:true,size:\"xl\",scrollable:true},/*#__PURE__*/React.createElement(rb.Modal.Header,{closeButton:true},/*#__PURE__*/React.createElement(rb.Modal.Title,null,\"Transfer Users\")),/*#__PURE__*/React.createElement(rb.Modal.Body,null,/*#__PURE__*/React.createElement(\"div\",{style:{float:\"left\",textAlign:\"center\",width:\"40%\"}},/*#__PURE__*/React.createElement(\"text\",{fontSize:\"20px\"},/*#__PURE__*/React.createElement(\"b\",null,\"Close Contact With Public\")),/*#__PURE__*/React.createElement(\"div\",{style:{backgroundColor:\"#F9F9F9\"}},/*#__PURE__*/React.createElement(Table2,{tableprops:mappingsclose,display:displaySetting2,type:\"modal-edit\",callbackFromParent:this.myCallback2,databack:this.databackTable}))),/*#__PURE__*/React.createElement(\"div\",{style:{float:\"left\",textAlign:\"center\",width:\"20%\",alignItems:\"center\",justifyContent:\"center\"}},/*#__PURE__*/React.createElement(rb.Button,{onClick:this.toCCClicked},\" < < \"),/*#__PURE__*/React.createElement(\"div\",{className:\"clearfix\"}),/*#__PURE__*/React.createElement(rb.Button,{onClick:this.fromCCClicked},\" > > \")),/*#__PURE__*/React.createElement(\"div\",{style:{float:\"right\",textAlign:\"center\",width:\"40%\"}},/*#__PURE__*/React.createElement(\"text\",{fontSize:\"20px\"},/*#__PURE__*/React.createElement(\"b\",null,\"Public At The Place\")),/*#__PURE__*/React.createElement(\"div\",{style:{backgroundColor:\"#F9F9F9\"}},/*#__PURE__*/React.createElement(Table,{tableprops:mappingsPATP,display:displaySetting2,type:\"modal-edit\",callbackFromParent:this.myCallback,databack:this.databackTable})))),/*#__PURE__*/React.createElement(rb.Modal.Footer,null,/*#__PURE__*/React.createElement(rb.Button,{variant:\"secondary\",onClick:function onClick(){return _this4.setState({showSelection:false});}},\"Close\")))),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(rb.Modal,{show:this.state.showSelection2,onHide:function onHide(){return _this4.setState({showSelection2:false});},size:\"xl\",centered:true,scrollable:true},/*#__PURE__*/React.createElement(rb.Modal.Header,{closeButton:true},/*#__PURE__*/React.createElement(rb.Modal.Title,null,\"Person Profile\")),/*#__PURE__*/React.createElement(rb.Modal.Body,null,/*#__PURE__*/React.createElement(ProfileModal,{profile:this.state.profileModal})),/*#__PURE__*/React.createElement(rb.Modal.Footer,null,/*#__PURE__*/React.createElement(rb.Button,{variant:\"secondary\",onClick:function onClick(){return _this4.setState({showSelection2:false});}},\"Close\"))))));}}]);return TopNavBar;}(React.Component);export default TopNavBar;","map":{"version":3,"sources":["D:/DeployCSITWEBSITE/csit-website/src/Components/Navbar.js"],"names":["React","useRef","rb","Papa","axios","Graph","Table","Table2","ProfileModal","MainMap","TopNavBar","props","myCallback","dataFromChild","setState","CCID","myCallback2","fromCCID","databackTable","profileModal","showSelection2","toCCClicked","IDs","state","datas","length","placename","locationShortaddress","map","x","data","peopleProfileId","push","newItem","CloseContacts","fromCCClicked","filter","includes","dataRetrievedMap","mapData","uploadFile","bind","uploadFile2","handleClick","handleClick2","dropDownValue","dataList","suspectCases","movements","error","errorMsg","showModal","filenames","series","datetime","showSelection","list","handleData","text","date","lol","dateTimeParts","split","dateParts","timeParts","timeOfDay","finalDate","Date","getTime","series2","string","numbers","match","Number","forEach","m1","moves","id","toString","p1","sus","suspectId","y","convertDate","datetimeEntered","datetimeLeft","name","firstName","lastName","console","log","startDate1","endDate","type","undefined","date2","time","date1","date21","time1","str","obj","Object","keys","constructor","arr1","arr2","result","e1","i","e2","compare","suspected","Math","random","displaySetting","displaySetting2","seriesdata","test","graph1","graph11","that","populateGraph1","options","chart","height","events","dataPointSelection","event","chartContext","config","seriesIndex","dataPointIndex","fetch","then","response","json","catch","err","plotOptions","bar","horizontal","barHeight","xaxis","stroke","width","fill","opacity","legend","position","horizontalAlign","mappingsCC","caseNumber","UID","place","convertSQLDate","mappingsPATP","isEmptyObject","newlist","newlist2","mappingsclose","display","textAlign","float","backgroundColor","alignItems","justifyContent","Component"],"mappings":"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","sourcesContent":["import React, { useRef } from 'react'\r\nimport * as rb from 'react-bootstrap'\r\nimport {ReactComponent as Logo} from '../Imgs/upload.svg'\r\nimport Papa from 'papaparse'\r\nimport axios from 'axios'\r\nimport Graph from './Graphs/Graphs'\r\nimport Table from './Tables/Table'\r\nimport Table2 from './Tables/Table2'\r\nimport ProfileModal from './ProfileModal'\r\nimport MainMap from './MainMap';\r\n// import Chip from '@material-ui/core/Chip';\r\n\r\n\r\nclass TopNavBar extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        \r\n        this.uploadFile = this.uploadFile.bind(this);\r\n        this.uploadFile2 = this.uploadFile2.bind(this);\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.handleClick2 = this.handleClick2.bind(this);\r\n        this.state = {\r\n            dropDownValue: \"None\",\r\n            dataList: [\"None\"],\r\n            suspectCases: [],\r\n            movements: [],\r\n            error: false,\r\n            errorMsg: \"\",\r\n            showModal: false,\r\n            filenames: [],\r\n            series:{},\r\n            datas:[],\r\n            placename:\"\",\r\n            datetime:[],\r\n            showSelection: false,\r\n            CCID:[],\r\n            CloseContacts:{},\r\n            fromCCID:[],\r\n            profileModal:{},\r\n            showSelection2: false,\r\n            mapData:[],\r\n        }\r\n    }\r\n\r\n    importCompleted(){\r\n        const list = this.state\r\n        this.props.handleData(list)\r\n        return\r\n    }\r\n\r\n    // // Suspect Profile File Upload\r\n    // handleClick(e) {\r\n    //     this.refs.fileUploader.click();\r\n    // }\r\n\r\n    // //Suspect Movement File Upload\r\n    // handleClick2(e) {\r\n    //     this.refs.fileUploader2.click();\r\n    // }\r\n\r\n    // // Suspect File Upload\r\n    // uploadFile(event) {\r\n        \r\n    //     const file = event.target.files[0]\r\n\r\n    //     if(file){\r\n    //         if (file.name.includes(\"_suspected\")){\r\n\r\n    //             this.setState({filenames:[...this.state.filenames, file.name]})\r\n    //             const reader = new FileReader();\r\n    //             reader.onload = () => {\r\n    //                 // Use reader.result\r\n    //                 const lols = Papa.parse(reader.result, {header: true, skipEmptyLines: true}, )\r\n                    \r\n    //                 // console.log(lols.data)\r\n    \r\n    //                 // Posting csv data into db\r\n    //                 // this.postData('\"' + JSON.stringify(lols.data) + '\"')\r\n    //                 // this.postSuspects(JSON.stringify(lols.data))\r\n    \r\n    //                 // Adds names into dropdown\r\n    //                 this.setState({dataList: [\"All Suspected Cases\", ...lols.data.map(names => names.firstName + \" \" + names.lastName)]})\r\n    \r\n    //                 const data = lols.data\r\n    //                 this.setState({suspectCases: data})\r\n    //             }\r\n    //             reader.readAsText(file)\r\n    //         }\r\n    //         else{\r\n    //             this.setState({error:true, errorMsg:\"You have uploaded invalid files! Please rename the file to <filename>_suspected (For suspected cases)\"})\r\n    //             return\r\n    //         }\r\n    //     }\r\n    // }\r\n\r\n    // // Movement File Upload\r\n    // uploadFile2(event) {\r\n        \r\n    //     const file = event.target.files[0]\r\n\r\n    //     if(file){\r\n    //         if (file.name.includes(\"_movements\")){\r\n                \r\n    //             this.setState({filenames:[...this.state.filenames, file.name]})\r\n    //             const reader = new FileReader();\r\n    //             reader.onload = () => {\r\n    //                 // Use reader.result\r\n    //                 const lols = Papa.parse(reader.result, {header: true, skipEmptyLines: true}, )\r\n                    \r\n    //                 // console.log(lols.data)\r\n    \r\n    //                 // Posting csv data into db\r\n    //                 // this.postData('\"' + JSON.stringify(lols.data) + '\"')\r\n    //                 // this.postMovements(JSON.stringify(lols.data))\r\n    //                 const data = lols.data\r\n    //                 this.setState({movements: data})\r\n    //             }\r\n    //             reader.readAsText(file)\r\n    //         }\r\n    //         else{\r\n    //             this.setState({error:true, errorMsg:\"You have uploaded invalid files! Please rename the file to <filename>_movement (For suspected case movement)\"})\r\n    //             return\r\n    //         }\r\n    //     }\r\n    // }\r\n\r\n    dropdownClicked(text) {\r\n        this.setState({dropDownValue: text})\r\n    }\r\n\r\n    convertDate(date) {\r\n\r\n        var lol = date\r\n        var dateTimeParts = lol.split(' ')\r\n        // console.log(dateTimeParts)\r\n        var dateParts = dateTimeParts[0].split('/')\r\n        var timeParts = dateTimeParts[1].split(':')\r\n        var timeOfDay = dateTimeParts[2]\r\n        if(timeOfDay === \"pm\"){\r\n            timeParts[0] += 12\r\n        }\r\n\r\n        // new Date(year, month, day, hours, minutes, seconds, milliseconds)\r\n        var finalDate = new Date(dateParts[2], dateParts[1] - 1, dateParts[0], timeParts[0], timeParts[1]);\r\n        // console.log(finalDate)\r\n        return finalDate.getTime();\r\n    }\r\n\r\n    //// ### UNCOMMENT FOR GANTT CHART ###\r\n    // Gantt Chart Data Formatter from movements and suspects\r\n    populateGraph1(){\r\n        let series2 = []\r\n\r\n        var string = this.state.mapData;\r\n        var numbers = string.match(/\\d+/g).map(Number);\r\n        // console.log(numbers)\r\n\r\n        // console.log(this.state.suspectCases)\r\n        numbers.forEach(x => {\r\n            let data = []\r\n\r\n            let m1 = this.state.movements.filter(moves => moves.id === x.toString())[0]\r\n            let p1 = this.state.suspectCases.filter(sus => sus.id === m1.suspectId)[0]\r\n            data.push(\r\n                {\r\n                    x: m1.locationShortaddress,\r\n                    y: [this.convertDate(m1.datetimeEntered),this.convertDate(m1.datetimeLeft)]\r\n                }\r\n            )\r\n            \r\n            series2.push(\r\n                {\r\n                    name: p1.firstName + \" \" + p1.lastName,\r\n                    data: data\r\n                }\r\n            )\r\n        })\r\n\r\n        console.log(series2)\r\n\r\n        // console.log(this.state.mapData[0])\r\n        // if(Array.isArray(this.state.mapData)){\r\n        //     console.log(\"NAY\")\r\n        //     \r\n        // }\r\n        // this.state.suspectCases.forEach(suspect => {\r\n        //     let data = []\r\n\r\n        //     this.state.movements.filter(moves => moves.suspectId === suspect.id).forEach(movement => {\r\n        //         data.push(\r\n        //             {\r\n        //                 x: movement.locationShortaddress,\r\n        //                 y: [this.convertDate(movement.datetimeEntered),this.convertDate(movement.datetimeLeft)]\r\n        //             }\r\n        //         )\r\n        //     })\r\n\r\n        //     series2.push(\r\n        //         {\r\n        //             name: suspect.firstName + \" \" + suspect.lastName,\r\n        //             data: data\r\n        //         }\r\n        //     )\r\n        // })\r\n        return series2\r\n    }\r\n\r\n    convertSQLDate(startDate1, endDate, type = undefined){\r\n        \r\n        if(startDate1 !== undefined && endDate !== undefined){\r\n            var date = new Date(startDate1)\r\n            var date2 = date.toString().split(\" \")\r\n            var time = date2[4].split(\":\")\r\n    \r\n            var date1 = new Date(endDate)\r\n            var date21 = date1.toString().split(\" \")\r\n            var time1 = date21[4].split(\":\")\r\n            \r\n            let str\r\n            if(type === \"header\"){\r\n                str = time[0] + \":\"+ time[1] + \" - \" + time1[0] + \":\" + time1[1]\r\n            }\r\n            else{\r\n                str = date2[2] + \" \" + date2[1] + \", \" + time[0] + \":\"+ time[1] + \" - \" + time1[0] + \":\" + time1[1]\r\n            }\r\n           \r\n            return str\r\n        }\r\n        // return date2[1]\r\n    }\r\n\r\n    myCallback = (dataFromChild) => {\r\n        // console.log(\"Data1:\" + dataFromChild)\r\n        this.setState({CCID:dataFromChild})\r\n    }\r\n\r\n    myCallback2 = (dataFromChild) => {\r\n        // console.log(\"Data2:\" + dataFromChild)\r\n        this.setState({fromCCID:dataFromChild})\r\n    }\r\n\r\n    databackTable = (dataFromChild) => {\r\n\r\n        this.setState({profileModal:dataFromChild})\r\n        this.setState({showSelection2:true})\r\n    }\r\n\r\n    isEmptyObject(obj) {\r\n        return !!obj && Object.keys(obj).length === 0 && obj.constructor === Object;\r\n    }\r\n    \r\n    toCCClicked = () => {\r\n        let IDs = []\r\n\r\n        if(this.state.datas.length > 0){\r\n            let placename = this.state.datas[0].locationShortaddress\r\n            // console.log(this.state.CCID)\r\n            this.state.datas.map(x => {\r\n                for(var data of this.state.CCID){\r\n    \r\n                    // console.log(data)\r\n                    if(x.peopleProfileId == data){\r\n                        IDs.push(x.peopleProfileId)\r\n                    }\r\n                }\r\n                \r\n            })\r\n\r\n            // console.log(\"TO: \" + IDs)\r\n            \r\n            let newItem = {...this.state.CloseContacts, [placename]:IDs}\r\n\r\n            this.setState({CloseContacts:newItem}) \r\n        }\r\n    }\r\n\r\n    compare(arr1,arr2){\r\n  \r\n        if(!arr1  || !arr2) return\r\n       \r\n        let result;\r\n       \r\n        arr1.forEach((e1,i)=>arr2.forEach(e2=>{\r\n         \r\n            if(e1.length > 1 && e2.length){\r\n                result = this.compare(e1,e2);\r\n            }else if(e1 !== e2 ){\r\n                result = false\r\n            }else{\r\n                result = true\r\n            }\r\n        }))\r\n       return result\r\n    }\r\n\r\n    fromCCClicked = () => {\r\n\r\n        if(this.state.datas.length > 0){\r\n            let placename = this.state.datas[0].locationShortaddress\r\n            let IDs = this.state.CloseContacts[placename].filter(x => this.state.fromCCID.includes(x) === false).map(x => {return x})\r\n            \r\n            // console.log(\"From: \" + IDs)\r\n\r\n            let newItem = {...this.state.CloseContacts, [placename]:IDs}\r\n\r\n            // console.log(\"Items:\" + newItem)\r\n\r\n            this.setState({CloseContacts:newItem}) \r\n        }\r\n\r\n    }\r\n\r\n    dataRetrievedMap = (dataFromChild) => {\r\n        this.setState({mapData: dataFromChild})\r\n    }\r\n\r\n    render() {\r\n\r\n        let suspected = this.state.dataList.map(sus => <rb.NavDropdown.Item eventKey={Math.random()}>{sus}</rb.NavDropdown.Item>)\r\n        \r\n        let displaySetting, displaySetting2, seriesdata\r\n\r\n        //// ### UNCOMMENT FOR GANTT CHART ###\r\n        let test\r\n\r\n        if(this.state.suspectCases.length > 0 && this.state.movements.length > 0 ){\r\n            displaySetting = \"none\"\r\n            displaySetting2 = \"block\"\r\n            \r\n        }\r\n        else{\r\n            displaySetting = \"block\"\r\n            displaySetting2 = \"none\"\r\n        }\r\n        \r\n        let graph1, graph11\r\n\r\n        const that = this;\r\n\r\n        let placename;\r\n\r\n        //// ### UNCOMMENT FOR GANTT CHART ###\r\n        if(this.state.mapData != \"\"){\r\n            console.log(\"YAY\")\r\n            test = this.populateGraph1()\r\n        }\r\n        \r\n\r\n        //// ### UNCOMMENT FOR GANTT CHART ###\r\n        if(test !== undefined){\r\n            var options = {\r\n                options: {\r\n                    chart: {\r\n                        height: 450, \r\n                        type: 'rangeBar',\r\n                        events:{\r\n                            dataPointSelection: function(event, chartContext, config) {\r\n                                // Name of place\r\n                                // console.log(test[config.seriesIndex].data[config.dataPointIndex].x)\r\n\r\n                                that.setState({placename:test[config.seriesIndex].data[config.dataPointIndex].x, datetime:test[config.seriesIndex].data[config.dataPointIndex].y})\r\n\r\n                                // For the time\r\n                                // console.log(test[config.seriesIndex].data[config.dataPointIndex].y)\r\n                                \r\n                                // For the Name\r\n                                // console.log(test[config.seriesIndex].name)\r\n\r\n                                placename = test[config.seriesIndex].data[config.dataPointIndex].x\r\n\r\n                                fetch(\"http://localhost:8080/getMovementForDate?placeName=\"+ test[config.seriesIndex].data[config.dataPointIndex].x +\"&dates=\" + test[config.seriesIndex].data[config.dataPointIndex].y + \"&personName=\" + test[config.seriesIndex].name)\r\n                                .then(response => response.json()).then(data => that.setState({datas:data})).catch(err => {console.log(err);});\r\n                            }\r\n                        }\r\n                    },\r\n                    plotOptions: {\r\n                      bar: {horizontal: true, barHeight: '80%'}\r\n                    },\r\n                    xaxis: {\r\n                      type: 'datetime'\r\n                    },\r\n                    stroke: {\r\n                      width: 1\r\n                    },\r\n                    fill: {\r\n                      type: 'solid',\r\n                      opacity: 0.6\r\n                    },\r\n                    legend: {\r\n                      position: 'top',\r\n                      horizontalAlign: 'left'\r\n                    }\r\n                }\r\n            }\r\n            graph1 = <Graph display={displaySetting2} options={options.options} series={test} tool/>\r\n        }\r\n\r\n        // Creating the COnfirmed Cases\r\n        let mappingsCC = this.state.datas.filter(data => data.caseNumber != null).map(data => {\r\n            return({\r\n                caseNumber:data.caseNumber,\r\n                UID:data.peopleProfileId,\r\n                name:data.firstName + \" \" + data.lastName,\r\n                place:data.locationShortaddress,\r\n                datetime:this.convertSQLDate(data.datetimeEntered, data.datetimeLeft)\r\n            })\r\n        })\r\n\r\n        // Creating the Public at the place List\r\n        let mappingsPATP\r\n        \r\n        // Checks if there are any close contacts be begin with. If there are none than the below will run\r\n        if(this.isEmptyObject(this.state.CloseContacts)){\r\n            mappingsPATP = this.state.datas.filter(data => data.caseNumber == null).map(data =>{\r\n                return({\r\n                    UID:data.peopleProfileId,\r\n                    name:data.firstName + \" \" + data.lastName,\r\n                    place:data.locationShortaddress,\r\n                    datetime:this.convertSQLDate(data.datetimeEntered, data.datetimeLeft)\r\n                })\r\n            })\r\n        }\r\n\r\n        // If you added the close contacts, no need to be for the current place (any place), then the below will run\r\n        else{\r\n            \r\n            let newlist = []\r\n\r\n            this.state.datas.filter(data => data.caseNumber == null).map(data =>{\r\n\r\n                // Checks if the place that the user has clicked on contains any close contacts assigned to it. If there are, then it will take away all the people that are in the close \r\n                // contact list from the PATP\r\n                if(this.state.CloseContacts[data.locationShortaddress] != undefined){\r\n                    // console.log(\"Logged: \" + this.state.CloseContacts[placename] + \": \" + Array.isArray(this.state.CloseContacts[placename]))\r\n                    if(this.state.CloseContacts[data.locationShortaddress].includes(data.peopleProfileId) === false){\r\n                        newlist.push({\r\n                            UID:data.peopleProfileId,\r\n                            name:data.firstName + \" \" + data.lastName,\r\n                            place:data.locationShortaddress,\r\n                            datetime:this.convertSQLDate(data.datetimeEntered, data.datetimeLeft)\r\n                        })\r\n                    }\r\n                }\r\n\r\n                // If there isnt any close contacts then it will just return all the people from the PTAP back to PTAP\r\n                else{\r\n                    newlist.push({\r\n                        UID:data.peopleProfileId,\r\n                        name:data.firstName + \" \" + data.lastName,\r\n                        place:data.locationShortaddress,\r\n                        datetime:this.convertSQLDate(data.datetimeEntered, data.datetimeLeft)\r\n                    })\r\n                }       \r\n            })\r\n\r\n            mappingsPATP = newlist\r\n        }\r\n\r\n        //Mapping the Contacts\r\n        let newlist2 = []\r\n\r\n        this.state.datas.filter(data => data.caseNumber == null).map(data =>{\r\n            \r\n            if(this.state.CloseContacts[data.locationShortaddress] != undefined){\r\n                if(this.state.CloseContacts[data.locationShortaddress].includes(data.peopleProfileId)){\r\n                    newlist2.push({\r\n                        UID:data.peopleProfileId,\r\n                        name:data.firstName + \" \" + data.lastName,\r\n                        place:data.locationShortaddress,\r\n                        datetime:this.convertSQLDate(data.datetimeEntered, data.datetimeLeft)\r\n                    })\r\n                }\r\n            }  \r\n        })\r\n\r\n        let mappingsclose = newlist2\r\n\r\n        // console.log(this.state.showSelection2)\r\n\r\n        return (\r\n            <div>\r\n                {/* <div>\r\n                    <rb.Navbar bg=\"white\">\r\n                        <rb.Navbar.Brand style={{fontSize:30}}>\r\n                            Filter:\r\n                        </rb.Navbar.Brand>\r\n                        <rb.Navbar.Toggle />\r\n                        <rb.Nav onSelect={(eventKey) => this.dropdownClicked(eventKey)}>\r\n                            <rb.NavDropdown title={this.state.dropDownValue}>\r\n                                {suspected}\r\n                            </rb.NavDropdown>\r\n                        </rb.Nav>\r\n                        <rb.Navbar.Collapse className=\"justify-content-end\">\r\n\r\n                            <rb.Button className=\"text-right\" id=\"importCases\" style={{textSize:15}} onClick={() => this.setState({showModal: true})}>\r\n                                <Logo style={{width:30, height:30, paddingRight:7.4}} id=\"uploadLogo\"/>\r\n                                IMPORT SUSPECTED CASES\r\n                            </rb.Button>\r\n\r\n                            <rb.Button className=\"text-right\" id=\"importCases\" style={{textSize:15}} onClick={this.handleClick.bind(this)}>\r\n                                <Logo style={{width:30, height:30, paddingRight:7.4}} id=\"uploadLogo\"/>\r\n                                IMPORT SUSPECTED CASES\r\n                            </rb.Button>\r\n                            <input type=\"file\" id=\"file\" ref=\"fileUploader\" style={{display: \"none\"}} onChange={this.uploadFile} multiple/>\r\n\r\n                        </rb.Navbar.Collapse>\r\n                    </rb.Navbar>\r\n                </div> */}\r\n                \r\n                {/* Upload Case Files */}\r\n                {/* <div>\r\n                    <rb.Modal show={this.state.showModal} onHide={() => this.setState({showModal: false}) } animation={false}>\r\n                        <rb.Modal.Header closeButton>\r\n                            <rb.Modal.Title>Upload Suspect Cases Files</rb.Modal.Title>\r\n                        </rb.Modal.Header>\r\n\r\n                        <rb.Modal.Body className=\"d-flex justify-content-center\">\r\n\r\n                            <div className=\"row\" >\r\n                                <div className=\".col-md-6\" style={{paddingRight: 15}}>\r\n                                    <b>Profile of suspected case</b>\r\n                                    <br/>\r\n                                    <br/>\r\n                                    <rb.Button variant=\"secondary\" style={{width:\"100%\"}} onClick={this.handleClick.bind(this)}>\r\n                                        Upload\r\n                                    </rb.Button>\r\n                                    <input type=\"file\" id=\"file\" ref=\"fileUploader\" style={{display: \"none\"}} onChange={this.uploadFile}/>\r\n                                    <p>File Chosen: </p>\r\n                                </div>\r\n\r\n                                <div style ={{borderLeft: \"2px dashed black\", height: \"100px\"}}></div>\r\n\r\n                                <div className=\".col-md-6\" variant=\"primary\" style={{paddingLeft: 15}}>\r\n                                    <b>Movement of suspected case</b>\r\n                                    <br/>\r\n                                    <br/>\r\n                                    <rb.Button variant=\"secondary\" style={{width:\"100%\"}} onClick={this.handleClick2.bind(this)}>\r\n                                        Upload\r\n                                    </rb.Button>\r\n                                    <input type=\"file\" id=\"file2\" ref=\"fileUploader2\" style={{display: \"none\"}} onChange={this.uploadFile2}/>\r\n                                </div>\r\n                            </div>\r\n                        </rb.Modal.Body>\r\n                    </rb.Modal>\r\n                </div> */}\r\n                \r\n                {/* Error msg when upload wrong file */}\r\n                {/* <div>\r\n                    <rb.Toast onClose={() => this.setState({error: false})} show={this.state.error}>\r\n                        <rb.Toast.Header>\r\n                            <strong className=\"mr-auto\">Error!</strong>\r\n                            <small>11 mins ago</small>\r\n                        </rb.Toast.Header>\r\n                        <rb.Toast.Body>{this.state.errorMsg}</rb.Toast.Body>\r\n                    </rb.Toast>\r\n                </div> */}\r\n\r\n                {/* Import Some Data to Begin Text */}\r\n                {/* <div style={{display:displaySetting, height:\"100%\"}}>\r\n                    <h1 style={{color:\"#424761\", textAlign:\"center\", marginTop:\"15%\"}}>Import some data to begin</h1>\r\n                </div> */}\r\n\r\n                <div style={{display:displaySetting2}}>\r\n\r\n                    {/* Gantt Chart / Map */}\r\n                    <div style={{textAlign: \"left\", height:\"100%\", float:\"left\", width:\"50%\"}}>\r\n\r\n                        {/* UNCOMMENT FOR MAP */}\r\n                        {/* <MainMap profile={this.state.suspectCases} movement={this.state.movements} dataRetrieved={this.dataRetrievedMap}/> */}\r\n\r\n                        {/* ### UNCOMMENT FOR GANTT CHART ### */}\r\n                        {/* {graph1} */}\r\n                    </div>\r\n                    \r\n                    {/* Tabs */}\r\n                    <div style={{float:\"left\", width:\"50%\"}}>\r\n                        <rb.Tabs defaultActiveKey=\"home\" id=\"uncontrolled-tab-example\">\r\n                            <rb.Tab eventKey=\"home\" title=\"CONFIRMED CASES\">\r\n                                <div style={{textAlign: \"left\", height:\"100%\"}}>\r\n                                    <h5>\r\n                                        {/* <Chip label=\"Basic\" /> */}\r\n                                        {/* PlaceName */}\r\n                                        <rb.Badge pill variant=\"primary\">\r\n                                            {this.state.placename}\r\n                                        </rb.Badge>\r\n                                        {' '}\r\n                                        {/* Time Span */}\r\n                                        <rb.Badge pill variant=\"primary\">\r\n                                            {this.convertSQLDate(this.state.datetime[0], this.state.datetime[1], \"header\")}\r\n                                        </rb.Badge>\r\n                                    </h5>\r\n                                    <Table tableprops={mappingsCC} display={displaySetting2} type = \"CC\" databack={this.databackTable}/>\r\n                                </div>\r\n                            </rb.Tab>\r\n\r\n                            <rb.Tab eventKey=\"profile\" title=\"CLOSE CONTACT\">\r\n                                <div style={{textAlign: \"left\", height:\"100%\"}}>\r\n                                    <h5>\r\n                                        {/* PlaceName */}\r\n                                        <rb.Badge pill variant=\"primary\">\r\n                                            {this.state.placename}\r\n                                        </rb.Badge>\r\n                                        {' '}\r\n                                        {/* Time Span */}\r\n                                        <rb.Badge pill variant=\"primary\">\r\n                                            {this.convertSQLDate(this.state.datetime[0], this.state.datetime[1], \"header\")}\r\n                                        </rb.Badge>\r\n                                    </h5>\r\n                                    <Table tableprops={mappingsclose} display={displaySetting2} type=\"PATP\" databack={this.databackTable}/>\r\n                                    <rb.Button onClick={() => this.setState({showSelection:true})}>\r\n                                        Manual Import\r\n                                    </rb.Button>\r\n                                </div>\r\n                            </rb.Tab>\r\n\r\n                            <rb.Tab eventKey=\"contact\" title=\"PUBLIC AT THE PLACE\">\r\n                                <div style={{textAlign: \"left\", height:\"100%\"}}>\r\n                                    <h5>\r\n                                        {/* PlaceName */}\r\n                                        <rb.Badge pill variant=\"primary\">\r\n                                            {this.state.placename}\r\n                                        </rb.Badge>\r\n                                        {' '}\r\n                                        {/* Time Span */}\r\n                                        <rb.Badge pill variant=\"primary\">\r\n                                            {this.convertSQLDate(this.state.datetime[0], this.state.datetime[1], \"header\")}\r\n                                        </rb.Badge>\r\n                                    </h5>\r\n                                    <Table tableprops={mappingsPATP} display={displaySetting2} type=\"PATP\" databack={this.databackTable}/>\r\n                                </div>\r\n                            </rb.Tab>\r\n                        </rb.Tabs>         \r\n                    </div>\r\n                    \r\n                    {/* PTAP TO CC AND CC TO PTAP */}\r\n                    <div>\r\n                        <rb.Modal show={this.state.showSelection} onHide={()=>this.setState({showSelection:false})} centered size=\"xl\" scrollable={true}>\r\n                            <rb.Modal.Header closeButton>\r\n                                <rb.Modal.Title>Transfer Users</rb.Modal.Title>\r\n                            </rb.Modal.Header>\r\n                            <rb.Modal.Body>\r\n                                <div style={{float:\"left\", textAlign:\"center\", width:\"40%\"}}>\r\n                                    <text fontSize=\"20px\"><b>Close Contact With Public</b></text>\r\n                                    <div style={{backgroundColor:\"#F9F9F9\", }}>\r\n                                        <Table2 tableprops={mappingsclose} display={displaySetting2} type=\"modal-edit\" callbackFromParent={this.myCallback2} databack={this.databackTable}/>\r\n                                    </div>\r\n                                </div>\r\n                                <div style={{float:\"left\", textAlign:\"center\", width:\"20%\", alignItems:\"center\", justifyContent:\"center\"}}>\r\n                                    <rb.Button onClick={this.toCCClicked}> &lt; &lt; </rb.Button>\r\n                                    <div className=\"clearfix\"></div>\r\n                                    <rb.Button onClick={this.fromCCClicked}> &gt; &gt; </rb.Button>\r\n                                </div>\r\n                                <div style={{float:\"right\", textAlign:\"center\", width:\"40%\"}}>\r\n                                    <text fontSize=\"20px\"><b>Public At The Place</b></text>\r\n                                    <div style={{backgroundColor:\"#F9F9F9\"}}>\r\n                                        <Table tableprops={mappingsPATP} display={displaySetting2} type=\"modal-edit\" callbackFromParent={this.myCallback} databack={this.databackTable}/>\r\n                                    </div>\r\n                                </div>\r\n                            </rb.Modal.Body>\r\n                            <rb.Modal.Footer>\r\n                                <rb.Button variant=\"secondary\" onClick={()=>this.setState({showSelection:false})}>\r\n                                    Close\r\n                                </rb.Button>\r\n                            </rb.Modal.Footer>\r\n                        </rb.Modal>\r\n                    </div>\r\n                    \r\n                    {/* Profile Page */}\r\n                    <div>\r\n                        <rb.Modal show={this.state.showSelection2} onHide={()=>this.setState({showSelection2:false})} size=\"xl\" centered scrollable={true}>\r\n                            <rb.Modal.Header closeButton>\r\n                                <rb.Modal.Title>Person Profile</rb.Modal.Title>\r\n                            </rb.Modal.Header>\r\n                            <rb.Modal.Body>\r\n                                <ProfileModal profile={this.state.profileModal}/>\r\n                            </rb.Modal.Body>\r\n                            <rb.Modal.Footer>\r\n                                <rb.Button variant=\"secondary\" onClick={()=>this.setState({showSelection2:false})}>\r\n                                    Close\r\n                                </rb.Button>\r\n                            </rb.Modal.Footer>\r\n                        </rb.Modal>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default TopNavBar"]},"metadata":{},"sourceType":"module"}