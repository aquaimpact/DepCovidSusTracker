{"ast":null,"code":"import React,{useRef}from'react';import*as rb from'react-bootstrap';import{BootstrapTable,TableHeaderColumn}from'react-bootstrap-table';var selectRowProp={mode:'checkbox',clickToSelect:true,onSelect:onRowSelect,onSelectAll:onSelectAll};var that;var selectedrows=[];function onRowSelect(row,isSelected,e){// let rowStr = '';\nif(isSelected){selectedrows.push(row[\"UID\"]);}else{selectedrows=selectedrows.filter(function(x){return x!==row[\"UID\"];});}// console.log(selectedRows);\nthat.callbackFromParent(selectedrows);// alert(`is selected: ${isSelected}, ${rowStr}`);\n}function onSelectAll(isSelected,rows){if(isSelected){for(var i=0;i<rows.length;i++){selectedrows.push(rows[i].UID);}}else{var _loop=function _loop(_i){selectedrows=selectedrows.filter(function(x){return x!==rows[_i].UID;});};for(var _i=0;_i<rows.length;_i++){_loop(_i);}}// console.log(selectedRows);\nthat.callbackFromParent(selectedrows);}function Table2(props){that=props;return/*#__PURE__*/React.createElement(\"div\",{style:{display:props.display}},/*#__PURE__*/React.createElement(BootstrapTable,{data:props.tableprops,selectRow:selectRowProp},/*#__PURE__*/React.createElement(TableHeaderColumn,{dataField:\"UID\",isKey:true},\"User ID\"),/*#__PURE__*/React.createElement(TableHeaderColumn,{dataField:\"name\"},\"Name\"),/*#__PURE__*/React.createElement(TableHeaderColumn,{dataField:\"place\"},\"Place At\"),/*#__PURE__*/React.createElement(TableHeaderColumn,{dataField:\"datetime\"},\"Date and Time\")));}export default Table2;","map":{"version":3,"sources":["D:/DeployCSITWEBSITE/csit-website/src/Components/Tables/Table2.js"],"names":["React","useRef","rb","BootstrapTable","TableHeaderColumn","selectRowProp","mode","clickToSelect","onSelect","onRowSelect","onSelectAll","that","selectedrows","row","isSelected","e","push","filter","x","callbackFromParent","rows","i","length","UID","Table2","props","display","tableprops"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,MAAhB,KAA8B,OAA9B,CACA,MAAO,GAAKC,CAAAA,EAAZ,KAAoB,iBAApB,CACA,OAAQC,cAAR,CAAwBC,iBAAxB,KAAgD,uBAAhD,CAEA,GAAMC,CAAAA,aAAa,CAAG,CAClBC,IAAI,CAAE,UADY,CAElBC,aAAa,CAAE,IAFG,CAGlBC,QAAQ,CAAEC,WAHQ,CAIlBC,WAAW,CAAEA,WAJK,CAAtB,CAOA,GAAIC,CAAAA,IAAJ,CAEA,GAAIC,CAAAA,YAAY,CAAG,EAAnB,CAGA,QAASH,CAAAA,WAAT,CAAqBI,GAArB,CAA0BC,UAA1B,CAAsCC,CAAtC,CAAyC,CACrC;AACA,GAAGD,UAAH,CAAc,CACVF,YAAY,CAACI,IAAb,CAAkBH,GAAG,CAAC,KAAD,CAArB,EACH,CAFD,IAGI,CACAD,YAAY,CAAGA,YAAY,CAACK,MAAb,CAAoB,SAAAC,CAAC,QAAIA,CAAAA,CAAC,GAAKL,GAAG,CAAC,KAAD,CAAb,EAArB,CAAf,CACH,CACD;AACAF,IAAI,CAACQ,kBAAL,CAAwBP,YAAxB,EACA;AACH,CAED,QAASF,CAAAA,WAAT,CAAqBI,UAArB,CAAiCM,IAAjC,CAAuC,CAEnC,GAAGN,UAAH,CAAc,CACV,IAAK,GAAIO,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGD,IAAI,CAACE,MAAzB,CAAiCD,CAAC,EAAlC,CAAsC,CAClCT,YAAY,CAACI,IAAb,CAAkBI,IAAI,CAACC,CAAD,CAAJ,CAAQE,GAA1B,EACH,CACJ,CAJD,IAKI,0BACSF,EADT,EAEIT,YAAY,CAAGA,YAAY,CAACK,MAAb,CAAoB,SAAAC,CAAC,QAAIA,CAAAA,CAAC,GAAKE,IAAI,CAACC,EAAD,CAAJ,CAAQE,GAAlB,EAArB,CAAf,CAFJ,EACA,IAAK,GAAIF,CAAAA,EAAC,CAAG,CAAb,CAAgBA,EAAC,CAAGD,IAAI,CAACE,MAAzB,CAAiCD,EAAC,EAAlC,CAAsC,OAA7BA,EAA6B,EAErC,CAEJ,CACD;AACAV,IAAI,CAACQ,kBAAL,CAAwBP,YAAxB,EACH,CAED,QAASY,CAAAA,MAAT,CAAgBC,KAAhB,CAAsB,CAClBd,IAAI,CAAGc,KAAP,CACA,mBACI,2BAAK,KAAK,CAAE,CAACC,OAAO,CAACD,KAAK,CAACC,OAAf,CAAZ,eACI,oBAAC,cAAD,EAAgB,IAAI,CAAGD,KAAK,CAACE,UAA7B,CAA0C,SAAS,CAAGtB,aAAtD,eACI,oBAAC,iBAAD,EAAmB,SAAS,CAAC,KAA7B,CAAmC,KAAK,KAAxC,YADJ,cAEI,oBAAC,iBAAD,EAAmB,SAAS,CAAC,MAA7B,SAFJ,cAGI,oBAAC,iBAAD,EAAmB,SAAS,CAAC,OAA7B,aAHJ,cAII,oBAAC,iBAAD,EAAmB,SAAS,CAAC,UAA7B,kBAJJ,CADJ,CADJ,CAWH,CAED,cAAemB,CAAAA,MAAf","sourcesContent":["import React, { useRef } from 'react'\r\nimport * as rb from 'react-bootstrap'\r\nimport {BootstrapTable, TableHeaderColumn} from 'react-bootstrap-table';\r\n\r\nconst selectRowProp = {\r\n    mode: 'checkbox',\r\n    clickToSelect: true,\r\n    onSelect: onRowSelect,\r\n    onSelectAll: onSelectAll\r\n};\r\n\r\nlet that\r\n\r\nlet selectedrows = []\r\n\r\n\r\nfunction onRowSelect(row, isSelected, e) {\r\n    // let rowStr = '';\r\n    if(isSelected){\r\n        selectedrows.push(row[\"UID\"])\r\n    }\r\n    else{\r\n        selectedrows = selectedrows.filter(x => x !== row[\"UID\"])\r\n    }\r\n    // console.log(selectedRows);\r\n    that.callbackFromParent(selectedrows);\r\n    // alert(`is selected: ${isSelected}, ${rowStr}`);\r\n}\r\n\r\nfunction onSelectAll(isSelected, rows) {\r\n    \r\n    if(isSelected){\r\n        for (let i = 0; i < rows.length; i++) {\r\n            selectedrows.push(rows[i].UID)\r\n        }\r\n    }\r\n    else{\r\n        for (let i = 0; i < rows.length; i++) {\r\n            selectedrows = selectedrows.filter(x => x !== rows[i].UID)\r\n        }\r\n        \r\n    }\r\n    // console.log(selectedRows);\r\n    that.callbackFromParent(selectedrows);\r\n}\r\n\r\nfunction Table2(props){\r\n    that = props\r\n    return(\r\n        <div style={{display:props.display}}>\r\n            <BootstrapTable data={ props.tableprops } selectRow={ selectRowProp }>\r\n                <TableHeaderColumn dataField='UID' isKey>User ID</TableHeaderColumn>\r\n                <TableHeaderColumn dataField='name'>Name</TableHeaderColumn>\r\n                <TableHeaderColumn dataField='place'>Place At</TableHeaderColumn>\r\n                <TableHeaderColumn dataField='datetime'>Date and Time</TableHeaderColumn>\r\n            </BootstrapTable>\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default Table2"]},"metadata":{},"sourceType":"module"}