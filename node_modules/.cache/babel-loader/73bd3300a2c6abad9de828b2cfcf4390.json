{"ast":null,"code":"import _defineProperty from\"D:\\\\DeployCSITWEBSITE\\\\csit-website\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"D:\\\\DeployCSITWEBSITE\\\\csit-website\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"D:\\\\DeployCSITWEBSITE\\\\csit-website\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\DeployCSITWEBSITE\\\\csit-website\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"D:\\\\DeployCSITWEBSITE\\\\csit-website\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"D:\\\\DeployCSITWEBSITE\\\\csit-website\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import mapboxgl from'mapbox-gl';mapboxgl.accessToken='pk.eyJ1IjoiYXF1YWltcGFjdCIsImEiOiJja2R0d2N3emswdzlwMnptcGliNTk4ZHNkIn0.jPYEzZD-aErgL25Zx9N_Kg';var map;var counter=0;var popup;var source;var randomNum=0;var MainMap=/*#__PURE__*/function(_React$Component){_inherits(MainMap,_React$Component);var _super=_createSuper(MainMap);function MainMap(props){var _this;_classCallCheck(this,MainMap);_this=_super.call(this,props);_this.state={lng:103.851959,lat:1.290270,zoom:10.5,souceColors:{}};_this.mapContainer=React.createRef();return _this;}_createClass(MainMap,[{key:\"componentDidMount\",value:function componentDidMount(){map=new mapboxgl.Map({container:this.mapContainer,style:'mapbox://styles/mapbox/streets-v11',center:[this.state.lng,this.state.lat],zoom:this.state.zoom});// Create a popup, but don't add it to the map yet.\nvar popup2=new mapboxgl.Popup({closeButton:false,closeOnClick:false});popup=popup2;var size=100;var pulsingDot={width:size,height:size,data:new Uint8Array(size*size*4),// get rendering context for the map canvas when layer is added to the map\nonAdd:function onAdd(){var canvas=document.createElement('canvas');canvas.width=this.width;canvas.height=this.height;this.context=canvas.getContext('2d');},// called once before every frame where the icon will be used\nrender:function render(){var duration=1000;var t=performance.now()%duration/duration;var radius=size/2*0.3;var outerRadius=size/2*0.7*t+radius;var context=this.context;// draw outer circle\ncontext.clearRect(0,0,this.width,this.height);context.beginPath();context.arc(this.width/2,this.height/2,outerRadius,0,Math.PI*2);context.fillStyle='rgba(255, 200, 200,'+(1-t)+')';context.fill();// draw inner circle\ncontext.beginPath();context.arc(this.width/2,this.height/2,radius,0,Math.PI*2);context.fillStyle='rgba(255, 100, 100, 1)';context.strokeStyle='white';context.lineWidth=2+4*(1-t);context.fill();context.stroke();// update this image's data with data from the canvas\nthis.data=context.getImageData(0,0,this.width,this.height).data;// continuously repaint the map, resulting in the smooth animation of the dot\nmap.triggerRepaint();// return `true` to let the map know that the image was updated\nreturn true;}};map.addImage('pulsing-dot',pulsingDot,{pixelRatio:2});}},{key:\"render\",value:function render(){var _this2=this;var legend=[];for(var key in source){legend.push(/*#__PURE__*/React.createElement(\"div\",{style:{marginRight:\"20px\"}},/*#__PURE__*/React.createElement(\"span\",{style:{height:\"16px\",width:\"50px\",backgroundColor:key,borderRadius:\"20%\",display:\"inline-block\"}}),/*#__PURE__*/React.createElement(\"h5\",{style:{display:\"inline-block\",marginLeft:\"10px\"}},source[key])));}return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{style:{display:\"flex\",justifyContent:\"space-between\"}},legend),/*#__PURE__*/React.createElement(\"div\",{style:{position:\"relative\",height:\"700px\",width:\"100%\"}},/*#__PURE__*/React.createElement(\"div\",{ref:function ref(el){return _this2.mapContainer=el;},style:{position:\"reletive\",width:\"inherit\",height:\"inherit\"}})));}}],[{key:\"generateColor\",value:function generateColor(){var x=Math.random();while(x==randomNum){x=Math.random();}randomNum=x;var n=(x*0xfffff*1000000).toString(16);return'#'+n.slice(0,6);}},{key:\"getDatetime\",value:function getDatetime(datetime,selection){// 20/7/2020 8:00\nvar date=datetime.split(\" \");var fulldate=date[0].split(\"/\");var mon=fulldate[1];var day=fulldate[0];var year=fulldate[2];var fullTime=date[1].split(\":\");var hh=fullTime[0];var min=fullTime[1];// const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\nvar shortmonthNames=[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sept\",\"Oct\",\"Nov\",\"Dec\"];var finalDatetime;if(selection===\"d\"){finalDatetime=day+\" \"+shortmonthNames[parseInt(mon)-1]+\" \"+year;}else if(selection===\"t\"){var timing=\"AM\";if(parseInt(hh)===12){timing=\"PM\";}if(parseInt(hh)>12){hh=parseInt(hh)-12;timing=\"PM\";}finalDatetime=hh+\":\"+min+\" \"+timing;}// else if(selection == \"dt\"){\n//     finalDatetime = new Date(datetime)\n// }\nreturn finalDatetime;}},{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(props,state){console.log(\"Yays\");source={};// console.log(map.style.sourceCaches);\nif(props.profile.length>0&&props.movement.length>0){var mappedResults=props.profile.map(function(x){return{profile:x,movements:props.movement.filter(function(xx){return xx.suspectId===x.id;})};});// Accepts the array and key\nvar groupBy=function groupBy(array,key){// Return the end result\nreturn array.reduce(function(result,currentValue){// If an array already present for key, push it to the array. Else create an array and push the object\n(result[currentValue[key]]=result[currentValue[key]]||[]).push(currentValue);// Return the current iteration `result` value, this will be taken as next iteration `result` value and accumulate\nreturn result;},{});// empty object is the initial value for result object\n};// Group by location address as key to the person array\nvar personGroupedByColor=groupBy(props.movement,'locationShortaddress');// console.log(personGroupedByColor)\nvar UPoints=Object.keys(personGroupedByColor).map(function(key){if(personGroupedByColor[key].length===1){var item=personGroupedByColor[key][0];return{'type':'Feature','properties':{'movementID':item.id,'enter':item.datetimeEntered,'leave':item.datetimeLeft,'placeID':item.locationShortaddress,'marker-symbol':'1','marker-color':'#3bb2d0','marker-size':'large','description':\"<strong>\".concat(item.locationShortaddress,\"</strong><p>Time Entered: \").concat(MainMap.getDatetime(item.datetimeEntered,'t'),\"</p><p>Time Left: \").concat(MainMap.getDatetime(item.datetimeLeft,'t'),\"</p><p>Date: \").concat(MainMap.getDatetime(item.datetimeLeft,'d'),\"</p>\")},'geometry':{'type':'Point','coordinates':[item.locationLong,item.locationLat]}};}else{var movementID=personGroupedByColor[key].map(function(x){return x.id;});// console.log(movementID)\nvar enter=personGroupedByColor[key].map(function(x){return x.datetimeEntered;});var leave=personGroupedByColor[key].map(function(x){return x.datetimeLeft;});var placeID=key;var text=\"<strong>\".concat(key,\"</strong>\");// console.log(placeID)\npersonGroupedByColor[key].forEach(function(xx){var name=props.profile.filter(function(x){return x.id===xx.suspectId;}).map(function(x){return x.firstName+\" \"+x.lastName;});text+=\"<p>\".concat(name,\"</p>\");text+=\"<p>Time Entered: \".concat(MainMap.getDatetime(xx.datetimeEntered,'t'),\"</p><p>Time Left: \").concat(MainMap.getDatetime(xx.datetimeLeft,'t'),\"</p><p>Date: \").concat(MainMap.getDatetime(xx.datetimeLeft,'d'),\"</p>\");});// console.log(text)\n// let description = `<strong>${item.locationShortaddress}</strong><p>Time Entered: ${that.getDatetime(item.datetimeEntered, 't')}</p><p>Time Left: ${that.getDatetime(item.datetimeLeft, 't')}</p><p>Date: ${that.getDatetime(item.datetimeLeft, 'd')}</p>`\nreturn{'type':'Feature','properties':{'movementID':movementID,'enter':enter,'leave':leave,'placeID':placeID,'description':text},'geometry':{'type':'Point','coordinates':[personGroupedByColor[key][0].locationLong,personGroupedByColor[key][0].locationLat]}};}});for(var key in map.style.sourceCaches){console.log(key);if(key!='composite'){map.removeLayer(key);if(key==\"placeIDs\"){map.off('click','placeIDs',function(e){var placeID=e.features[0].properties.placeID;var description=e.features[0].properties.description;var movementID=e.features[0].properties.movementID;var enter=e.features[0].properties.enter;var leave=e.features[0].properties.leave;props.dataRetrieved(movementID);});map.off('mouseenter','placeIDs',function(e){// Change the cursor style as a UI indicator.\nmap.getCanvas().style.cursor='pointer';var coordinates=e.features[0].geometry.coordinates.slice();var description=e.features[0].properties.description;// Ensure that if the map is zoomed out such that multiple\n// copies of the feature are visible, the popup appears\n// over the copy being pointed to.\nwhile(Math.abs(e.lngLat.lng-coordinates[0])>180){coordinates[0]+=e.lngLat.lng>coordinates[0]?360:-360;}// Populate the popup and set its coordinates\n// based on the feature found.\npopup.setLngLat(coordinates).setHTML(description).addTo(map);});map.off('mouseleave','placeIDs',function(){map.getCanvas().style.cursor='';popup.remove();});}map.removeSource(key);}// console.log(map.getStyle().layers)\n}mappedResults.forEach(function(e){var lol=Math.floor(Math.random()*101).toString();var UMovements=e.movements.map(function(x){return[x.locationLong,x.locationLat];});map.addSource(lol,{'type':'geojson','data':{'type':'Feature','properties':{},'geometry':{'type':'LineString','coordinates':UMovements}}});var color=MainMap.generateColor();source=_objectSpread(_objectSpread({},source),{},_defineProperty({},color,e.profile.firstName+\" \"+e.profile.lastName));map.addLayer({'id':lol,'type':'line','source':lol,'layout':{'line-join':'round','line-cap':'round'},'paint':{'line-color':color,'line-width':5}});});map.addSource('placeIDs',{'type':'geojson','data':{'type':'FeatureCollection','features':UPoints}});// Add a layer showing the places.\nmap.addLayer({'id':'placeIDs','type':'symbol','source':'placeIDs','layout':{// \"line-cap\": \"round\",\n// \"line-join\": \"round\"\n'icon-image':'pulsing-dot','icon-allow-overlap':true}});map.on('click','placeIDs',function(e){var movementID=e.features[0].properties.movementID;props.dataRetrieved(movementID);});map.on('mouseenter','placeIDs',function(e){// Change the cursor style as a UI indicator.\nmap.getCanvas().style.cursor='pointer';var coordinates=e.features[0].geometry.coordinates.slice();var description=e.features[0].properties.description;// Ensure that if the map is zoomed out such that multiple\n// copies of the feature are visible, the popup appears\n// over the copy being pointed to.\nwhile(Math.abs(e.lngLat.lng-coordinates[0])>180){coordinates[0]+=e.lngLat.lng>coordinates[0]?360:-360;}// Populate the popup and set its coordinates\n// based on the feature found.\npopup.setLngLat(coordinates).setHTML(description).addTo(map);});map.on('mouseleave','placeIDs',function(){map.getCanvas().style.cursor='';popup.remove();});counter+=1;}return true;}}]);return MainMap;}(React.Component);export default MainMap;","map":{"version":3,"sources":["D:/DeployCSITWEBSITE/csit-website/src/Components/MainMap.js"],"names":["React","mapboxgl","accessToken","map","counter","popup","source","randomNum","MainMap","props","state","lng","lat","zoom","souceColors","mapContainer","createRef","Map","container","style","center","popup2","Popup","closeButton","closeOnClick","size","pulsingDot","width","height","data","Uint8Array","onAdd","canvas","document","createElement","context","getContext","render","duration","t","performance","now","radius","outerRadius","clearRect","beginPath","arc","Math","PI","fillStyle","fill","strokeStyle","lineWidth","stroke","getImageData","triggerRepaint","addImage","pixelRatio","legend","key","push","marginRight","backgroundColor","borderRadius","display","marginLeft","justifyContent","position","el","x","random","n","toString","slice","datetime","selection","date","split","fulldate","mon","day","year","fullTime","hh","min","shortmonthNames","finalDatetime","parseInt","timing","console","log","profile","length","movement","mappedResults","movements","filter","xx","suspectId","id","groupBy","array","reduce","result","currentValue","personGroupedByColor","UPoints","Object","keys","item","datetimeEntered","datetimeLeft","locationShortaddress","getDatetime","locationLong","locationLat","movementID","enter","leave","placeID","text","forEach","name","firstName","lastName","sourceCaches","removeLayer","off","e","features","properties","description","dataRetrieved","getCanvas","cursor","coordinates","geometry","abs","lngLat","setLngLat","setHTML","addTo","remove","removeSource","lol","floor","UMovements","addSource","color","generateColor","addLayer","on","Component"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport mapboxgl from 'mapbox-gl';\r\n\r\nmapboxgl.accessToken = 'pk.eyJ1IjoiYXF1YWltcGFjdCIsImEiOiJja2R0d2N3emswdzlwMnptcGliNTk4ZHNkIn0.jPYEzZD-aErgL25Zx9N_Kg';\r\n\r\nlet map\r\nlet counter = 0\r\nlet popup\r\nlet source\r\nlet randomNum = 0\r\n\r\n\r\nclass MainMap extends React.Component{\r\n    \r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            lng: 103.851959,\r\n            lat: 1.290270,\r\n            zoom: 10.5,\r\n            souceColors: {},\r\n        };\r\n\r\n        this.mapContainer = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        \r\n        map = new mapboxgl.Map({\r\n            container: this.mapContainer,\r\n            style: 'mapbox://styles/mapbox/streets-v11',\r\n            center: [this.state.lng, this.state.lat],\r\n            zoom: this.state.zoom\r\n        });\r\n\r\n        // Create a popup, but don't add it to the map yet.\r\n        var popup2 = new mapboxgl.Popup({\r\n            closeButton: false,\r\n            closeOnClick: false\r\n        });\r\n\r\n        popup = popup2\r\n\r\n        var size = 100\r\n\r\n        var pulsingDot = {\r\n            width: size,\r\n            height: size,\r\n            data: new Uint8Array(size * size * 4),\r\n             \r\n            // get rendering context for the map canvas when layer is added to the map\r\n            onAdd: function () {\r\n                var canvas = document.createElement('canvas');\r\n                canvas.width = this.width;\r\n                canvas.height = this.height;\r\n                this.context = canvas.getContext('2d');\r\n            },\r\n             \r\n            // called once before every frame where the icon will be used\r\n            render: function () {\r\n                var duration = 1000;\r\n                var t = (performance.now() % duration) / duration;\r\n                \r\n                var radius = (size / 2) * 0.3;\r\n                var outerRadius = (size / 2) * 0.7 * t + radius;\r\n                var context = this.context;\r\n                \r\n                // draw outer circle\r\n                context.clearRect(0, 0, this.width, this.height);\r\n                context.beginPath();\r\n                context.arc(\r\n                    this.width / 2,\r\n                    this.height / 2,\r\n                    outerRadius,\r\n                    0,\r\n                    Math.PI * 2\r\n                );\r\n            context.fillStyle = 'rgba(255, 200, 200,' + (1 - t) + ')';\r\n            context.fill();\r\n             \r\n            // draw inner circle\r\n            context.beginPath();\r\n            context.arc(\r\n            this.width / 2,\r\n            this.height / 2,\r\n            radius,\r\n            0,\r\n            Math.PI * 2\r\n            );\r\n            context.fillStyle = 'rgba(255, 100, 100, 1)';\r\n            context.strokeStyle = 'white';\r\n            context.lineWidth = 2 + 4 * (1 - t);\r\n            context.fill();\r\n            context.stroke();\r\n             \r\n            // update this image's data with data from the canvas\r\n            this.data = context.getImageData(\r\n            0,\r\n            0,\r\n            this.width,\r\n            this.height\r\n            ).data;\r\n             \r\n            // continuously repaint the map, resulting in the smooth animation of the dot\r\n            map.triggerRepaint();\r\n             \r\n            // return `true` to let the map know that the image was updated\r\n            return true;\r\n            }\r\n        };\r\n\r\n        map.addImage('pulsing-dot', pulsingDot, { pixelRatio: 2 });\r\n    }\r\n\r\n    static generateColor(){\r\n        var x = Math.random()\r\n\r\n        while(x == randomNum){\r\n            x = Math.random()\r\n        }\r\n\r\n        randomNum = x\r\n        let n = (x * 0xfffff * 1000000).toString(16);\r\n        return '#' + n.slice(0, 6);\r\n    }\r\n\r\n    static getDatetime(datetime, selection){\r\n\r\n        // 20/7/2020 8:00\r\n        let date = datetime.split(\" \")\r\n        let fulldate = date[0].split(\"/\")\r\n        \r\n\r\n        let mon = fulldate[1]\r\n        let day = fulldate[0]\r\n        let year = fulldate[2]\r\n        let fullTime = date[1].split(\":\")\r\n        let hh = fullTime[0]\r\n        let min = fullTime[1]\r\n\r\n        // const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n        const shortmonthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sept\", \"Oct\", \"Nov\", \"Dec\"];\r\n\r\n        let finalDatetime\r\n        if(selection === \"d\"){\r\n            finalDatetime = day + \" \" + shortmonthNames[parseInt(mon)-1] + \" \" + year\r\n        }\r\n        else if(selection === \"t\"){\r\n            let timing = \"AM\"\r\n            if(parseInt(hh) === 12){\r\n                timing = \"PM\"\r\n            }\r\n            if(parseInt(hh) > 12){\r\n                hh = parseInt(hh) - 12\r\n                timing = \"PM\"\r\n            }\r\n            finalDatetime = hh + \":\" + min + \" \" + timing\r\n        }\r\n        // else if(selection == \"dt\"){\r\n        //     finalDatetime = new Date(datetime)\r\n        // }\r\n        return finalDatetime\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state){\r\n\r\n\r\n        console.log(\"Yays\")\r\n        source = {}\r\n        // console.log(map.style.sourceCaches);\r\n        if(props.profile.length > 0 && props.movement.length > 0 ){\r\n          \r\n            let mappedResults = props.profile.map(x => {\r\n                return({\r\n                    profile: x,\r\n                    movements: props.movement.filter(xx => xx.suspectId === x.id)\r\n                })\r\n            })\r\n\r\n            // Accepts the array and key\r\n            const groupBy = (array, key) => {\r\n                // Return the end result\r\n                return array.reduce((result, currentValue) => {\r\n                // If an array already present for key, push it to the array. Else create an array and push the object\r\n                (result[currentValue[key]] = result[currentValue[key]] || []).push(\r\n                    currentValue\r\n                );\r\n                // Return the current iteration `result` value, this will be taken as next iteration `result` value and accumulate\r\n                return result;\r\n                }, {}); // empty object is the initial value for result object\r\n            };\r\n            \r\n            // Group by location address as key to the person array\r\n            const personGroupedByColor = groupBy(props.movement, 'locationShortaddress');\r\n            \r\n            // console.log(personGroupedByColor)\r\n\r\n            var UPoints = Object.keys(personGroupedByColor).map(function(key) {\r\n                if(personGroupedByColor[key].length === 1){\r\n                    let item = personGroupedByColor[key][0]\r\n                    return({\r\n                        'type': 'Feature',\r\n                        'properties': {\r\n                            'movementID':item.id,\r\n                            'enter': item.datetimeEntered,\r\n                            'leave': item.datetimeLeft,\r\n                            'placeID': item.locationShortaddress,\r\n                            'marker-symbol': '1',\r\n                            'marker-color': '#3bb2d0',\r\n                            'marker-size': 'large',\r\n                            'description':\r\n                                `<strong>${item.locationShortaddress}</strong><p>Time Entered: ${MainMap.getDatetime(item.datetimeEntered, 't')}</p><p>Time Left: ${MainMap.getDatetime(item.datetimeLeft, 't')}</p><p>Date: ${MainMap.getDatetime(item.datetimeLeft, 'd')}</p>`\r\n                            },\r\n                        'geometry': {\r\n                            'type': 'Point',\r\n                            'coordinates': [item.locationLong, item.locationLat],\r\n                        },\r\n                    })\r\n                }\r\n                else{\r\n                    let movementID = personGroupedByColor[key].map(x => x.id )\r\n                    // console.log(movementID)\r\n\r\n                    let enter = personGroupedByColor[key].map(x => x.datetimeEntered )\r\n                    let leave = personGroupedByColor[key].map(x => x.datetimeLeft)\r\n                    let placeID = key\r\n\r\n                    let text = `<strong>${key}</strong>`\r\n                    // console.log(placeID)\r\n                    personGroupedByColor[key].forEach(xx => {\r\n                        let name = props.profile.filter(x => x.id === xx.suspectId).map(x => {\r\n                            return(x.firstName + \" \" + x.lastName)\r\n                        })\r\n                        text += `<p>${name}</p>`\r\n                        text += `<p>Time Entered: ${MainMap.getDatetime(xx.datetimeEntered, 't')}</p><p>Time Left: ${MainMap.getDatetime(xx.datetimeLeft, 't')}</p><p>Date: ${MainMap.getDatetime(xx.datetimeLeft, 'd')}</p>`\r\n                    })\r\n\r\n                    // console.log(text)\r\n                    // let description = `<strong>${item.locationShortaddress}</strong><p>Time Entered: ${that.getDatetime(item.datetimeEntered, 't')}</p><p>Time Left: ${that.getDatetime(item.datetimeLeft, 't')}</p><p>Date: ${that.getDatetime(item.datetimeLeft, 'd')}</p>`\r\n\r\n                    return({\r\n                        'type': 'Feature',\r\n                        'properties': {\r\n                            'movementID': movementID,\r\n                            'enter': enter,\r\n                            'leave': leave,\r\n                            'placeID': placeID,\r\n                            'description': text,\r\n                            },\r\n                        'geometry': {\r\n                            'type': 'Point',\r\n                            'coordinates': [personGroupedByColor[key][0].locationLong, personGroupedByColor[key][0].locationLat]\r\n                        }\r\n                    })\r\n                }\r\n            });\r\n\r\n            for(var key in map.style.sourceCaches){\r\n                console.log(key)\r\n                if(key != 'composite'){\r\n                    map.removeLayer(key)\r\n                    if(key == \"placeIDs\"){\r\n                        map.off('click', 'placeIDs', function(e){\r\n\r\n                            var placeID = e.features[0].properties.placeID;           \r\n                            var description = e.features[0].properties.description;\r\n                            var movementID = e.features[0].properties.movementID;\r\n                            var enter = e.features[0].properties.enter;\r\n                            var leave = e.features[0].properties.leave;\r\n                            \r\n                            props.dataRetrieved(movementID)\r\n            \r\n\r\n                        });\r\n            \r\n                        map.off('mouseenter', 'placeIDs', function(e) {\r\n            \r\n                            // Change the cursor style as a UI indicator.\r\n                            map.getCanvas().style.cursor = 'pointer';\r\n                            \r\n                            var coordinates = e.features[0].geometry.coordinates.slice();\r\n                            var description = e.features[0].properties.description;\r\n            \r\n                            // Ensure that if the map is zoomed out such that multiple\r\n                            // copies of the feature are visible, the popup appears\r\n                            // over the copy being pointed to.\r\n                            while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {\r\n                                coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;\r\n                            }\r\n                            \r\n                            // Populate the popup and set its coordinates\r\n                            // based on the feature found.\r\n                            popup.setLngLat(coordinates).setHTML(description).addTo(map);\r\n                        });\r\n                            \r\n                        map.off('mouseleave', 'placeIDs', function() {\r\n                            map.getCanvas().style.cursor = '';\r\n                            popup.remove();\r\n                        });\r\n                    }\r\n                    map.removeSource(key)\r\n                }\r\n                // console.log(map.getStyle().layers)\r\n            }\r\n            \r\n            mappedResults.forEach(e => {\r\n\r\n                let lol = Math.floor(Math.random() * 101).toString()\r\n\r\n                let UMovements = e.movements.map(x => {\r\n                    return([x.locationLong, x.locationLat])\r\n                })\r\n\r\n                map.addSource(lol, {\r\n                    'type': 'geojson',\r\n                    'data': {\r\n                        'type': 'Feature',\r\n                        'properties': {},\r\n                        'geometry': {\r\n                            'type': 'LineString',\r\n                            'coordinates': UMovements\r\n                        }\r\n                    }\r\n                });\r\n\r\n                let color = MainMap.generateColor()\r\n                source = {...source, [color]: e.profile.firstName + \" \" + e.profile.lastName}\r\n                \r\n                map.addLayer({\r\n                    'id': lol,\r\n                    'type': 'line',\r\n                    'source': lol,\r\n                    'layout': {\r\n                        'line-join': 'round',\r\n                        'line-cap': 'round'\r\n                    },\r\n                    'paint': {\r\n                        'line-color': color,\r\n                        'line-width': 5\r\n                    }\r\n                });\r\n            })\r\n\r\n            map.addSource('placeIDs', {\r\n                'type': 'geojson',\r\n                'data': {\r\n                    'type': 'FeatureCollection',\r\n                    'features': UPoints\r\n                }\r\n            });\r\n\r\n            // Add a layer showing the places.\r\n            map.addLayer({\r\n                'id': 'placeIDs',\r\n                'type': 'symbol',\r\n                'source': 'placeIDs',\r\n                'layout': {\r\n                    // \"line-cap\": \"round\",\r\n                    // \"line-join\": \"round\"\r\n                    'icon-image': 'pulsing-dot',\r\n                    'icon-allow-overlap': true\r\n                }\r\n            });\r\n\r\n            map.on('click', 'placeIDs', function(e){\r\n\r\n                var movementID = e.features[0].properties.movementID;\r\n                \r\n                props.dataRetrieved(movementID)\r\n            });\r\n\r\n            map.on('mouseenter', 'placeIDs', function(e) {\r\n\r\n                // Change the cursor style as a UI indicator.\r\n                map.getCanvas().style.cursor = 'pointer';\r\n                \r\n                var coordinates = e.features[0].geometry.coordinates.slice();\r\n                var description = e.features[0].properties.description;\r\n\r\n                // Ensure that if the map is zoomed out such that multiple\r\n                // copies of the feature are visible, the popup appears\r\n                // over the copy being pointed to.\r\n                while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {\r\n                    coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;\r\n                }\r\n                \r\n                // Populate the popup and set its coordinates\r\n                // based on the feature found.\r\n                popup.setLngLat(coordinates).setHTML(description).addTo(map);\r\n            });\r\n                \r\n            map.on('mouseleave', 'placeIDs', function() {\r\n                map.getCanvas().style.cursor = '';\r\n                popup.remove();\r\n            });\r\n\r\n            counter += 1\r\n        } \r\n        \r\n        return true;\r\n    }\r\n\r\n    render(){\r\n        \r\n        let legend = []\r\n        for(var key in source){\r\n            legend.push(\r\n                <div style={{marginRight:\"20px\"}}>\r\n                    {/* <hr style={{borderTop: \"10px solid \" + {key}, width:\"50px\"}}/>  */}\r\n                    <span style={{height:\"16px\", width: \"50px\", backgroundColor: key, borderRadius: \"20%\", display: \"inline-block\"}}></span>\r\n                    <h5 style={{display: \"inline-block\", marginLeft:\"10px\"}}>{source[key]}</h5>\r\n                </div>\r\n            )\r\n        }\r\n        return(\r\n            <>\r\n                <div style={{display:\"flex\", justifyContent:\"space-between\"}}>\r\n                   {legend}\r\n                </div>\r\n                <div style={{position:\"relative\",height:\"700px\", width:\"100%\"}}>\r\n                    <div ref={el => this.mapContainer = el} style={{position:\"reletive\", width:\"inherit\", height:\"inherit\"}}/>\r\n                </div>\r\n            </>\r\n            \r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default MainMap"]},"metadata":{},"sourceType":"module"}