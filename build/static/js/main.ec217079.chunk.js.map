{"version":3,"sources":["Imgs/tplogo-course-search.png","Imgs/csit-logo.png","assets/img/brand/argon-react-white.png","Imgs/upload.svg","Components/Graphs/Graphs.js","Components/Tables/Table3.js","Components/maps.js","Components/iframe.js","Components/Tables/Timeline/TimelineTable.js","Components/Tables/Table.js","Components/Timelines/TimelineChart.js","Components/ProfileModal.js","Components/Tables/Table2.js","Components/MainMap.js","Components/Views (New)/MainPage.js","Components/Navbar.js","Components/Views (New)/Footers/Footer.js","Components/Views (New)/Navbars/DemoNavbar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Graph","that","props","style","display","height","width","options","series","type","onRowClick","row","fetch","UID","then","r","json","data","databack","catch","err","console","log","Table3","map","popup","tableprops","dataField","isKey","Component","mapboxgl","accessToken","Maps","mapClicked","e","features","properties","description","movementID","enter","leave","getPeople","mapEnter","getCanvas","cursor","coordinates","geometry","slice","Math","abs","lngLat","lng","setLngLat","setHTML","addTo","mapLeave","remove","state","lat","zoom","movements","mapContainer","React","createRef","id","setState","this","getMovements","Map","container","center","popup2","Popup","closeButton","closeOnClick","pulsingDot","Uint8Array","size","onAdd","canvas","document","createElement","context","getContext","render","t","performance","now","outerRadius","clearRect","beginPath","arc","PI","fillStyle","fill","strokeStyle","lineWidth","stroke","getImageData","triggerRepaint","on","addImage","pixelRatio","datetime","selection","finalDatetime","date","Date","mon","split","day","year","fullTime","hh","min","timing","parseInt","callbackFromParent","key","sourceCaches","removeLayer","removeSource","UPoints","x","datetimeEntered","datetimeLeft","locationShortaddress","getDatetime","locationLong","locationLat","UMovements","addSource","addLayer","position","ref","el","overflow","columnClassNameFormat","fieldValue","rowIdx","colIdx","time","intersectTime","TimelineTable","tableStyle","columnClassName","moment","extendMoment","Moment","TimelineChart","retrieved","forEach","startDate1","endDate","undefined","date2","toString","date1","date21","time1","count","events","range","range2","minIntersect","intersect","diff","name","firstName","lastName","convertSQLDate","intersection","className","iconStyle","background","color","backgroundColor","layout","ProfileModal","myCallback","dataFromChild","datas","tableCallback","placename","mappingsCC","filter","caseNumber","peopleProfileId","place","mappingsPATP","main","fontSize","profile","gender","maritalStatus","phoneNumber","company","defaultActiveKey","eventKey","title","textAlign","selectRowProp","mode","clickToSelect","onSelect","isSelected","selectedrows","push","onSelectAll","rows","i","length","Table","selectRow","Table2","source","testing","randomNum","MainMap","dataRetrieved","mapMouseEnter","mapMouseLeave","souceColors","legend","marginRight","borderRadius","marginLeft","justifyContent","random","fulldate","oldHex1","oldHex2","hex1","substring","hex2","r1","g1","b1","r2","g2","b2","g","b","movement","mappedResults","xx","suspectId","personGroupedByColor","array","reduce","result","currentValue","groupBy","Object","keys","item","placeID","text","sourceIDs","colorPrevious","lol","floor","includes","generateColor","hexColorDelta","Footer","Container","Row","Col","lg","href","target","src","require","xs","alt","UncontrolledTooltip","delay","DemoNavbar","onExiting","collapseClasses","onExited","dropDownValue","dataList","suspectCases","error","errorMsg","showModal","filenames","showSelection","CCID","CloseContacts","fromCCID","profileModal","showSelection2","mapData","collapseOpen","Headroom","getElementById","init","expand","MainPage","dropdownClicked","originalSus","suspectCasesOriginal","originalMoves","movementsOriginal","currentTarget","textContent","myCallback2","databackTable","toCCClicked","IDs","newItem","fromCCClicked","toggleNavs","index","preventDefault","dataRetrievedMap","uploadFile","bind","uploadFile2","handleClick","handleClick2","legends","tabs","documentElement","scrollTop","scrollingElement","refs","list","handleData","fileUploader","click","fileUploader2","event","file","files","reader","FileReader","onload","lols","Papa","parse","header","skipEmptyLines","names","readAsText","dateTimeParts","dateParts","timeParts","getTime","series2","strings","numbers","match","Number","m1","moves","p1","sus","y","convertDate","obj","constructor","arr1","arr2","e1","e2","compare","graph1","displaySetting2","maindp1","maindp2","ds1","ds11","ds12","ds3","ds31","ds32","displayWarning","populateGraph1","chart","dataPointSelection","chartContext","config","seriesIndex","dataPointIndex","response","plotOptions","bar","horizontal","barHeight","xaxis","labels","datetimeFormatter","hour","opacity","horizontalAlign","tooltip","tool","isEmptyObject","newlist","newlist2","mappingsclose","xmlns","preserveAspectRatio","version","viewBox","points","Card","CardBody","onClick","onChange","class","role","visibility","top","UncontrolledDropdown","group","DropdownToggle","caret","DropdownMenu","DropdownItem","Nav","pills","NavItem","NavLink","aria-selected","classnames","active","TabContent","activeTab","TabPane","tabId","show","onHide","centered","scrollable","Header","Title","Body","float","alignItems","variant","App","exact","path","routerProps","Boolean","window","location","hostname","ReactDOM","basename","process","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.ec217079.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/tplogo-course-search.bc4d581f.png\";","module.exports = __webpack_public_path__ + \"static/media/csit-logo.c921008d.png\";","module.exports = __webpack_public_path__ + \"static/media/argon-react-white.275a2629.png\";","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M0 0h24v24H0z\",\n  fill: \"none\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M5 4v2h14V4H5zm0 10h4v6h6v-6h4l-7-7-7 7z\"\n});\n\nvar SvgUpload = function SvgUpload(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 24 24\",\n    fill: \"black\",\n    width: \"100px\",\n    height: \"100px\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgUpload, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/upload.b8ccb228.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react'\r\nimport * as rb from 'react-bootstrap'\r\nimport {useState} from 'react'\r\nimport Chart from \"react-apexcharts\";\r\n\r\nfunction Graph(props){\r\n\r\n    return(\r\n        <div style={{display:props.display, height:\"100%\", width:\"100%\"}}>\r\n            \r\n            {/* <div style={{border:\"1px solid #000000\", borderRadius:\"15px\",display:\"inline-block\", backgroundColor:\"#FFFFFF\", margin:\"10px\"}}>\r\n                <Chart options={props.options} series={props.series} type=\"rangeBar\" height={613} width={500}/>\r\n            </div> */}\r\n            <div style={{width:\"inherit\", height:\"300px\"}}>\r\n                <Chart options={props.options} series={props.series} type=\"rangeBar\" height=\"100%\" width=\"100%\"/>\r\n            </div>\r\n            \r\n            \r\n\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default Graph","import React, { useRef } from 'react'\r\nimport * as rb from 'react-bootstrap'\r\nimport {BootstrapTable, TableHeaderColumn} from 'react-bootstrap-table';\r\nimport ProfileModal from '../ProfileModal'\r\n\r\nlet that\r\n\r\nconst options = {\r\n    onRowClick: function(row) {\r\n        fetch(`https://internshipcsit.herokuapp.com/getProfile?IDs=${row.UID}`).then((r) => r.json()).then((data) => {that.databack(data)}).catch(err => {console.log(err)})\r\n    }\r\n};\r\n\r\nfunction Table3(props){\r\n    that = props\r\n\r\n    if(props.type === \"CC\"){\r\n        return(\r\n            <div style={{display:props.display}}>\r\n                <BootstrapTable data={ props.tableprops } options={ options }>\r\n                    <TableHeaderColumn dataField='caseNumber'>Case Number</TableHeaderColumn>\r\n                    <TableHeaderColumn dataField='UID' isKey>User ID</TableHeaderColumn>\r\n                    <TableHeaderColumn dataField='name'>Name</TableHeaderColumn>\r\n                    <TableHeaderColumn dataField='place'>Place At</TableHeaderColumn>\r\n                    <TableHeaderColumn dataField='datetime'>Date and Time</TableHeaderColumn>\r\n                </BootstrapTable>\r\n            </div>\r\n        )\r\n    }\r\n    else{\r\n        return(\r\n            <div style={{display:props.display}}>\r\n                <BootstrapTable data={ props.tableprops } options={ options }>\r\n                    <TableHeaderColumn dataField='UID' isKey>User ID</TableHeaderColumn>\r\n                    <TableHeaderColumn dataField='name'>Name</TableHeaderColumn>\r\n                    <TableHeaderColumn dataField='place'>Place At</TableHeaderColumn>\r\n                    <TableHeaderColumn dataField='datetime'>Date and Time</TableHeaderColumn>\r\n                </BootstrapTable>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Table3","import React from 'react'\r\nimport mapboxgl from 'mapbox-gl';\r\n\r\nmapboxgl.accessToken = 'pk.eyJ1IjoiYXF1YWltcGFjdCIsImEiOiJja2R0d2N3emswdzlwMnptcGliNTk4ZHNkIn0.jPYEzZD-aErgL25Zx9N_Kg';\r\n\r\nlet map\r\nlet popup\r\nlet source\r\n\r\nclass Maps extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        \r\n        this.state = {\r\n            lng: 103.851959,\r\n            lat: 1.290270,\r\n            zoom: 10.5,\r\n            movements:[],\r\n        };\r\n\r\n        this.mapContainer = React.createRef();\r\n    }\r\n\r\n    getMovements(id){\r\n        fetch(`https://internshipcsit.herokuapp.com/getMovementbyID?IDs=${id}`).then(r => r.json()).then(data => this.setState({movements:data})).catch(err => {console.log(err)})\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getMovements(this.props.UID)\r\n\r\n        map = new mapboxgl.Map({\r\n            container: this.mapContainer,\r\n            style: 'mapbox://styles/mapbox/streets-v11',\r\n            center: [this.state.lng, this.state.lat],\r\n            zoom: this.state.zoom\r\n        });\r\n\r\n        var size = 100\r\n        \r\n        // Create a popup, but don't add it to the map yet.\r\n        var popup2 = new mapboxgl.Popup({\r\n            closeButton: false,\r\n            closeOnClick: false\r\n        });\r\n\r\n        popup = popup2\r\n\r\n        var pulsingDot = {\r\n            width: size,\r\n            height: size,\r\n            data: new Uint8Array(size * size * 4),\r\n             \r\n            // get rendering context for the map canvas when layer is added to the map\r\n            onAdd: function () {\r\n                var canvas = document.createElement('canvas');\r\n                canvas.width = this.width;\r\n                canvas.height = this.height;\r\n                this.context = canvas.getContext('2d');\r\n            },\r\n             \r\n            // called once before every frame where the icon will be used\r\n            render: function () {\r\n                var duration = 1000;\r\n                var t = (performance.now() % duration) / duration;\r\n                \r\n                var radius = (size / 2) * 0.3;\r\n                var outerRadius = (size / 2) * 0.7 * t + radius;\r\n                var context = this.context;\r\n                \r\n                // draw outer circle\r\n                context.clearRect(0, 0, this.width, this.height);\r\n                context.beginPath();\r\n                context.arc(\r\n                    this.width / 2,\r\n                    this.height / 2,\r\n                    outerRadius,\r\n                    0,\r\n                    Math.PI * 2\r\n                );\r\n            context.fillStyle = 'rgba(255, 200, 200,' + (1 - t) + ')';\r\n            context.fill();\r\n             \r\n            // draw inner circle\r\n            context.beginPath();\r\n            context.arc(\r\n            this.width / 2,\r\n            this.height / 2,\r\n            radius,\r\n            0,\r\n            Math.PI * 2\r\n            );\r\n            context.fillStyle = 'rgba(255, 100, 100, 1)';\r\n            context.strokeStyle = 'white';\r\n            context.lineWidth = 2 + 4 * (1 - t);\r\n            context.fill();\r\n            context.stroke();\r\n             \r\n            // update this image's data with data from the canvas\r\n            this.data = context.getImageData(\r\n            0,\r\n            0,\r\n            this.width,\r\n            this.height\r\n            ).data;\r\n             \r\n            // continuously repaint the map, resulting in the smooth animation of the dot\r\n            map.triggerRepaint();\r\n             \r\n            // return `true` to let the map know that the image was updated\r\n            return true;\r\n            }\r\n        };\r\n\r\n        map.on('click', 'places', this.mapClicked);\r\n\r\n        map.on('mouseenter', 'places', this.mapEnter);\r\n            \r\n        map.on('mouseleave', 'places', this.mapLeave);\r\n\r\n        map.addImage('pulsing-dot', pulsingDot, { pixelRatio: 2 });\r\n    }\r\n\r\n    mapClicked = (e) => {\r\n        var description = e.features[0].properties.description;\r\n        var movementID = e.features[0].properties.movementID;\r\n        var enter = e.features[0].properties.enter;\r\n        var leave = e.features[0].properties.leave;\r\n        // console.log(movementID)\r\n        this.getPeople(movementID, enter, leave)\r\n    }\r\n\r\n    mapEnter = (e)  => {\r\n        // Change the cursor style as a UI indicator.\r\n        map.getCanvas().style.cursor = 'pointer';\r\n            \r\n        var coordinates = e.features[0].geometry.coordinates.slice();\r\n        var description = e.features[0].properties.description;\r\n        \r\n        // Ensure that if the map is zoomed out such that multiple\r\n        // copies of the feature are visible, the popup appears\r\n        // over the copy being pointed to.\r\n        while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {\r\n            coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;\r\n        }\r\n        \r\n        // Populate the popup and set its coordinates\r\n        // based on the feature found.\r\n        popup.setLngLat(coordinates).setHTML(description).addTo(map);\r\n    }\r\n\r\n    mapLeave = () => {\r\n        map.getCanvas().style.cursor = '';\r\n        popup.remove();\r\n    }\r\n\r\n    getDatetime(datetime, selection){\r\n        let date = new Date(datetime)\r\n        date = (date + \"\").split(\" \")\r\n        let mon = date[1]\r\n        let day = date[2]\r\n        let year = date[3]\r\n        let fullTime = date[4].split(\":\")\r\n        let hh = fullTime[0]\r\n        let min = fullTime[1]\r\n        let sec = fullTime[2]\r\n\r\n        // const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n\r\n        let finalDatetime\r\n        if(selection === \"d\"){\r\n            finalDatetime = day + \" \" + mon + \" \" + year\r\n        }\r\n        else if(selection === \"t\"){\r\n            let timing = \"AM\"\r\n            if(parseInt(hh) === 12){\r\n                timing = \"PM\"\r\n            }\r\n            if(parseInt(hh) > 12){\r\n                hh = parseInt(hh) - 12\r\n                timing = \"PM\"\r\n            }\r\n            finalDatetime = hh + \":\" + min + \" \" + timing\r\n        }\r\n        else if(selection === \"dt\"){\r\n            finalDatetime = new Date(datetime)\r\n        }\r\n        return finalDatetime\r\n    }\r\n\r\n    getPeople(id, enter, leave)\r\n    {\r\n        fetch(`https://internshipcsit.herokuapp.com/getPeopleTiming?IDs=${id}`).then(r => r.json()).then((data) => {this.props.callbackFromParent({data:data, enter:enter, leave:leave})}).catch(err => {console.log(err)})\r\n    }\r\n\r\n    componentDidUpdate(){\r\n\r\n        console.log(this.state.movements)\r\n\r\n        for(var key in map.style.sourceCaches){\r\n            console.log(key)\r\n            if(key != 'composite'){\r\n                map.removeLayer(key)\r\n                map.removeSource(key)\r\n            }\r\n            // console.log(map.getStyle().layers)\r\n        }\r\n\r\n        let UPoints = this.state.movements.map(x => {\r\n            return({\r\n                'type': 'Feature',\r\n                'properties': {\r\n                    'movementID': x.id,\r\n                    'enter': x.datetimeEntered,\r\n                    'leave': x.datetimeLeft,\r\n                    'description':\r\n                        `<strong>${x.locationShortaddress}</strong><p>Time Entered: ${this.getDatetime(x.datetimeEntered, 't')}</p><p>Time Left: ${this.getDatetime(x.datetimeLeft, 't')}</p><p>Date: ${this.getDatetime(x.datetimeLeft, 'd')}</p>`\r\n                    },\r\n                'geometry': {\r\n                    'type': 'Point',\r\n                    'coordinates': [x.locationLong, x.locationLat]\r\n                }\r\n            })\r\n        })\r\n\r\n        let UMovements = this.state.movements.map(x => {\r\n            return([x.locationLong, x.locationLat])\r\n        })\r\n\r\n        console.log(\"Maps debug 1\")\r\n\r\n        let that = this\r\n       \r\n        map.addSource('route', {\r\n            'type': 'geojson',\r\n            'data': {\r\n                'type': 'Feature',\r\n                'properties': {},\r\n                'geometry': {\r\n                    'type': 'LineString',\r\n                    'coordinates': UMovements\r\n                }\r\n            }\r\n        });\r\n\r\n        console.log(\"Maps debug 2\")\r\n        \r\n        map.addLayer({\r\n            'id': 'route',\r\n            'type': 'line',\r\n            'source': 'route',\r\n            'layout': {\r\n                'line-join': 'round',\r\n                'line-cap': 'round'\r\n            },\r\n            'paint': {\r\n                'line-color': '#888',\r\n                'line-width': 5\r\n            }\r\n        });\r\n\r\n        console.log(\"Maps debug 3\")\r\n\r\n        map.addSource('places', {\r\n            'type': 'geojson',\r\n            'data': {\r\n                'type': 'FeatureCollection',\r\n                'features': UPoints\r\n            }\r\n        });\r\n\r\n        console.log(\"Maps debug 4\")\r\n        \r\n        // Add a layer showing the places.\r\n        map.addLayer({\r\n            'id': 'places',\r\n            'type': 'symbol',\r\n            'source': 'places',\r\n            'layout': {\r\n                // \"line-cap\": \"round\",\r\n                // \"line-join\": \"round\"\r\n                'icon-image': 'pulsing-dot',\r\n                'icon-allow-overlap': true\r\n            }\r\n        });\r\n\r\n        console.log(\"Maps debug 5\")\r\n    }\r\n\r\n    render(){\r\n\r\n        return(\r\n            <div style={{position:\"relative\",height:\"300px\", width:\"100%\"}}>\r\n                <div ref={el => this.mapContainer = el} style={{position:\"reletive\", width:\"inherit\", height:\"inherit\", overflow: \"visible\"}}/>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default Maps","import React, { Children, Component } from 'react'\r\nimport { createPortal } from 'react-dom'\r\n\r\nexport class IFrame extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.setContentRef = node => {\r\n      this.contentRef = node?.contentWindow?.document.body\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { children, ...props } = this.props\r\n    return (\r\n      <iframe {...props} ref={this.setContentRef}>\r\n        {this.contentRef &&\r\n          createPortal(\r\n            Children.only(children),\r\n            this.contentRef\r\n          )}\r\n      </iframe>\r\n    )\r\n  }\r\n}","import React, { useRef } from 'react'\r\nimport * as rb from 'react-bootstrap'\r\nimport {BootstrapTable, TableHeaderColumn} from 'react-bootstrap-table';\r\nimport ProfileModal from '../../ProfileModal'\r\nimport './style.css'\r\n\r\nconst options = {\r\n    onRowClick: function(row) {\r\n        // fetch(`http://localhost:8080/getProfile?IDs=${row.UID}`).then((r) => r.json()).then((data) => {that.databack(data)}).catch(err => {console.log(err)})\r\n    }\r\n};\r\n\r\nfunction columnClassNameFormat(fieldValue, row, rowIdx, colIdx) {\r\n    // fieldValue is column value\r\n    // row is whole row object\r\n    // rowIdx is index of row\r\n    // colIdx is index of column\r\n    // console.log()\r\n    let time = parseInt(row.intersectTime.split(\" \")[0])\r\n\r\n    if(time >= 30){\r\n        return 'error'\r\n    }\r\n    else if( time >= 15){\r\n        return 'minor'\r\n    }\r\n    else{\r\n        return 'noError'\r\n    }\r\n}\r\n\r\nfunction TimelineTable(props){\r\n    return(\r\n        <div style={{display:props.display}} tableStyle>\r\n            <BootstrapTable data={ props.tableprops } options={ options }>\r\n                <TableHeaderColumn dataField='name' isKey>Name</TableHeaderColumn>\r\n                <TableHeaderColumn dataField='datetime'>Date and Time</TableHeaderColumn>\r\n                <TableHeaderColumn dataField='intersectTime'>Intersection Time</TableHeaderColumn>\r\n                <TableHeaderColumn dataField='intersection' columnClassName={ columnClassNameFormat }>Intersection Status</TableHeaderColumn>\r\n                \r\n            </BootstrapTable>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TimelineTable","import React, { useRef } from 'react'\r\nimport * as rb from 'react-bootstrap'\r\nimport {BootstrapTable, TableHeaderColumn} from 'react-bootstrap-table';\r\nimport ProfileModal from '../ProfileModal'\r\n\r\nconst selectRowProp = {\r\n    mode: 'checkbox',\r\n    clickToSelect: true,\r\n    onSelect: onRowSelect,\r\n    onSelectAll: onSelectAll\r\n};\r\n\r\nlet that\r\n\r\nlet selectedrows = []\r\n\r\nconst options = {\r\n    onRowClick: function(row) {\r\n        fetch(`https://internshipcsit.herokuapp.com/getProfile?IDs=${row.UID}`).then((r) => r.json()).then((data) => {that.databack(data)}).catch(err => {console.log(err)})\r\n    }\r\n};\r\n\r\nfunction onRowSelect(row, isSelected, e) {\r\n    // let rowStr = '';\r\n    if(isSelected){\r\n        selectedrows.push(row[\"UID\"])\r\n    }\r\n    else{\r\n        selectedrows = selectedrows.filter(x => x !== row[\"UID\"])\r\n    }\r\n    // console.log(selectedRows);\r\n    that.callbackFromParent(selectedrows);\r\n    // alert(`is selected: ${isSelected}, ${rowStr}`);\r\n}\r\n\r\nfunction onSelectAll(isSelected, rows) {\r\n    \r\n    if(isSelected){\r\n        for (let i = 0; i < rows.length; i++) {\r\n            selectedrows.push(rows[i].UID)\r\n        }\r\n    }\r\n    else{\r\n        for (let i = 0; i < rows.length; i++) {\r\n            selectedrows = selectedrows.filter(x => x !== rows[i].UID)\r\n        }\r\n        \r\n    }\r\n    // console.log(selectedRows);\r\n    that.callbackFromParent(selectedrows);\r\n}\r\n\r\nfunction Table(props){\r\n    that = props\r\n\r\n    if(props.type === \"CC\"){\r\n        return(\r\n            <div style={{display:props.display}}>\r\n                <BootstrapTable data={ props.tableprops } options={ options }>\r\n                    <TableHeaderColumn dataField='caseNumber'>Case Number</TableHeaderColumn>\r\n                    <TableHeaderColumn dataField='UID' isKey>User ID</TableHeaderColumn>\r\n                    <TableHeaderColumn dataField='name'>Name</TableHeaderColumn>\r\n                    <TableHeaderColumn dataField='place'>Place At</TableHeaderColumn>\r\n                    <TableHeaderColumn dataField='datetime'>Date and Time</TableHeaderColumn>\r\n                </BootstrapTable>\r\n            </div>\r\n        )\r\n    }\r\n    else{\r\n        if(props.type === \"modal-edit\"){\r\n            return(\r\n                <div style={{display:props.display}}>\r\n                    <BootstrapTable data={ props.tableprops } selectRow={ selectRowProp }>\r\n                        <TableHeaderColumn dataField='UID' isKey>User ID</TableHeaderColumn>\r\n                        <TableHeaderColumn dataField='name'>Name</TableHeaderColumn>\r\n                        <TableHeaderColumn dataField='place'>Place At</TableHeaderColumn>\r\n                        <TableHeaderColumn dataField='datetime'>Date and Time</TableHeaderColumn>\r\n                    </BootstrapTable>\r\n                </div>\r\n            )\r\n        }\r\n        else{\r\n            return(\r\n                <div style={{display:props.display}}>\r\n                    <BootstrapTable data={ props.tableprops } options={ options }>\r\n                        <TableHeaderColumn dataField='UID' isKey>User ID</TableHeaderColumn>\r\n                        <TableHeaderColumn dataField='name'>Name</TableHeaderColumn>\r\n                        <TableHeaderColumn dataField='place'>Place At</TableHeaderColumn>\r\n                        <TableHeaderColumn dataField='datetime'>Date and Time</TableHeaderColumn>\r\n                    </BootstrapTable>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n    \r\n}\r\n\r\nexport default Table","import React from 'react'\r\n// import Timeline from 'react-image-timeline';\r\nimport { VerticalTimeline, VerticalTimelineElement }  from 'react-vertical-timeline-component';\r\nimport './style.css'\r\nimport TimelineTable from '../Tables/Timeline/TimelineTable'\r\nimport Moment from 'moment';\r\nimport { extendMoment } from 'moment-range';\r\n \r\nconst moment = extendMoment(Moment);\r\n\r\n\r\nclass TimelineChart extends React.Component{\r\n\r\n    constructor(props){\r\n        \r\n        super(props)\r\n        this.state = {\r\n            movements: [],\r\n            retrieved: [],\r\n        }\r\n\r\n    }\r\n\r\n    getMovements(id){\r\n        fetch(`https://internshipcsit.herokuapp.com/getMovementbyID?IDs=${id}`).then(r => r.json()).then(data => {\r\n            this.setState({movements:data})\r\n            data.forEach(x => {\r\n                this.getPeople(x.id)\r\n            })\r\n        }).catch(err => {console.log(err)})\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getMovements(this.props.UID)\r\n    }\r\n\r\n    convertSQLDate(startDate1, endDate, type = undefined){\r\n        \r\n        if(startDate1 !== undefined && endDate !== undefined){\r\n            var date = new Date(startDate1)\r\n            var date2 = date.toString().split(\" \")\r\n            var time = date2[4].split(\":\")\r\n    \r\n            var date1 = new Date(endDate)\r\n            var date21 = date1.toString().split(\" \")\r\n            var time1 = date21[4].split(\":\")\r\n            \r\n            let str\r\n            if(type === \"header\"){\r\n                str = time[0] + \":\"+ time[1] + \" - \" + time1[0] + \":\" + time1[1]\r\n            }\r\n            else{\r\n                str = date2[2] + \" \" + date2[1] + \", \" + time[0] + \":\"+ time[1] + \" - \" + time1[0] + \":\" + time1[1]\r\n            }\r\n           \r\n            return str\r\n        }\r\n        // return date2[1]\r\n    }\r\n\r\n    getPeople(id)\r\n    {\r\n        fetch(`https://internshipcsit.herokuapp.com/getPeopleTiming?IDs=${id}`).then(r => r.json()).then((data) => {this.setState({ retrieved: [...this.state.retrieved, data]})}).catch(err => {console.log(err)})\r\n    }\r\n\r\n    render(){\r\n\r\n        let count = 0\r\n\r\n        let events = this.state.movements.map(x => {\r\n\r\n            let range = moment.range(x.datetimeEntered, x.datetimeLeft)\r\n\r\n            let tableprops\r\n            if(this.state.retrieved[count] !== undefined){\r\n                tableprops = this.state.retrieved[count].map(data => {\r\n\r\n                    let range2 = moment.range(data.datetimeEntered, data.datetimeLeft)\r\n                    let minIntersect = range.intersect(range2).diff('minute')\r\n\r\n                    return({\r\n                        name: data.firstName + \" \" + data.lastName,\r\n                        datetime: this.convertSQLDate(data.datetimeEntered, data.datetimeLeft),\r\n                        intersectTime: minIntersect + \" min\",\r\n                        intersection: \"\"\r\n                    })\r\n                })\r\n            }\r\n           \r\n            count += 1\r\n            return(\r\n                <VerticalTimelineElement\r\n                    className=\"vertical-timeline-element--work\"\r\n                    date={\"Date: \" + this.convertSQLDate(x.datetimeEntered, x.datetimeLeft)}\r\n                    iconStyle={{ background: 'rgb(33, 150, 243)', color: '#fff' }}>\r\n\r\n                    {/* <h3 className=\"vertical-timeline-element-title\">{x.locationShortaddress}</h3> */}\r\n\r\n                    <h4 className=\"vertical-timeline-element-subtitle\">{x.locationShortaddress}</h4>\r\n                    <br/>\r\n                    <TimelineTable tableprops={tableprops}/>\r\n                </VerticalTimelineElement>\r\n            )\r\n        })\r\n\r\n        return(\r\n            <div style={{backgroundColor:\"#FFFFFF\"}}>\r\n                <VerticalTimeline layout=\"1-column\">\r\n                    {events}\r\n                </VerticalTimeline>\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default TimelineChart","import React, {useState} from 'react'\r\nimport * as rb from 'react-bootstrap'\r\nimport Table3 from './Tables/Table3'\r\nimport { IFrame } from './iframe'\r\nimport Maps from './maps';\r\nimport TimelineChart from './Timelines/TimelineChart'\r\n\r\nclass ProfileModal extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            datas:[],\r\n            enter:\"\",\r\n            leave:\"\",\r\n        }\r\n    }\r\n\r\n    // For the Map\r\n    myCallback = (dataFromChild) => {\r\n        // console.log(\"Datafrmchile:\" + dataFromChild)\r\n        this.setState({datas:dataFromChild.data})\r\n        this.setState({enter:dataFromChild.enter})\r\n        this.setState({leave:dataFromChild.leave})\r\n    }\r\n\r\n    tableCallback = (dataFromChild) => {\r\n        \r\n    }\r\n\r\n    convertSQLDate(startDate1, endDate, type = undefined){\r\n        \r\n        if(startDate1 !== undefined && endDate !== undefined){\r\n            var date = new Date(startDate1)\r\n            var date2 = date.toString().split(\" \")\r\n            var time = date2[4].split(\":\")\r\n    \r\n            var date1 = new Date(endDate)\r\n            var date21 = date1.toString().split(\" \")\r\n            var time1 = date21[4].split(\":\")\r\n            \r\n            let str\r\n            if(type === \"header\"){\r\n                str = time[0] + \":\"+ time[1] + \" - \" + time1[0] + \":\" + time1[1]\r\n            }\r\n            else{\r\n                str = date2[2] + \" \" + date2[1] + \", \" + time[0] + \":\"+ time[1] + \" - \" + time1[0] + \":\" + time1[1]\r\n            }\r\n           \r\n            return str\r\n        }\r\n        // return date2[1]\r\n    }\r\n\r\n    render(){\r\n\r\n        let mappingsCC = this.state.datas.filter(data => data.caseNumber !== null).map(data => {\r\n            return({\r\n                caseNumber:data.caseNumber,\r\n                UID:data.peopleProfileId,\r\n                name:data.firstName + \" \" + data.lastName,\r\n                place:data.locationShortaddress,\r\n                datetime:this.convertSQLDate(data.datetimeEntered, data.datetimeLeft)\r\n            })\r\n        })\r\n\r\n        let mappingsPATP = this.state.datas.filter(data => data.caseNumber === null).map(data =>{\r\n            return({\r\n                UID:data.peopleProfileId,\r\n                name:data.firstName + \" \" + data.lastName,\r\n                place:data.locationShortaddress,\r\n                datetime:this.convertSQLDate(data.datetimeEntered, data.datetimeLeft)\r\n            })\r\n        })\r\n\r\n        let main = this.state.datas[0]\r\n        let placename\r\n        let time\r\n        \r\n\r\n        if(main != undefined){\r\n            placename = main.locationShortaddress\r\n            if(this.state.enter !== \"\" && this.state.leave !== \"\"){\r\n                time = this.convertSQLDate(this.state.enter, this.state.leave, \"header\")\r\n            }\r\n        }\r\n       \r\n        return(\r\n            <div>\r\n                <text style={{fontSize:\"20px\", color:\"#424761\"}}><b>Name:</b> {this.props.profile.firstName + \" \" + this.props.profile.lastName}</text>\r\n                <br/>\r\n\r\n                <text style={{fontSize:\"20px\", color:\"#424761\"}}><b>Gender:</b> {this.props.profile.gender}</text>\r\n                <br/>\r\n\r\n                <text style={{fontSize:\"20px\", color:\"#424761\"}}><b>Case Number:</b> {this.props.profile.caseNumber}</text>\r\n                <br/>\r\n\r\n                <text style={{fontSize:\"20px\", color:\"#424761\"}}><b>Marital Status:</b> {this.props.profile.maritalStatus}</text>\r\n                <br/>\r\n\r\n                <text style={{fontSize:\"20px\", color:\"#424761\"}}><b>Phone Number:</b> {this.props.profile.phoneNumber}</text>\r\n                <br/>\r\n\r\n                <text style={{fontSize:\"20px\", color:\"#424761\"}}><b>Company:</b> {this.props.profile.company}</text>\r\n                <br/>\r\n                <br/>\r\n\r\n                <text style={{fontSize:\"30px\", color:\"#424761\"}}><b>Movement Visualisation:</b></text>\r\n                <br/>\r\n                <Maps UID={this.props.profile.id} callbackFromParent={this.myCallback}/>\r\n                <br/>\r\n\r\n                <text style={{fontSize:\"30px\", color:\"#424761\"}}><b>Timeline:</b></text>\r\n                <br/>\r\n                <TimelineChart UID={this.props.profile.id}/>\r\n\r\n                <text style={{fontSize:\"30px\", color:\"#424761\"}}><b>Breakdown of movement:</b> <text style={{fontSize:\"20px\", color:\"#424761\"}}><rb.Badge>{placename}</rb.Badge></text>{' '} <text style={{fontSize:\"20px\", color:\"#424761\"}}><rb.Badge>{time}</rb.Badge></text></text>\r\n                <br/>\r\n\r\n                <rb.Tabs defaultActiveKey=\"home\" id=\"uncontrolled-tab-example\">\r\n                    <rb.Tab eventKey=\"home\" title=\"CONFIRMED CASES\">\r\n                        <div style={{textAlign: \"left\", height:\"100%\"}}>\r\n                            {/* <Chip label=\"Basic\" /> */}\r\n                            {/* PlaceName */}\r\n                            {/* {this.state.placename} */}\r\n                            {/* Time Span */}\r\n                            {/* {this.convertSQLDate(this.state.datetime[0], this.state.datetime[1], \"header\")} */}\r\n                            <Table3 tableprops={mappingsCC} type = \"CC\" databack={this.tableCallback()}/>\r\n                        </div>\r\n                    </rb.Tab>\r\n\r\n                    <rb.Tab eventKey=\"contact\" title=\"PUBLIC AT THE PLACE\">\r\n                        <div style={{textAlign: \"left\", height:\"100%\"}}>\r\n                            {/* PlaceName */}\r\n                            {/* {this.state.placename} */}\r\n                            {/* Time Span */}\r\n                            {/* {this.convertSQLDate(this.state.datetime[0], this.state.datetime[1], \"header\")} */}\r\n                            <Table3 tableprops={mappingsPATP} type=\"PATP\" databack={this.tableCallback()}/>\r\n                        </div>\r\n                    </rb.Tab>\r\n                </rb.Tabs> \r\n            </div>\r\n        )\r\n    }\r\n   \r\n}\r\n\r\nexport default ProfileModal\r\n","import React, { useRef } from 'react'\r\nimport * as rb from 'react-bootstrap'\r\nimport {BootstrapTable, TableHeaderColumn} from 'react-bootstrap-table';\r\n\r\nconst selectRowProp = {\r\n    mode: 'checkbox',\r\n    clickToSelect: true,\r\n    onSelect: onRowSelect,\r\n    onSelectAll: onSelectAll\r\n};\r\n\r\nlet that\r\n\r\nlet selectedrows = []\r\n\r\n\r\nfunction onRowSelect(row, isSelected, e) {\r\n    // let rowStr = '';\r\n    if(isSelected){\r\n        selectedrows.push(row[\"UID\"])\r\n    }\r\n    else{\r\n        selectedrows = selectedrows.filter(x => x !== row[\"UID\"])\r\n    }\r\n    // console.log(selectedRows);\r\n    that.callbackFromParent(selectedrows);\r\n    // alert(`is selected: ${isSelected}, ${rowStr}`);\r\n}\r\n\r\nfunction onSelectAll(isSelected, rows) {\r\n    \r\n    if(isSelected){\r\n        for (let i = 0; i < rows.length; i++) {\r\n            selectedrows.push(rows[i].UID)\r\n        }\r\n    }\r\n    else{\r\n        for (let i = 0; i < rows.length; i++) {\r\n            selectedrows = selectedrows.filter(x => x !== rows[i].UID)\r\n        }\r\n        \r\n    }\r\n    // console.log(selectedRows);\r\n    that.callbackFromParent(selectedrows);\r\n}\r\n\r\nfunction Table2(props){\r\n    that = props\r\n    return(\r\n        <div style={{display:props.display}}>\r\n            <BootstrapTable data={ props.tableprops } selectRow={ selectRowProp }>\r\n                <TableHeaderColumn dataField='UID' isKey>User ID</TableHeaderColumn>\r\n                <TableHeaderColumn dataField='name'>Name</TableHeaderColumn>\r\n                <TableHeaderColumn dataField='place'>Place At</TableHeaderColumn>\r\n                <TableHeaderColumn dataField='datetime'>Date and Time</TableHeaderColumn>\r\n            </BootstrapTable>\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default Table2","import React from 'react'\r\nimport mapboxgl from 'mapbox-gl';\r\n\r\nmapboxgl.accessToken = 'pk.eyJ1IjoiYXF1YWltcGFjdCIsImEiOiJja2R0d2N3emswdzlwMnptcGliNTk4ZHNkIn0.jPYEzZD-aErgL25Zx9N_Kg';\r\n\r\nlet map\r\nlet counter = 0\r\nlet popup\r\nlet source\r\nlet randomNum = 0\r\n\r\n\r\nclass MainMap extends React.Component{\r\n    \r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            lng: 103.851959,\r\n            lat: 1.290270,\r\n            zoom: 10.5,\r\n            souceColors: {},\r\n        };\r\n\r\n        this.mapContainer = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        \r\n        map = new mapboxgl.Map({\r\n            container: this.mapContainer,\r\n            style: 'mapbox://styles/mapbox/streets-v11',\r\n            center: [this.state.lng, this.state.lat],\r\n            zoom: this.state.zoom\r\n        });\r\n\r\n        // Create a popup, but don't add it to the map yet.\r\n        var popup2 = new mapboxgl.Popup({\r\n            closeButton: false,\r\n            closeOnClick: false\r\n        });\r\n\r\n        popup = popup2\r\n\r\n        var size = 100\r\n\r\n        var pulsingDot = {\r\n            width: size,\r\n            height: size,\r\n            data: new Uint8Array(size * size * 4),\r\n             \r\n            // get rendering context for the map canvas when layer is added to the map\r\n            onAdd: function () {\r\n                var canvas = document.createElement('canvas');\r\n                canvas.width = this.width;\r\n                canvas.height = this.height;\r\n                this.context = canvas.getContext('2d');\r\n            },\r\n             \r\n            // called once before every frame where the icon will be used\r\n            render: function () {\r\n                var duration = 1000;\r\n                var t = (performance.now() % duration) / duration;\r\n                \r\n                var radius = (size / 2) * 0.3;\r\n                var outerRadius = (size / 2) * 0.7 * t + radius;\r\n                var context = this.context;\r\n                \r\n                // draw outer circle\r\n                context.clearRect(0, 0, this.width, this.height);\r\n                context.beginPath();\r\n                context.arc(\r\n                    this.width / 2,\r\n                    this.height / 2,\r\n                    outerRadius,\r\n                    0,\r\n                    Math.PI * 2\r\n                );\r\n            context.fillStyle = 'rgba(255, 200, 200,' + (1 - t) + ')';\r\n            context.fill();\r\n             \r\n            // draw inner circle\r\n            context.beginPath();\r\n            context.arc(\r\n            this.width / 2,\r\n            this.height / 2,\r\n            radius,\r\n            0,\r\n            Math.PI * 2\r\n            );\r\n            context.fillStyle = 'rgba(255, 100, 100, 1)';\r\n            context.strokeStyle = 'white';\r\n            context.lineWidth = 2 + 4 * (1 - t);\r\n            context.fill();\r\n            context.stroke();\r\n             \r\n            // update this image's data with data from the canvas\r\n            this.data = context.getImageData(\r\n            0,\r\n            0,\r\n            this.width,\r\n            this.height\r\n            ).data;\r\n             \r\n            // continuously repaint the map, resulting in the smooth animation of the dot\r\n            map.triggerRepaint();\r\n             \r\n            // return `true` to let the map know that the image was updated\r\n            return true;\r\n            }\r\n        };\r\n\r\n        map.on('click', 'placeIDs', this.mapClicked);\r\n\r\n        map.on('mouseenter', 'placeIDs', this.mapMouseEnter);\r\n            \r\n        map.on('mouseleave', 'placeIDs', this.mapMouseLeave);\r\n\r\n\r\n        map.addImage('pulsing-dot', pulsingDot, { pixelRatio: 2 });\r\n    }\r\n\r\n    mapClicked = (e) => {\r\n        var movementID = e.features[0].properties.movementID;\r\n        this.props.dataRetrieved(movementID)\r\n    }\r\n\r\n    mapMouseEnter = (e) => {\r\n        // Change the cursor style as a UI indicator.\r\n        map.getCanvas().style.cursor = 'pointer';\r\n                    \r\n        var coordinates = e.features[0].geometry.coordinates.slice();\r\n        var description = e.features[0].properties.description;\r\n\r\n        // Ensure that if the map is zoomed out such that multiple\r\n        // copies of the feature are visible, the popup appears\r\n        // over the copy being pointed to.\r\n        while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {\r\n            coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;\r\n        }\r\n\r\n        // Populate the popup and set its coordinates\r\n        // based on the feature found.\r\n        popup.setLngLat(coordinates).setHTML(description).addTo(map);\r\n    }\r\n\r\n    mapMouseLeave = () => {\r\n        map.getCanvas().style.cursor = '';\r\n        popup.remove();\r\n    }\r\n\r\n    static generateColor(){\r\n        var x = Math.random()\r\n\r\n        while(x == randomNum){\r\n            x = Math.random()\r\n        }\r\n\r\n        randomNum = x\r\n        let n = (x * 0xfffff * 1000000).toString(16);\r\n        return '#' + n.slice(0, 6);\r\n    }\r\n\r\n    static getDatetime(datetime, selection){\r\n\r\n        // 20/7/2020 8:00\r\n        let date = datetime.split(\" \")\r\n        let fulldate = date[0].split(\"/\")\r\n        \r\n\r\n        let mon = fulldate[1]\r\n        let day = fulldate[0]\r\n        let year = fulldate[2]\r\n        let fullTime = date[1].split(\":\")\r\n        let hh = fullTime[0]\r\n        let min = fullTime[1]\r\n\r\n        // const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n        const shortmonthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sept\", \"Oct\", \"Nov\", \"Dec\"];\r\n\r\n        let finalDatetime\r\n        if(selection === \"d\"){\r\n            finalDatetime = day + \" \" + shortmonthNames[parseInt(mon)-1] + \" \" + year\r\n        }\r\n        else if(selection === \"t\"){\r\n            let timing = \"AM\"\r\n            if(parseInt(hh) === 12){\r\n                timing = \"PM\"\r\n            }\r\n            if(parseInt(hh) > 12){\r\n                hh = parseInt(hh) - 12\r\n                timing = \"PM\"\r\n            }\r\n            finalDatetime = hh + \":\" + min + \" \" + timing\r\n        }\r\n        // else if(selection == \"dt\"){\r\n        //     finalDatetime = new Date(datetime)\r\n        // }\r\n        return finalDatetime\r\n    }\r\n\r\n    static hexColorDelta(oldHex1, oldHex2) {\r\n\r\n        // Since values coming in are #<...>, we need to remove them\r\n        var hex1 = oldHex1.substring(1, oldHex1.length)\r\n        var hex2 = oldHex2.substring(1, oldHex2.length)\r\n\r\n        // get red/green/blue int values of hex1\r\n        var r1 = parseInt(hex1.substring(0, 2), 16);\r\n        var g1 = parseInt(hex1.substring(2, 4), 16);\r\n        var b1 = parseInt(hex1.substring(4, 6), 16);\r\n        // get red/green/blue int values of hex2\r\n        var r2 = parseInt(hex2.substring(0, 2), 16);\r\n        var g2 = parseInt(hex2.substring(2, 4), 16);\r\n        var b2 = parseInt(hex2.substring(4, 6), 16);\r\n        // calculate differences between reds, greens and blues\r\n        var r = 255 - Math.abs(r1 - r2);\r\n        var g = 255 - Math.abs(g1 - g2);\r\n        var b = 255 - Math.abs(b1 - b2);\r\n        // limit differences between 0 and 1\r\n        r /= 255;\r\n        g /= 255;\r\n        b /= 255;\r\n        // 0 means opposit colors, 1 means same colors\r\n        return (r + g + b) / 3;\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state){\r\n\r\n\r\n        console.log(\"Yays\")\r\n        source = {}\r\n        // console.log(map.style.sourceCaches);\r\n        if(props.profile.length > 0 && props.movement.length > 0 ){\r\n          \r\n            let mappedResults = props.profile.map(x => {\r\n                return({\r\n                    profile: x,\r\n                    movements: props.movement.filter(xx => xx.suspectId === x.id)\r\n                })\r\n            })\r\n\r\n            // Accepts the array and key\r\n            const groupBy = (array, key) => {\r\n                // Return the end result\r\n                return array.reduce((result, currentValue) => {\r\n                // If an array already present for key, push it to the array. Else create an array and push the object\r\n                (result[currentValue[key]] = result[currentValue[key]] || []).push(\r\n                    currentValue\r\n                );\r\n                // Return the current iteration `result` value, this will be taken as next iteration `result` value and accumulate\r\n                return result;\r\n                }, {}); // empty object is the initial value for result object\r\n            };\r\n            \r\n            // Group by location address as key to the person array\r\n            const personGroupedByColor = groupBy(props.movement, 'locationShortaddress');\r\n            \r\n            // console.log(personGroupedByColor)\r\n\r\n            var UPoints = Object.keys(personGroupedByColor).map(function(key) {\r\n                if(personGroupedByColor[key].length === 1){\r\n                    let item = personGroupedByColor[key][0]\r\n                    return({\r\n                        'type': 'Feature',\r\n                        'properties': {\r\n                            'movementID':item.id,\r\n                            'enter': item.datetimeEntered,\r\n                            'leave': item.datetimeLeft,\r\n                            'placeID': item.locationShortaddress,\r\n                            'marker-symbol': '1',\r\n                            'marker-color': '#3bb2d0',\r\n                            'marker-size': 'large',\r\n                            'description':\r\n                                `<strong>${item.locationShortaddress}</strong><p>Time Entered: ${MainMap.getDatetime(item.datetimeEntered, 't')}</p><p>Time Left: ${MainMap.getDatetime(item.datetimeLeft, 't')}</p><p>Date: ${MainMap.getDatetime(item.datetimeLeft, 'd')}</p>`\r\n                            },\r\n                        'geometry': {\r\n                            'type': 'Point',\r\n                            'coordinates': [item.locationLong, item.locationLat],\r\n                        },\r\n                    })\r\n                }\r\n                else{\r\n                    let movementID = personGroupedByColor[key].map(x => x.id )\r\n                    // console.log(movementID)\r\n\r\n                    let enter = personGroupedByColor[key].map(x => x.datetimeEntered )\r\n                    let leave = personGroupedByColor[key].map(x => x.datetimeLeft)\r\n                    let placeID = key\r\n\r\n                    let text = `<strong>${key}</strong>`\r\n                    // console.log(placeID)\r\n                    personGroupedByColor[key].forEach(xx => {\r\n                        let name = props.profile.filter(x => x.id === xx.suspectId).map(x => {\r\n                            return(x.firstName + \" \" + x.lastName)\r\n                        })\r\n                        text += `<p>${name}</p>`\r\n                        text += `<p>Time Entered: ${MainMap.getDatetime(xx.datetimeEntered, 't')}</p><p>Time Left: ${MainMap.getDatetime(xx.datetimeLeft, 't')}</p><p>Date: ${MainMap.getDatetime(xx.datetimeLeft, 'd')}</p>`\r\n                    })\r\n\r\n                    // console.log(text)\r\n                    // let description = `<strong>${item.locationShortaddress}</strong><p>Time Entered: ${that.getDatetime(item.datetimeEntered, 't')}</p><p>Time Left: ${that.getDatetime(item.datetimeLeft, 't')}</p><p>Date: ${that.getDatetime(item.datetimeLeft, 'd')}</p>`\r\n\r\n                    return({\r\n                        'type': 'Feature',\r\n                        'properties': {\r\n                            'movementID': movementID,\r\n                            'enter': enter,\r\n                            'leave': leave,\r\n                            'placeID': placeID,\r\n                            'description': text,\r\n                            },\r\n                        'geometry': {\r\n                            'type': 'Point',\r\n                            'coordinates': [personGroupedByColor[key][0].locationLong, personGroupedByColor[key][0].locationLat]\r\n                        }\r\n                    })\r\n                }\r\n            });\r\n\r\n            for(var key in map.style.sourceCaches){\r\n                console.log(key)\r\n                if(key != 'composite'){\r\n                    map.removeLayer(key)\r\n                    map.removeSource(key)\r\n                }\r\n            }\r\n\r\n            var sourceIDs = []\r\n\r\n            var colorPrevious = \"\"\r\n            \r\n            mappedResults.forEach(e => {\r\n\r\n                let lol = Math.floor(Math.random() * 101).toString()\r\n\r\n                while(sourceIDs.includes(lol)){\r\n                    lol = Math.floor(Math.random() * 101).toString()\r\n                }\r\n\r\n                let UMovements = e.movements.map(x => {\r\n                    return([x.locationLong, x.locationLat])\r\n                })\r\n\r\n                map.addSource(lol, {\r\n                    'type': 'geojson',\r\n                    'data': {\r\n                        'type': 'Feature',\r\n                        'properties': {},\r\n                        'geometry': {\r\n                            'type': 'LineString',\r\n                            'coordinates': UMovements\r\n                        }\r\n                    }\r\n                });\r\n\r\n                let color = MainMap.generateColor()\r\n                if(colorPrevious != \"\"){\r\n                    console.log(\"Main Map: \", color)\r\n                    while(MainMap.hexColorDelta(color, colorPrevious) > 0.5){\r\n                        color = MainMap.generateColor()\r\n                    }\r\n                    console.log(\"Color Similarity Threshold:\", MainMap.hexColorDelta(color, colorPrevious))\r\n                }\r\n                colorPrevious = color\r\n\r\n                \r\n                source = {...source, [color]: e.profile.firstName + \" \" + e.profile.lastName}\r\n                \r\n                map.addLayer({\r\n                    'id': lol,\r\n                    'type': 'line',\r\n                    'source': lol,\r\n                    'layout': {\r\n                        'line-join': 'round',\r\n                        'line-cap': 'round'\r\n                    },\r\n                    'paint': {\r\n                        'line-color': color,\r\n                        'line-width': 5\r\n                    }\r\n                });\r\n\r\n                sourceIDs.push(lol)\r\n            })\r\n\r\n            map.addSource('placeIDs', {\r\n                'type': 'geojson',\r\n                'data': {\r\n                    'type': 'FeatureCollection',\r\n                    'features': UPoints\r\n                }\r\n            });\r\n\r\n            // Add a layer showing the places.\r\n            map.addLayer({\r\n                'id': 'placeIDs',\r\n                'type': 'symbol',\r\n                'source': 'placeIDs',\r\n                'layout': {\r\n                    // \"line-cap\": \"round\",\r\n                    // \"line-join\": \"round\"\r\n                    'icon-image': 'pulsing-dot',\r\n                    'icon-allow-overlap': true\r\n                }\r\n            });\r\n            \r\n            counter += 1\r\n        } \r\n        \r\n        return true;\r\n    }\r\n\r\n    render(){\r\n        \r\n        let legend = []\r\n        for(var key in source){\r\n            legend.push(\r\n                <div style={{marginRight:\"20px\"}}>\r\n                    {/* <hr style={{borderTop: \"10px solid \" + {key}, width:\"50px\"}}/>  */}\r\n                    <span style={{height:\"16px\", width: \"50px\", backgroundColor: key, borderRadius: \"20%\", display: \"inline-block\"}}></span>\r\n                    <h5 style={{display: \"inline-block\", marginLeft:\"10px\"}}>{source[key]}</h5>\r\n                </div>\r\n            )\r\n        }\r\n        return(\r\n            <>\r\n                <div style={{display:\"flex\", justifyContent:\"space-between\"}}>\r\n                   {legend}\r\n                </div>\r\n                <div style={{position:\"relative\",height:\"700px\", width:\"100%\"}}>\r\n                    <div ref={el => this.mapContainer = el} style={{position:\"reletive\", width:\"inherit\", height:\"inherit\"}}/>\r\n                </div>\r\n            </>\r\n            \r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default MainMap","import React from \"react\";\r\n// nodejs library that concatenates classes\r\nimport classnames from \"classnames\";\r\nimport Papa from 'papaparse'\r\nimport MainMap from '../MainMap';\r\nimport Graph from '../Graphs/Graphs'\r\nimport Table from '../Tables/Table'\r\nimport Table2 from '../Tables/Table2'\r\nimport * as rb from 'react-bootstrap'\r\nimport ProfileModal from '../ProfileModal'\r\nimport Footer from './Footers/Footer'\r\n\r\n// reactstrap components\r\nimport {\r\n\tBadge,\r\n\tButton,\r\n\tCard,\r\n\tCardBody,\r\n\tCardImg,\r\n\tFormGroup,\r\n\tInput,\r\n\tInputGroupAddon,\r\n\tInputGroupText,\r\n\tInputGroup,\r\n\tContainer,\r\n\tRow,\r\n\tCol,\r\n\tNavItem,\r\n\tNavLink,\r\n\tNav,\r\n\tTabContent,\r\n\tTabPane,\r\n\tUncontrolledTooltip,\r\n\tDropdownToggle,\r\n\tDropdownMenu,\r\n\tDropdownItem,\r\n\tUncontrolledDropdown,\r\n} from \"reactstrap\";\r\n\r\n// core components\r\nimport DemoNavbar from \"./Navbars/DemoNavbar.js\";\r\n\r\n\r\nlet testing\r\n\r\nclass MainPage extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.uploadFile = this.uploadFile.bind(this);\r\n\t\tthis.uploadFile2 = this.uploadFile2.bind(this);\r\n\t\tthis.handleClick = this.handleClick.bind(this);\r\n\t\tthis.handleClick2 = this.handleClick2.bind(this);\r\n\t\tthis.legends = {};\r\n\t\tthis.state = {\r\n\t\t\tdropDownValue: \"All Suspects\",\r\n\t\t\tdataList: [\"All Suspects\"],\r\n\t\t\tsuspectCases: [],\r\n\t\t\tmovements: [],\r\n\t\t\terror: false,\r\n\t\t\terrorMsg: \"\",\r\n\t\t\tshowModal: false,\r\n\t\t\tfilenames: [],\r\n\t\t\tseries: {},\r\n\t\t\tdatas: [],\r\n\t\t\tplacename: \"\",\r\n\t\t\tdatetime: [],\r\n\t\t\tshowSelection: false,\r\n\t\t\tCCID: [],\r\n\t\t\tCloseContacts: {},\r\n\t\t\tfromCCID: [],\r\n\t\t\tprofileModal: {},\r\n\t\t\tshowSelection2: false,\r\n\t\t\tmapData: [],\r\n\t\t\ttabs: 1,\r\n\r\n\t\t\tsuspectCasesOriginal: [],\r\n\t\t\tmovementsOriginal: [],\r\n\t\t\tlegends:{},\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tdocument.documentElement.scrollTop = 0;\r\n\t\tdocument.scrollingElement.scrollTop = 0;\r\n\t\tthis.refs.main.scrollTop = 0;\r\n\t}\r\n\r\n\timportCompleted() {\r\n\t\tconst list = this.state\r\n\t\tthis.props.handleData(list)\r\n\t\treturn\r\n\t}\r\n\r\n\t// Suspect Profile File Upload\r\n\thandleClick(e) {\r\n\t\tthis.refs.fileUploader.click();\r\n\t}\r\n\r\n\t//Suspect Movement File Upload\r\n\thandleClick2(e) {\r\n\t\tthis.refs.fileUploader2.click();\r\n\t}\r\n\r\n\t// Suspect File Upload\r\n\tuploadFile(event) {\r\n\r\n\t\tconst file = event.target.files[0]\r\n\r\n\t\tif (file) {\r\n\t\t\tif (file.name.includes(\"_suspected\")) {\r\n\r\n\t\t\t\tthis.setState({ filenames: [...this.state.filenames, file.name] })\r\n\t\t\t\tconst reader = new FileReader();\r\n\t\t\t\treader.onload = () => {\r\n\t\t\t\t\t// Use reader.result\r\n\t\t\t\t\tconst lols = Papa.parse(reader.result, { header: true, skipEmptyLines: true })\r\n\r\n\t\t\t\t\t// Adds names into dropdown\r\n\t\t\t\t\tthis.setState({ dataList: [\"All Suspects\", ...lols.data.map(names => names.firstName + \" \" + names.lastName)] })\r\n\r\n\t\t\t\t\tconst data = lols.data\r\n\t\t\t\t\tthis.setState({ suspectCasesOriginal: data,suspectCases: data })\r\n\t\t\t\t}\r\n\t\t\t\treader.readAsText(file)\r\n\t\t\t\tthis.setState({ error: false })\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.setState({ error: true, errorMsg: \"You have uploaded invalid files! Please rename the file to <filename>_suspected (For suspected cases)\" })\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Movement File Upload\r\n\tuploadFile2(event) {\r\n\r\n\t\tconst file = event.target.files[0]\r\n\r\n\t\tif (file) {\r\n\t\t\tif (file.name.includes(\"_movements\")) {\r\n\r\n\t\t\t\tthis.setState({ filenames: [...this.state.filenames, file.name] })\r\n\t\t\t\tconst reader = new FileReader();\r\n\t\t\t\treader.onload = () => {\r\n\t\t\t\t\t// Use reader.result\r\n\t\t\t\t\tconst lols = Papa.parse(reader.result, { header: true, skipEmptyLines: true })\r\n\r\n\t\t\t\t\t// console.log(lols.data)\r\n\r\n\t\t\t\t\t// Posting csv data into db\r\n\t\t\t\t\t// this.postData('\"' + JSON.stringify(lols.data) + '\"')\r\n\t\t\t\t\t// this.postMovements(JSON.stringify(lols.data))\r\n\t\t\t\t\tconst data = lols.data\r\n\t\t\t\t\tthis.setState({ movementsOriginal: data , movements: data})\r\n\t\t\t\t}\r\n\t\t\t\treader.readAsText(file)\r\n\t\t\t\tthis.setState({ error: false })\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.setState({ error: true, errorMsg: \"You have uploaded invalid files! Please rename the file to <filename>_movements (For suspected case movement)\" })\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tdropdownClicked = (e) => {\r\n\t\t\r\n\t\tlet originalSus = this.state.suspectCasesOriginal\r\n\t\tlet originalMoves = this.state.movementsOriginal\r\n\t\t// this.setState({ })\r\n\t\tif(e.currentTarget.textContent != \"All Suspects\"){\r\n\t\t\t// console.log(this.state.suspectCases).filter\r\n\t\t\tlet firstName = e.currentTarget.textContent.split(\" \")[0]\r\n\t\t\tlet lastName = e.currentTarget.textContent.split(\" \")[1]\r\n\r\n\t\t\toriginalSus = originalSus.filter(x => x.firstName == firstName && x.lastName == lastName)\r\n\r\n\t\t\toriginalMoves = originalMoves.filter(x => x.suspectId == originalSus[0].id)\r\n\r\n\t\t}\r\n\t\tthis.setState({suspectCases: originalSus, movements: originalMoves, dropDownValue: e.currentTarget.textContent, datas: [], mapData:[]})\r\n\t}\r\n\r\n\tconvertDate(date) {\r\n\r\n\t\tvar lol = date\r\n\t\tvar dateTimeParts = lol.split(' ')\r\n\t\t// console.log(dateTimeParts)\r\n\t\tvar dateParts = dateTimeParts[0].split('/')\r\n\t\tvar timeParts = dateTimeParts[1].split(':')\r\n\t\tvar timeOfDay = dateTimeParts[2]\r\n\t\tif (timeOfDay === \"pm\") {\r\n\t\t\ttimeParts[0] += 12\r\n\t\t}\r\n\r\n\t\t// new Date(year, month, day, hours, minutes, seconds, milliseconds)\r\n\t\tvar finalDate = new Date(dateParts[2], dateParts[1] - 1, dateParts[0], timeParts[0], timeParts[1]);\r\n\t\t// console.log(finalDate)\r\n\t\treturn finalDate.getTime();\r\n\t}\r\n\r\n\t//// ### UNCOMMENT FOR GANTT CHART ###\r\n\t// Gantt Chart Data Formatter from movements and suspects\r\n\tpopulateGraph1() {\r\n\t\tlet series2 = []\r\n\r\n\t\tvar strings = this.state.mapData;\r\n\t\tconsole.log(\"populateGraph1 : String = \", strings)\r\n\r\n\t\tvar numbers = strings.match(/\\d+/g).map(Number);\r\n\t\tconsole.log(\"populateGraph1 : NumberS: \", numbers)\r\n\r\n\t\tnumbers.forEach(x => {\r\n\t\t\tlet data = []\r\n\r\n\t\t\tlet m1 = this.state.movements.filter(moves => moves.id === x.toString())[0]\r\n\t\t\tlet p1 = this.state.suspectCases.filter(sus => sus.id === m1.suspectId)[0]\r\n\r\n\t\t\tdata.push(\r\n\t\t\t\t{\r\n\t\t\t\t\tx: m1.locationShortaddress,\r\n\t\t\t\t\ty: [this.convertDate(m1.datetimeEntered), this.convertDate(m1.datetimeLeft)]\r\n\t\t\t\t}\r\n\t\t\t)\r\n\r\n\t\t\tseries2.push(\r\n\t\t\t\t{\r\n\t\t\t\t\tname: p1.firstName + \" \" + p1.lastName,\r\n\t\t\t\t\tdata: data\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t})\r\n\t\treturn series2\r\n\t}\r\n\r\n\tconvertSQLDate(startDate1, endDate, type = undefined) {\r\n\r\n\t\tif (startDate1 !== undefined && endDate !== undefined) {\r\n\t\t\tvar date = new Date(startDate1)\r\n\t\t\tvar date2 = date.toString().split(\" \")\r\n\t\t\tvar time = date2[4].split(\":\")\r\n\r\n\t\t\tvar date1 = new Date(endDate)\r\n\t\t\tvar date21 = date1.toString().split(\" \")\r\n\t\t\tvar time1 = date21[4].split(\":\")\r\n\r\n\t\t\tlet str\r\n\t\t\tif (type === \"header\") {\r\n\t\t\t\tstr = time[0] + \":\" + time[1] + \" - \" + time1[0] + \":\" + time1[1]\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tstr = date2[2] + \" \" + date2[1] + \", \" + time[0] + \":\" + time[1] + \" - \" + time1[0] + \":\" + time1[1]\r\n\t\t\t}\r\n\r\n\t\t\treturn str\r\n\t\t}\r\n\t\t// return date2[1]\r\n\t}\r\n\r\n\tmyCallback = (dataFromChild) => {\r\n\t\t// console.log(\"Data1:\" + dataFromChild)\r\n\t\tthis.setState({ CCID: dataFromChild })\r\n\t}\r\n\r\n\tmyCallback2 = (dataFromChild) => {\r\n\t\t// console.log(\"Data2:\" + dataFromChild)\r\n\t\tthis.setState({ fromCCID: dataFromChild })\r\n\t}\r\n\r\n\tdatabackTable = (dataFromChild) => {\r\n\r\n\t\tthis.setState({ profileModal: dataFromChild })\r\n\t\tthis.setState({ showSelection2: true })\r\n\t}\r\n\r\n\tisEmptyObject(obj) {\r\n\t\treturn !!obj && Object.keys(obj).length === 0 && obj.constructor === Object;\r\n\t}\r\n\r\n\ttoCCClicked = () => {\r\n\t\tlet IDs = []\r\n\r\n\t\tif (this.state.datas.length > 0) {\r\n\t\t\tlet placename = this.state.datas[0].locationShortaddress\r\n\t\t\tthis.state.datas.map(x => {\r\n\t\t\t\tfor (var data of this.state.CCID) {\r\n\r\n\t\t\t\t\tif (x.peopleProfileId === data) {\r\n\t\t\t\t\t\tIDs.push(x.peopleProfileId)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t})\r\n\r\n\t\t\tlet newItem = { ...this.state.CloseContacts, [placename]: IDs }\r\n\r\n\t\t\tthis.setState({ CloseContacts: newItem })\r\n\t\t}\r\n\t}\r\n\r\n\tcompare(arr1, arr2) {\r\n\r\n\t\tif (!arr1 || !arr2) return\r\n\r\n\t\tlet result;\r\n\r\n\t\tarr1.forEach((e1, i) => arr2.forEach(e2 => {\r\n\r\n\t\t\tif (e1.length > 1 && e2.length) {\r\n\t\t\t\tresult = this.compare(e1, e2);\r\n\t\t\t} else if (e1 !== e2) {\r\n\t\t\t\tresult = false\r\n\t\t\t} else {\r\n\t\t\t\tresult = true\r\n\t\t\t}\r\n\t\t}))\r\n\t\treturn result\r\n\t}\r\n\r\n\tfromCCClicked = () => {\r\n\r\n\t\tif (this.state.datas.length > 0) {\r\n\t\t\tlet placename = this.state.datas[0].locationShortaddress\r\n\t\t\tlet IDs = this.state.CloseContacts[placename].filter(x => this.state.fromCCID.includes(x) === false).map(x => { return x })\r\n\r\n\t\t\tlet newItem = { ...this.state.CloseContacts, [placename]: IDs }\r\n\r\n\t\t\tthis.setState({ CloseContacts: newItem })\r\n\t\t}\r\n\r\n\t}\r\n\r\n\ttoggleNavs = (e, state, index) => {\r\n\t\te.preventDefault();\r\n\t\tthis.setState({\r\n\t\t\t[state]: index\r\n\t\t});\r\n\t};\r\n\r\n\tdataRetrievedMap = (dataFromChild) => {\r\n\t\tthis.setState({ mapData: dataFromChild,  datas:[]})\r\n\t}\r\n\r\n\trender() {\r\n\t\tlet placename\r\n\r\n\t\t// console.log(this.legends)\r\n\r\n\t\tlet displaySetting2 = this.state.suspectCases.length > 0 && this.state.movements.length > 0 ? \"visible\" : \"hidden\"\r\n\t\tlet maindp1 = this.state.suspectCases.length > 0 && this.state.movements.length > 0 ? \"relative\" : \"absolute\"\r\n\t\tlet maindp2 = this.state.suspectCases.length > 0 && this.state.movements.length > 0 ? 0 : -10000\r\n\r\n\t\tlet ds1 = this.state.mapData.length > 0 ? \"visible\" : \"hidden\"\r\n\t\tlet ds11 = this.state.mapData.length > 0 ? \"relative\" : \"absolute\"\r\n\t\tlet ds12 = this.state.mapData.length > 0 ? 0 : -10000\r\n\r\n\t\tlet ds3 = this.state.datas.length > 0 ? \"visible\" : \"hidden\"\r\n\t\tlet ds31 = this.state.datas.length > 0 ? \"relative\" : \"absolute\"\r\n\t\tlet ds32 = this.state.datas.length > 0 ? 0 : -10000\r\n\r\n\t\tlet displayWarning = this.state.error ? \"block\" : \"none\"\r\n\r\n\t\tlet graph1\r\n\r\n\t\tconst that = this;\r\n\r\n\t\t//// ### UNCOMMENT FOR GANTT CHART ###\r\n\t\tif (this.state.mapData.length !== 0) {\r\n\t\t\ttesting = this.populateGraph1()\r\n\t\t}\r\n\r\n\t\tlet options\r\n\t\tconsole.log(\"is testing undefined? : \", testing !== undefined)\r\n\t\t//// ### UNCOMMENT FOR GANTT CHART ###\r\n\t\tif (testing !== undefined) {\r\n\r\n\t\t\tlet lol = function (event, chartContext, config) {\r\n\t\t\t\tplacename = testing[config.seriesIndex].data[config.dataPointIndex].x\r\n\t\t\t\tconsole.log(\"placename : \", placename)\r\n\t\t\t\tfetch(\"https://internshipcsit.herokuapp.com/getMovementForDate?placeName=\" + testing[config.seriesIndex].data[config.dataPointIndex].x + \"&dates=\" + testing[config.seriesIndex].data[config.dataPointIndex].y + \"&personName=\" + testing[config.seriesIndex].name)\r\n\t\t\t\t\t.then(response => response.json()).then(data => that.setState({ \r\n\t\t\t\t\t\tdatas: data,\r\n\t\t\t\t\t\tplacename: testing[config.seriesIndex].data[config.dataPointIndex].x, \r\n\t\t\t\t\t\tdatetime: testing[config.seriesIndex].data[config.dataPointIndex].y \r\n\t\t\t\t\t})).catch(err => { console.log(err); });\r\n\t\t\t}\r\n\r\n\t\t\toptions = {\r\n\t\t\t\toptions: {\r\n\t\t\t\t\tchart: {\r\n\t\t\t\t\t\theight: 450,\r\n\t\t\t\t\t\ttype: 'rangeBar',\r\n\t\t\t\t\t\tevents: {\r\n\t\t\t\t\t\t\tdataPointSelection: lol\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tplotOptions: {\r\n\t\t\t\t\t\tbar: { horizontal: true, barHeight: '80%' }\r\n\t\t\t\t\t},\r\n\t\t\t\t\txaxis: {\r\n\t\t\t\t\t\ttype: 'datetime',\r\n\t\t\t\t\t\tlabels: {\r\n\t\t\t\t\t\t\tdatetimeFormatter:{\r\n\t\t\t\t\t\t\t\thour: 'HH:mm'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tstroke: {\r\n\t\t\t\t\t\twidth: 1\r\n\t\t\t\t\t},\r\n\t\t\t\t\tfill: {\r\n\t\t\t\t\t\ttype: 'solid',\r\n\t\t\t\t\t\topacity: 0.6\r\n\t\t\t\t\t},\r\n\t\t\t\t\tlegend: {\r\n\t\t\t\t\t\tposition: 'top',\r\n\t\t\t\t\t\thorizontalAlign: 'left'\r\n\t\t\t\t\t},\r\n\t\t\t\t\ttooltip: {\r\n\r\n\t\t\t\t\t},\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// console.log(\"Updated\")\r\n\t\t\t// console.log(testing)\r\n\t\t\t// console.log(options.options)\r\n\t\t\tgraph1 = <Graph display={displaySetting2} options={options.options} series={testing} tool />\r\n\t\t}\r\n\r\n\t\t// console.log(this.state.legends)\r\n\r\n\t\t// Creating the COnfirmed Cases\r\n\t\tlet mappingsCC = this.state.datas.filter(data => data.caseNumber !== null).map(data => {\r\n\t\t\treturn ({\r\n\t\t\t\tcaseNumber: data.caseNumber,\r\n\t\t\t\tUID: data.peopleProfileId,\r\n\t\t\t\tname: data.firstName + \" \" + data.lastName,\r\n\t\t\t\tplace: data.locationShortaddress,\r\n\t\t\t\tdatetime: this.convertSQLDate(data.datetimeEntered, data.datetimeLeft)\r\n\t\t\t})\r\n\t\t})\r\n\r\n\t\t// Creating the Public at the place List\r\n\t\tlet mappingsPATP\r\n\r\n\t\t// Checks if there are any close contacts be begin with. If there are none than the below will run\r\n\t\tif (this.isEmptyObject(this.state.CloseContacts)) {\r\n\t\t\tmappingsPATP = this.state.datas.filter(data => data.caseNumber == null).map(data => {\r\n\t\t\t\treturn ({\r\n\t\t\t\t\tUID: data.peopleProfileId,\r\n\t\t\t\t\tname: data.firstName + \" \" + data.lastName,\r\n\t\t\t\t\tplace: data.locationShortaddress,\r\n\t\t\t\t\tdatetime: this.convertSQLDate(data.datetimeEntered, data.datetimeLeft)\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\t// If you added the close contacts, no need to be for the current place (any place), then the below will run\r\n\t\telse {\r\n\r\n\t\t\tlet newlist = []\r\n\r\n\t\t\tthis.state.datas.filter(data => data.caseNumber == null).map(data => {\r\n\r\n\t\t\t\t// Checks if the place that the user has clicked on contains any close contacts assigned to it. If there are, then it will take away all the people that are in the close \r\n\t\t\t\t// contact list from the PATP\r\n\t\t\t\tif (this.state.CloseContacts[data.locationShortaddress] != undefined) {\r\n\t\t\t\t\t// console.log(\"Logged: \" + this.state.CloseContacts[placename] + \": \" + Array.isArray(this.state.CloseContacts[placename]))\r\n\t\t\t\t\tif (this.state.CloseContacts[data.locationShortaddress].includes(data.peopleProfileId) === false) {\r\n\t\t\t\t\t\tnewlist.push({\r\n\t\t\t\t\t\t\tUID: data.peopleProfileId,\r\n\t\t\t\t\t\t\tname: data.firstName + \" \" + data.lastName,\r\n\t\t\t\t\t\t\tplace: data.locationShortaddress,\r\n\t\t\t\t\t\t\tdatetime: this.convertSQLDate(data.datetimeEntered, data.datetimeLeft)\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// If there isnt any close contacts then it will just return all the people from the PTAP back to PTAP\r\n\t\t\t\telse {\r\n\t\t\t\t\tnewlist.push({\r\n\t\t\t\t\t\tUID: data.peopleProfileId,\r\n\t\t\t\t\t\tname: data.firstName + \" \" + data.lastName,\r\n\t\t\t\t\t\tplace: data.locationShortaddress,\r\n\t\t\t\t\t\tdatetime: this.convertSQLDate(data.datetimeEntered, data.datetimeLeft)\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\t\t\tmappingsPATP = newlist\r\n\t\t}\r\n\r\n\t\t//Mapping the Contacts\r\n\t\tlet newlist2 = []\r\n\r\n\t\tthis.state.datas.filter(data => data.caseNumber === null).map(data => {\r\n\r\n\t\t\tif (this.state.CloseContacts[data.locationShortaddress] != undefined) {\r\n\t\t\t\tif (this.state.CloseContacts[data.locationShortaddress].includes(data.peopleProfileId)) {\r\n\t\t\t\t\tnewlist2.push({\r\n\t\t\t\t\t\tUID: data.peopleProfileId,\r\n\t\t\t\t\t\tname: data.firstName + \" \" + data.lastName,\r\n\t\t\t\t\t\tplace: data.locationShortaddress,\r\n\t\t\t\t\t\tdatetime: this.convertSQLDate(data.datetimeEntered, data.datetimeLeft)\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tlet mappingsclose = newlist2\r\n\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<DemoNavbar />\r\n\t\t\t\t<main ref=\"main\">\r\n\t\t\t\t\t<div className=\"position-relative\">\r\n\t\t\t\t\t\t{/* shape Hero */}\r\n\t\t\t\t\t\t<section className=\"section section-lg section-shaped pb-250\">\r\n\t\t\t\t\t\t\t<div className=\"shape shape-style-1 shape-default\">\r\n\t\t\t\t\t\t\t\t<span />\r\n\t\t\t\t\t\t\t\t<span />\r\n\t\t\t\t\t\t\t\t<span />\r\n\t\t\t\t\t\t\t\t<span />\r\n\t\t\t\t\t\t\t\t<span />\r\n\t\t\t\t\t\t\t\t<span />\r\n\t\t\t\t\t\t\t\t<span />\r\n\t\t\t\t\t\t\t\t<span />\r\n\t\t\t\t\t\t\t\t<span />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<Container className=\"py-lg-md d-flex\">\r\n\t\t\t\t\t\t\t\t<div className=\"col px-0\">\r\n\t\t\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t\t\t<Col lg=\"6\">\r\n\t\t\t\t\t\t\t\t\t\t\t<h1 className=\"display-3 text-white\">\r\n\t\t\t\t\t\t\t\t\t\t\t\tCovid - 19 Tracker{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span>helps you track your suspects</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</h1>\r\n\t\t\t\t\t\t\t\t\t\t\t<p className=\"lead text-white\">\r\n\t\t\t\t\t\t\t\t\t\t\t\tThis website provides you with the perfect tools needed to\r\n\t\t\t\t\t\t\t\t\t\t\t\tvisualise your suspects  movements and the people that got\r\n\t\t\t\t\t\t\t\t\t\t\t\tinto contact with them.\r\n\t\t\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</Container>\r\n\r\n\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t<br />\r\n\r\n\t\t\t\t\t\t\t<Container className=\"py-lg-md d-flex\">\r\n\t\t\t\t\t\t\t\t<div className=\"col px-0\">\r\n\t\t\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t\t\t<Col lg=\"6\">\r\n\t\t\t\t\t\t\t\t\t\t\t<h1 className=\"display-3 text-white\">\r\n\t\t\t\t\t\t\t\t\t\t\t\tImporting Data{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t\t</h1>\r\n\t\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</Container>\r\n\t\t\t\t\t\t\t{/* SVG separator */}\r\n\t\t\t\t\t\t\t<div className=\"separator separator-bottom separator-skew\">\r\n\t\t\t\t\t\t\t\t<svg\r\n\t\t\t\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\r\n\t\t\t\t\t\t\t\t\tpreserveAspectRatio=\"none\"\r\n\t\t\t\t\t\t\t\t\tversion=\"1.1\"\r\n\t\t\t\t\t\t\t\t\tviewBox=\"0 0 2560 100\"\r\n\t\t\t\t\t\t\t\t\tx=\"0\"\r\n\t\t\t\t\t\t\t\t\ty=\"0\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<polygon\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"fill-white\"\r\n\t\t\t\t\t\t\t\t\t\tpoints=\"2560 0 2560 100 0 100\"\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</section>\r\n\t\t\t\t\t\t{/* 1st Hero Variation */}\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t{/* IMPORT SECTION */}\r\n\t\t\t\t\t<section className=\"section section-lg pt-lg-0 mt--200\">\r\n\t\t\t\t\t\t<Container>\r\n\t\t\t\t\t\t\t<Row className=\"justify-content-center\">\r\n\t\t\t\t\t\t\t\t<Col lg=\"12\">\r\n\t\t\t\t\t\t\t\t\t<Row className=\"row-grid\">\r\n\t\t\t\t\t\t\t\t\t\t<Col lg=\"4\">\r\n\t\t\t\t\t\t\t\t\t\t\t<Card className=\"card-lift--hover shadow border-0\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<CardBody className=\"py-5\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"icon icon-shape icon-shape-primary rounded-circle mb-4\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"ni ni-single-02\" />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<h6 className=\"text-primary text-uppercase\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tSuspected Profiles\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</h6>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"description mt-3\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\"Please format you file to <filename>_suspected\"}.\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Button className=\"mt-4\" color=\"primary\" onClick={this.handleClick.bind(this)}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tImport File\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"file\" id=\"file\" ref=\"fileUploader\" style={{ display: \"none\" }} onChange={this.uploadFile} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</CardBody>\r\n\t\t\t\t\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t\t<Col lg=\"4\">\r\n\t\t\t\t\t\t\t\t\t\t\t<Card className=\"card-lift--hover shadow border-0\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<CardBody className=\"py-5\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"icon icon-shape icon-shape-success rounded-circle mb-4\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"ni ni-map-big\" />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<h6 className=\"text-success text-uppercase\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tSuspected Movements\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</h6>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"description mt-3\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\"Please format you file to <filename>_movement\"}.\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"mt-4\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"success\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"#pablo\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={this.handleClick2.bind(this)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tImport File\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"file\" id=\"file2\" ref=\"fileUploader2\" style={{ display: \"none\" }} onChange={this.uploadFile2} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</CardBody>\r\n\t\t\t\t\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t<div style={{display:displayWarning}}>\r\n\t\t\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t\t\t<div class=\"alert alert-warning\" role=\"alert\">\r\n\t\t\t\t\t\t\t\t\t{this.state.errorMsg}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</Container>\r\n\t\t\t\t\t</section>\r\n\r\n\t\t\t\t\t{/* <div style={{display:displaySetting2}}> */}\r\n\t\t\t\t\t<div style={{visibility:displaySetting2, position: maindp1, top: maindp2}}>\r\n\r\n\t\t\t\t\t\t{/* MAP SECTION */}\r\n\t\t\t\t\t\t<section className=\"section section-lg\">\r\n\t\t\t\t\t\t\t<Container>\r\n\t\t\t\t\t\t\t\t<Row className=\"row-grid align-items-center\">\r\n\t\t\t\t\t\t\t\t\t<Row className=\"justify-content-center text-center mb-lg\">\r\n\t\t\t\t\t\t\t\t\t\t<Col lg=\"8\">\r\n\t\t\t\t\t\t\t\t\t\t\t<h2 className=\"display-3\">Map</h2>\r\n\t\t\t\t\t\t\t\t\t\t\t<p className=\"lead text-muted\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t================================================\r\n\t\t\t\t\t\t\t\t\t\t\t\t<br/>CLICK ON A MARKER AND SCROLL TO GANTT CHART\r\n\t\t\t\t\t\t\t\t\t\t\t\t================================================\r\n\t\t\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t\t\t<UncontrolledDropdown group>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<DropdownToggle caret color=\"primary\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{this.state.dropDownValue}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</DropdownToggle>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t<DropdownMenu>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.state.dataList.map(x => \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<DropdownItem onClick={this.dropdownClicked}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{x}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</DropdownItem>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</DropdownMenu>\r\n\t\t\t\t\t\t\t\t\t\t\t</UncontrolledDropdown>\r\n\t\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t\t\t<MainMap profile={this.state.suspectCases} movement={this.state.movements} dataRetrieved={this.dataRetrievedMap}/>\r\n\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t</Container>\r\n\t\t\t\t\t\t</section>\r\n\r\n\t\t\t\t\t\t<div style={{visibility:ds1, position: ds11, top: ds12}}>\r\n\t\t\t\t\t\t\t{/* GANTT CHART SECTION */}\r\n\t\t\t\t\t\t\t<section className=\"section bg-secondary\">\r\n\t\t\t\t\t\t\t\t<Container>\r\n\t\t\t\t\t\t\t\t\t<Row className=\"row-grid align-items-center\">\r\n\t\t\t\t\t\t\t\t\t\t<Row className=\"justify-content-center text-center mb-lg\">\r\n\t\t\t\t\t\t\t\t\t\t\t<Col lg=\"8\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h2 className=\"display-3\">Gantt Chart</h2>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"lead text-muted\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t================================================\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<br />CLICK ON THE GANTT CHART AND SCROLL TO TABLE\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t================================================\r\n\t\t\t\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t\t\t\t{graph1}\r\n\t\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t\t</Container>\r\n\t\t\t\t\t\t\t</section>\r\n\r\n\t\t\t\t\t\t\t<div style={{visibility:ds3, position: ds31, top: ds32}}>\r\n\t\t\t\t\t\t\t\t{/* TABLE SECTION */}\r\n\t\t\t\t\t\t\t\t<section className=\"section pb-0 bg-gradient-warning\">\r\n\t\t\t\t\t\t\t\t\t<Container>\r\n\t\t\t\t\t\t\t\t\t\t<h4 className=\"display-3 text-white\"><center>Table Checker</center></h4>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"nav-wrapper\">\r\n\t\t\t\t\t\t\t\t\t\t\t<Nav\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"nav-fill flex-column flex-md-row\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tid=\"tabs-icons-text\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tpills\r\n\t\t\t\t\t\t\t\t\t\t\t\trole=\"tablist\"\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<NavItem>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\taria-selected={this.state.tabs === 1}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classnames(\"mb-sm-3 mb-md-0\", {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tactive: this.state.tabs === 1\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={e => this.toggleNavs(e, \"tabs\", 1)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"#pablo\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trole=\"tab\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"ni ni-check-bold mr-2\" />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tConfirmed Cases\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</NavItem>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<NavItem>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\taria-selected={this.state.tabs === 2}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classnames(\"mb-sm-3 mb-md-0\", {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tactive: this.state.tabs === 2\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={e => this.toggleNavs(e, \"tabs\", 2)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"#pablo\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trole=\"tab\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"ni ni-collection mr-2\" />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tClose Contacts\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</NavItem>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<NavItem>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\taria-selected={this.state.tabs === 3}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classnames(\"mb-sm-3 mb-md-0\", {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tactive: this.state.tabs === 3\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={e => this.toggleNavs(e, \"tabs\", 3)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"#pablo\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trole=\"tab\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"ni ni-world mr-2\" />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tPublic At The Place\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</NavItem>\r\n\t\t\t\t\t\t\t\t\t\t\t</Nav>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<Card className=\"shadow\">\r\n\t\t\t\t\t\t\t\t\t\t\t<CardBody>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<TabContent activeTab={\"tabs\" + this.state.tabs}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<TabPane tabId=\"tabs1\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div style={{ textAlign: \"left\", height: \"100%\" }}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <Chip label=\"Basic\" /> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* PlaceName */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Badge color=\"primary\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{this.state.placename}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Badge>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{' '}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* Time Span */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Badge color=\"primary\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{this.convertSQLDate(this.state.datetime[0], this.state.datetime[1], \"header\")}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Badge>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Table tableprops={mappingsCC} display={displaySetting2} type=\"CC\" databack={this.databackTable} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</TabPane>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<TabPane tabId=\"tabs2\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div style={{ textAlign: \"left\", height: \"100%\" }}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* PlaceName */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Badge color=\"primary\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{this.state.placename}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Badge>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{' '}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* Time Span */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Badge color=\"primary\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{this.convertSQLDate(this.state.datetime[0], this.state.datetime[1], \"header\")}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Badge>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Table tableprops={mappingsclose} display={displaySetting2} type=\"PATP\" databack={this.databackTable} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button color=\"primary\" type=\"button\" onClick={() => this.setState({ showSelection: true })}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tManual Import\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</TabPane>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<TabPane tabId=\"tabs3\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div style={{ textAlign: \"left\", height: \"100%\" }}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* PlaceName */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Badge color=\"primary\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{this.state.placename}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Badge>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{' '}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* Time Span */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Badge color=\"primary\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{this.convertSQLDate(this.state.datetime[0], this.state.datetime[1], \"header\")}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Badge>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Table tableprops={mappingsPATP} display={displaySetting2} type=\"PATP\" databack={this.databackTable} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</TabPane>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</TabContent>\r\n\t\t\t\t\t\t\t\t\t\t\t</CardBody>\r\n\t\t\t\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t\t\t\t</Container>\r\n\t\t\t\t\t\t\t\t\t{/* SVG separator */}\r\n\t\t\t\t\t\t\t\t\t<div className=\"separator separator-bottom separator-skew zindex-100\">\r\n\t\t\t\t\t\t\t\t\t\t<svg\r\n\t\t\t\t\t\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\r\n\t\t\t\t\t\t\t\t\t\t\tpreserveAspectRatio=\"none\"\r\n\t\t\t\t\t\t\t\t\t\t\tversion=\"1.1\"\r\n\t\t\t\t\t\t\t\t\t\t\tviewBox=\"0 0 2560 100\"\r\n\t\t\t\t\t\t\t\t\t\t\tx=\"0\"\r\n\t\t\t\t\t\t\t\t\t\t\ty=\"0\"\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<polygon\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"fill-white\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tpoints=\"2560 0 2560 100 0 100\"\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</section>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t{/* TRANSFER SECTION */}\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<rb.Modal show={this.state.showSelection} onHide={()=>this.setState({showSelection:false})} centered size=\"xl\" scrollable={true}>\r\n\t\t\t\t\t\t\t\t\t\t<rb.Modal.Header closeButton>\r\n\t\t\t\t\t\t\t\t\t\t\t<rb.Modal.Title>Transfer Users</rb.Modal.Title>\r\n\t\t\t\t\t\t\t\t\t\t</rb.Modal.Header>\r\n\t\t\t\t\t\t\t\t\t\t<rb.Modal.Body>\r\n\t\t\t\t\t\t\t\t\t\t\t<div style={{float:\"left\", textAlign:\"center\", width:\"40%\"}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<text fontSize=\"20px\"><b>Close Contact With Public</b></text>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{backgroundColor:\"#F9F9F9\", }}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Table2 tableprops={mappingsclose} display={displaySetting2} type=\"modal-edit\" callbackFromParent={this.myCallback2} databack={this.databackTable}/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div style={{float:\"left\", textAlign:\"center\", width:\"20%\", alignItems:\"center\", justifyContent:\"center\"}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<rb.Button onClick={this.toCCClicked}> &lt; &lt; </rb.Button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<rb.Button onClick={this.fromCCClicked}> &gt; &gt; </rb.Button>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div style={{float:\"right\", textAlign:\"center\", width:\"40%\"}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<text fontSize=\"20px\"><b>Public At The Place</b></text>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{backgroundColor:\"#F9F9F9\"}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Table tableprops={mappingsPATP} display={displaySetting2} type=\"modal-edit\" callbackFromParent={this.myCallback} databack={this.databackTable}/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</rb.Modal.Body>\r\n\t\t\t\t\t\t\t\t\t\t<rb.Modal.Footer>\r\n\t\t\t\t\t\t\t\t\t\t\t<rb.Button variant=\"secondary\" onClick={()=>this.setState({showSelection:false})}>\r\n\t\t\t\t\t\t\t\t\t\t\t\tClose\r\n\t\t\t\t\t\t\t\t\t\t\t</rb.Button>\r\n\t\t\t\t\t\t\t\t\t\t</rb.Modal.Footer>\r\n\t\t\t\t\t\t\t\t\t</rb.Modal>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t{/* Profile Page */}\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<rb.Modal show={this.state.showSelection2} onHide={()=>this.setState({showSelection2:false})} size=\"xl\" centered scrollable={true}>\r\n\t\t\t\t\t\t\t\t\t\t<rb.Modal.Header closeButton>\r\n\t\t\t\t\t\t\t\t\t\t\t<rb.Modal.Title>Person Profile</rb.Modal.Title>\r\n\t\t\t\t\t\t\t\t\t\t</rb.Modal.Header>\r\n\t\t\t\t\t\t\t\t\t\t<rb.Modal.Body>\r\n\t\t\t\t\t\t\t\t\t\t\t<ProfileModal profile={this.state.profileModal}/>\r\n\t\t\t\t\t\t\t\t\t\t</rb.Modal.Body>\r\n\t\t\t\t\t\t\t\t\t\t<rb.Modal.Footer>\r\n\t\t\t\t\t\t\t\t\t\t\t<rb.Button variant=\"secondary\" onClick={()=>this.setState({showSelection2:false})}>\r\n\t\t\t\t\t\t\t\t\t\t\t\tClose\r\n\t\t\t\t\t\t\t\t\t\t\t</rb.Button>\r\n\t\t\t\t\t\t\t\t\t\t</rb.Modal.Footer>\r\n\t\t\t\t\t\t\t\t\t</rb.Modal>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t{/* END SECTION */}\r\n\t\t\t\t\t<section className=\"section section-lg\">\r\n\t\t\t\t\t\t<Footer/>\r\n\t\t\t\t\t</section>\r\n\r\n\r\n\t\t\t\t</main>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default MainPage;","import React, { useRef } from 'react'\r\nimport * as rb from 'react-bootstrap'\r\nimport {ReactComponent as Logo} from '../Imgs/upload.svg'\r\nimport Papa from 'papaparse'\r\nimport axios from 'axios'\r\nimport Graph from './Graphs/Graphs'\r\nimport Table from './Tables/Table'\r\nimport Table2 from './Tables/Table2'\r\nimport ProfileModal from './ProfileModal'\r\nimport MainMap from './MainMap';\r\n// import Chip from '@material-ui/core/Chip';\r\n\r\n\r\nclass TopNavBar extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        \r\n        this.uploadFile = this.uploadFile.bind(this);\r\n        this.uploadFile2 = this.uploadFile2.bind(this);\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.handleClick2 = this.handleClick2.bind(this);\r\n        this.state = {\r\n            dropDownValue: \"None\",\r\n            dataList: [\"None\"],\r\n            suspectCases: [],\r\n            movements: [],\r\n            error: false,\r\n            errorMsg: \"\",\r\n            showModal: false,\r\n            filenames: [],\r\n            series:{},\r\n            datas:[],\r\n            placename:\"\",\r\n            datetime:[],\r\n            showSelection: false,\r\n            CCID:[],\r\n            CloseContacts:{},\r\n            fromCCID:[],\r\n            profileModal:{},\r\n            showSelection2: false,\r\n            mapData:[],\r\n        }\r\n    }\r\n\r\n    importCompleted(){\r\n        const list = this.state\r\n        this.props.handleData(list)\r\n        return\r\n    }\r\n\r\n    // // Suspect Profile File Upload\r\n    // handleClick(e) {\r\n    //     this.refs.fileUploader.click();\r\n    // }\r\n\r\n    // //Suspect Movement File Upload\r\n    // handleClick2(e) {\r\n    //     this.refs.fileUploader2.click();\r\n    // }\r\n\r\n    // // Suspect File Upload\r\n    // uploadFile(event) {\r\n        \r\n    //     const file = event.target.files[0]\r\n\r\n    //     if(file){\r\n    //         if (file.name.includes(\"_suspected\")){\r\n\r\n    //             this.setState({filenames:[...this.state.filenames, file.name]})\r\n    //             const reader = new FileReader();\r\n    //             reader.onload = () => {\r\n    //                 // Use reader.result\r\n    //                 const lols = Papa.parse(reader.result, {header: true, skipEmptyLines: true}, )\r\n                    \r\n    //                 // console.log(lols.data)\r\n    \r\n    //                 // Posting csv data into db\r\n    //                 // this.postData('\"' + JSON.stringify(lols.data) + '\"')\r\n    //                 // this.postSuspects(JSON.stringify(lols.data))\r\n    \r\n    //                 // Adds names into dropdown\r\n    //                 this.setState({dataList: [\"All Suspected Cases\", ...lols.data.map(names => names.firstName + \" \" + names.lastName)]})\r\n    \r\n    //                 const data = lols.data\r\n    //                 this.setState({suspectCases: data})\r\n    //             }\r\n    //             reader.readAsText(file)\r\n    //         }\r\n    //         else{\r\n    //             this.setState({error:true, errorMsg:\"You have uploaded invalid files! Please rename the file to <filename>_suspected (For suspected cases)\"})\r\n    //             return\r\n    //         }\r\n    //     }\r\n    // }\r\n\r\n    // // Movement File Upload\r\n    // uploadFile2(event) {\r\n        \r\n    //     const file = event.target.files[0]\r\n\r\n    //     if(file){\r\n    //         if (file.name.includes(\"_movements\")){\r\n                \r\n    //             this.setState({filenames:[...this.state.filenames, file.name]})\r\n    //             const reader = new FileReader();\r\n    //             reader.onload = () => {\r\n    //                 // Use reader.result\r\n    //                 const lols = Papa.parse(reader.result, {header: true, skipEmptyLines: true}, )\r\n                    \r\n    //                 // console.log(lols.data)\r\n    \r\n    //                 // Posting csv data into db\r\n    //                 // this.postData('\"' + JSON.stringify(lols.data) + '\"')\r\n    //                 // this.postMovements(JSON.stringify(lols.data))\r\n    //                 const data = lols.data\r\n    //                 this.setState({movements: data})\r\n    //             }\r\n    //             reader.readAsText(file)\r\n    //         }\r\n    //         else{\r\n    //             this.setState({error:true, errorMsg:\"You have uploaded invalid files! Please rename the file to <filename>_movement (For suspected case movement)\"})\r\n    //             return\r\n    //         }\r\n    //     }\r\n    // }\r\n\r\n    dropdownClicked(text) {\r\n        this.setState({dropDownValue: text})\r\n    }\r\n\r\n    convertDate(date) {\r\n\r\n        var lol = date\r\n        var dateTimeParts = lol.split(' ')\r\n        // console.log(dateTimeParts)\r\n        var dateParts = dateTimeParts[0].split('/')\r\n        var timeParts = dateTimeParts[1].split(':')\r\n        var timeOfDay = dateTimeParts[2]\r\n        if(timeOfDay === \"pm\"){\r\n            timeParts[0] += 12\r\n        }\r\n\r\n        // new Date(year, month, day, hours, minutes, seconds, milliseconds)\r\n        var finalDate = new Date(dateParts[2], dateParts[1] - 1, dateParts[0], timeParts[0], timeParts[1]);\r\n        // console.log(finalDate)\r\n        return finalDate.getTime();\r\n    }\r\n\r\n    //// ### UNCOMMENT FOR GANTT CHART ###\r\n    // Gantt Chart Data Formatter from movements and suspects\r\n    populateGraph1(){\r\n        let series2 = []\r\n\r\n        var string = this.state.mapData;\r\n        var numbers = string.match(/\\d+/g).map(Number);\r\n        // console.log(numbers)\r\n\r\n        // console.log(this.state.suspectCases)\r\n        numbers.forEach(x => {\r\n            let data = []\r\n\r\n            let m1 = this.state.movements.filter(moves => moves.id === x.toString())[0]\r\n            let p1 = this.state.suspectCases.filter(sus => sus.id === m1.suspectId)[0]\r\n            data.push(\r\n                {\r\n                    x: m1.locationShortaddress,\r\n                    y: [this.convertDate(m1.datetimeEntered),this.convertDate(m1.datetimeLeft)]\r\n                }\r\n            )\r\n            \r\n            series2.push(\r\n                {\r\n                    name: p1.firstName + \" \" + p1.lastName,\r\n                    data: data\r\n                }\r\n            )\r\n        })\r\n\r\n        console.log(series2)\r\n        return series2\r\n    }\r\n\r\n    convertSQLDate(startDate1, endDate, type = undefined){\r\n        \r\n        if(startDate1 !== undefined && endDate !== undefined){\r\n            var date = new Date(startDate1)\r\n            var date2 = date.toString().split(\" \")\r\n            var time = date2[4].split(\":\")\r\n    \r\n            var date1 = new Date(endDate)\r\n            var date21 = date1.toString().split(\" \")\r\n            var time1 = date21[4].split(\":\")\r\n            \r\n            let str\r\n            if(type === \"header\"){\r\n                str = time[0] + \":\"+ time[1] + \" - \" + time1[0] + \":\" + time1[1]\r\n            }\r\n            else{\r\n                str = date2[2] + \" \" + date2[1] + \", \" + time[0] + \":\"+ time[1] + \" - \" + time1[0] + \":\" + time1[1]\r\n            }\r\n           \r\n            return str\r\n        }\r\n        // return date2[1]\r\n    }\r\n\r\n    myCallback = (dataFromChild) => {\r\n        // console.log(\"Data1:\" + dataFromChild)\r\n        this.setState({CCID:dataFromChild})\r\n    }\r\n\r\n    myCallback2 = (dataFromChild) => {\r\n        // console.log(\"Data2:\" + dataFromChild)\r\n        this.setState({fromCCID:dataFromChild})\r\n    }\r\n\r\n    databackTable = (dataFromChild) => {\r\n\r\n        this.setState({profileModal:dataFromChild})\r\n        this.setState({showSelection2:true})\r\n    }\r\n\r\n    isEmptyObject(obj) {\r\n        return !!obj && Object.keys(obj).length === 0 && obj.constructor === Object;\r\n    }\r\n    \r\n    toCCClicked = () => {\r\n        let IDs = []\r\n\r\n        if(this.state.datas.length > 0){\r\n            let placename = this.state.datas[0].locationShortaddress\r\n            // console.log(this.state.CCID)\r\n            this.state.datas.map(x => {\r\n                for(var data of this.state.CCID){\r\n    \r\n                    // console.log(data)\r\n                    if(x.peopleProfileId == data){\r\n                        IDs.push(x.peopleProfileId)\r\n                    }\r\n                }\r\n                \r\n            })\r\n\r\n            // console.log(\"TO: \" + IDs)\r\n            \r\n            let newItem = {...this.state.CloseContacts, [placename]:IDs}\r\n\r\n            this.setState({CloseContacts:newItem}) \r\n        }\r\n    }\r\n\r\n    compare(arr1,arr2){\r\n  \r\n        if(!arr1  || !arr2) return\r\n       \r\n        let result;\r\n       \r\n        arr1.forEach((e1,i)=>arr2.forEach(e2=>{\r\n         \r\n            if(e1.length > 1 && e2.length){\r\n                result = this.compare(e1,e2);\r\n            }else if(e1 !== e2 ){\r\n                result = false\r\n            }else{\r\n                result = true\r\n            }\r\n        }))\r\n       return result\r\n    }\r\n\r\n    fromCCClicked = () => {\r\n\r\n        if(this.state.datas.length > 0){\r\n            let placename = this.state.datas[0].locationShortaddress\r\n            let IDs = this.state.CloseContacts[placename].filter(x => this.state.fromCCID.includes(x) === false).map(x => {return x})\r\n            \r\n            // console.log(\"From: \" + IDs)\r\n\r\n            let newItem = {...this.state.CloseContacts, [placename]:IDs}\r\n\r\n            // console.log(\"Items:\" + newItem)\r\n\r\n            this.setState({CloseContacts:newItem}) \r\n        }\r\n\r\n    }\r\n\r\n    dataRetrievedMap = (dataFromChild) => {\r\n        this.setState({mapData: dataFromChild})\r\n    }\r\n\r\n    render() {\r\n\r\n        let suspected = this.state.dataList.map(sus => <rb.NavDropdown.Item eventKey={Math.random()}>{sus}</rb.NavDropdown.Item>)\r\n        \r\n        let displaySetting, displaySetting2, seriesdata\r\n\r\n        //// ### UNCOMMENT FOR GANTT CHART ###\r\n        let test\r\n\r\n        if(this.state.suspectCases.length > 0 && this.state.movements.length > 0 ){\r\n            displaySetting = \"none\"\r\n            displaySetting2 = \"block\"\r\n            \r\n        }\r\n        else{\r\n            displaySetting = \"block\"\r\n            displaySetting2 = \"none\"\r\n        }\r\n        \r\n        let graph1, graph11\r\n\r\n        const that = this;\r\n\r\n        let placename;\r\n\r\n        //// ### UNCOMMENT FOR GANTT CHART ###\r\n        if(this.state.mapData != \"\"){\r\n            console.log(\"YAY\")\r\n            test = this.populateGraph1()\r\n        }\r\n        \r\n\r\n        //// ### UNCOMMENT FOR GANTT CHART ###\r\n        if(test !== undefined){\r\n            var options = {\r\n                options: {\r\n                    chart: {\r\n                        height: 450, \r\n                        type: 'rangeBar',\r\n                        events:{\r\n                            dataPointSelection: function(event, chartContext, config) {\r\n                                // Name of place\r\n                                // console.log(test[config.seriesIndex].data[config.dataPointIndex].x)\r\n\r\n                                that.setState({placename:test[config.seriesIndex].data[config.dataPointIndex].x, datetime:test[config.seriesIndex].data[config.dataPointIndex].y})\r\n\r\n                                // For the time\r\n                                // console.log(test[config.seriesIndex].data[config.dataPointIndex].y)\r\n                                \r\n                                // For the Name\r\n                                // console.log(test[config.seriesIndex].name)\r\n\r\n                                placename = test[config.seriesIndex].data[config.dataPointIndex].x\r\n\r\n                                fetch(\"http://localhost:8080/getMovementForDate?placeName=\"+ test[config.seriesIndex].data[config.dataPointIndex].x +\"&dates=\" + test[config.seriesIndex].data[config.dataPointIndex].y + \"&personName=\" + test[config.seriesIndex].name)\r\n                                .then(response => response.json()).then(data => that.setState({datas:data})).catch(err => {console.log(err);});\r\n                            }\r\n                        }\r\n                    },\r\n                    plotOptions: {\r\n                      bar: {horizontal: true, barHeight: '80%'}\r\n                    },\r\n                    xaxis: {\r\n                      type: 'datetime'\r\n                    },\r\n                    stroke: {\r\n                      width: 1\r\n                    },\r\n                    fill: {\r\n                      type: 'solid',\r\n                      opacity: 0.6\r\n                    },\r\n                    legend: {\r\n                      position: 'top',\r\n                      horizontalAlign: 'left'\r\n                    }\r\n                }\r\n            }\r\n            graph1 = <Graph display={displaySetting2} options={options.options} series={test} tool/>\r\n        }\r\n\r\n        // Creating the COnfirmed Cases\r\n        let mappingsCC = this.state.datas.filter(data => data.caseNumber != null).map(data => {\r\n            return({\r\n                caseNumber:data.caseNumber,\r\n                UID:data.peopleProfileId,\r\n                name:data.firstName + \" \" + data.lastName,\r\n                place:data.locationShortaddress,\r\n                datetime:this.convertSQLDate(data.datetimeEntered, data.datetimeLeft)\r\n            })\r\n        })\r\n\r\n        // Creating the Public at the place List\r\n        let mappingsPATP\r\n        \r\n        // Checks if there are any close contacts be begin with. If there are none than the below will run\r\n        if(this.isEmptyObject(this.state.CloseContacts)){\r\n            mappingsPATP = this.state.datas.filter(data => data.caseNumber == null).map(data =>{\r\n                return({\r\n                    UID:data.peopleProfileId,\r\n                    name:data.firstName + \" \" + data.lastName,\r\n                    place:data.locationShortaddress,\r\n                    datetime:this.convertSQLDate(data.datetimeEntered, data.datetimeLeft)\r\n                })\r\n            })\r\n        }\r\n\r\n        // If you added the close contacts, no need to be for the current place (any place), then the below will run\r\n        else{\r\n            \r\n            let newlist = []\r\n\r\n            this.state.datas.filter(data => data.caseNumber == null).map(data =>{\r\n\r\n                // Checks if the place that the user has clicked on contains any close contacts assigned to it. If there are, then it will take away all the people that are in the close \r\n                // contact list from the PATP\r\n                if(this.state.CloseContacts[data.locationShortaddress] != undefined){\r\n                    // console.log(\"Logged: \" + this.state.CloseContacts[placename] + \": \" + Array.isArray(this.state.CloseContacts[placename]))\r\n                    if(this.state.CloseContacts[data.locationShortaddress].includes(data.peopleProfileId) === false){\r\n                        newlist.push({\r\n                            UID:data.peopleProfileId,\r\n                            name:data.firstName + \" \" + data.lastName,\r\n                            place:data.locationShortaddress,\r\n                            datetime:this.convertSQLDate(data.datetimeEntered, data.datetimeLeft)\r\n                        })\r\n                    }\r\n                }\r\n\r\n                // If there isnt any close contacts then it will just return all the people from the PTAP back to PTAP\r\n                else{\r\n                    newlist.push({\r\n                        UID:data.peopleProfileId,\r\n                        name:data.firstName + \" \" + data.lastName,\r\n                        place:data.locationShortaddress,\r\n                        datetime:this.convertSQLDate(data.datetimeEntered, data.datetimeLeft)\r\n                    })\r\n                }       \r\n            })\r\n\r\n            mappingsPATP = newlist\r\n        }\r\n\r\n        //Mapping the Contacts\r\n        let newlist2 = []\r\n\r\n        this.state.datas.filter(data => data.caseNumber == null).map(data =>{\r\n            \r\n            if(this.state.CloseContacts[data.locationShortaddress] != undefined){\r\n                if(this.state.CloseContacts[data.locationShortaddress].includes(data.peopleProfileId)){\r\n                    newlist2.push({\r\n                        UID:data.peopleProfileId,\r\n                        name:data.firstName + \" \" + data.lastName,\r\n                        place:data.locationShortaddress,\r\n                        datetime:this.convertSQLDate(data.datetimeEntered, data.datetimeLeft)\r\n                    })\r\n                }\r\n            }  \r\n        })\r\n\r\n        let mappingsclose = newlist2\r\n\r\n        // console.log(this.state.showSelection2)\r\n\r\n        return (\r\n            <div>\r\n                {/* <div>\r\n                    <rb.Navbar bg=\"white\">\r\n                        <rb.Navbar.Brand style={{fontSize:30}}>\r\n                            Filter:\r\n                        </rb.Navbar.Brand>\r\n                        <rb.Navbar.Toggle />\r\n                        <rb.Nav onSelect={(eventKey) => this.dropdownClicked(eventKey)}>\r\n                            <rb.NavDropdown title={this.state.dropDownValue}>\r\n                                {suspected}\r\n                            </rb.NavDropdown>\r\n                        </rb.Nav>\r\n                        <rb.Navbar.Collapse className=\"justify-content-end\">\r\n\r\n                            <rb.Button className=\"text-right\" id=\"importCases\" style={{textSize:15}} onClick={() => this.setState({showModal: true})}>\r\n                                <Logo style={{width:30, height:30, paddingRight:7.4}} id=\"uploadLogo\"/>\r\n                                IMPORT SUSPECTED CASES\r\n                            </rb.Button>\r\n\r\n                            <rb.Button className=\"text-right\" id=\"importCases\" style={{textSize:15}} onClick={this.handleClick.bind(this)}>\r\n                                <Logo style={{width:30, height:30, paddingRight:7.4}} id=\"uploadLogo\"/>\r\n                                IMPORT SUSPECTED CASES\r\n                            </rb.Button>\r\n                            <input type=\"file\" id=\"file\" ref=\"fileUploader\" style={{display: \"none\"}} onChange={this.uploadFile} multiple/>\r\n\r\n                        </rb.Navbar.Collapse>\r\n                    </rb.Navbar>\r\n                </div> */}\r\n                \r\n                {/* Upload Case Files */}\r\n                {/* <div>\r\n                    <rb.Modal show={this.state.showModal} onHide={() => this.setState({showModal: false}) } animation={false}>\r\n                        <rb.Modal.Header closeButton>\r\n                            <rb.Modal.Title>Upload Suspect Cases Files</rb.Modal.Title>\r\n                        </rb.Modal.Header>\r\n\r\n                        <rb.Modal.Body className=\"d-flex justify-content-center\">\r\n\r\n                            <div className=\"row\" >\r\n                                <div className=\".col-md-6\" style={{paddingRight: 15}}>\r\n                                    <b>Profile of suspected case</b>\r\n                                    <br/>\r\n                                    <br/>\r\n                                    <rb.Button variant=\"secondary\" style={{width:\"100%\"}} onClick={this.handleClick.bind(this)}>\r\n                                        Upload\r\n                                    </rb.Button>\r\n                                    <input type=\"file\" id=\"file\" ref=\"fileUploader\" style={{display: \"none\"}} onChange={this.uploadFile}/>\r\n                                    <p>File Chosen: </p>\r\n                                </div>\r\n\r\n                                <div style ={{borderLeft: \"2px dashed black\", height: \"100px\"}}></div>\r\n\r\n                                <div className=\".col-md-6\" variant=\"primary\" style={{paddingLeft: 15}}>\r\n                                    <b>Movement of suspected case</b>\r\n                                    <br/>\r\n                                    <br/>\r\n                                    <rb.Button variant=\"secondary\" style={{width:\"100%\"}} onClick={this.handleClick2.bind(this)}>\r\n                                        Upload\r\n                                    </rb.Button>\r\n                                    <input type=\"file\" id=\"file2\" ref=\"fileUploader2\" style={{display: \"none\"}} onChange={this.uploadFile2}/>\r\n                                </div>\r\n                            </div>\r\n                        </rb.Modal.Body>\r\n                    </rb.Modal>\r\n                </div> */}\r\n                \r\n                {/* Error msg when upload wrong file */}\r\n                {/* <div>\r\n                    <rb.Toast onClose={() => this.setState({error: false})} show={this.state.error}>\r\n                        <rb.Toast.Header>\r\n                            <strong className=\"mr-auto\">Error!</strong>\r\n                            <small>11 mins ago</small>\r\n                        </rb.Toast.Header>\r\n                        <rb.Toast.Body>{this.state.errorMsg}</rb.Toast.Body>\r\n                    </rb.Toast>\r\n                </div> */}\r\n\r\n                {/* Import Some Data to Begin Text */}\r\n                {/* <div style={{display:displaySetting, height:\"100%\"}}>\r\n                    <h1 style={{color:\"#424761\", textAlign:\"center\", marginTop:\"15%\"}}>Import some data to begin</h1>\r\n                </div> */}\r\n\r\n                <div style={{display:displaySetting2}}>\r\n\r\n                    {/* Gantt Chart / Map */}\r\n                    <div style={{textAlign: \"left\", height:\"100%\", float:\"left\", width:\"50%\"}}>\r\n\r\n                        {/* UNCOMMENT FOR MAP */}\r\n                        {/* <MainMap profile={this.state.suspectCases} movement={this.state.movements} dataRetrieved={this.dataRetrievedMap}/> */}\r\n\r\n                        {/* ### UNCOMMENT FOR GANTT CHART ### */}\r\n                        {/* {graph1} */}\r\n                    </div>\r\n                    \r\n                    {/* Tabs */}\r\n                    <div style={{float:\"left\", width:\"50%\"}}>\r\n                        <rb.Tabs defaultActiveKey=\"home\" id=\"uncontrolled-tab-example\">\r\n                            <rb.Tab eventKey=\"home\" title=\"CONFIRMED CASES\">\r\n                                <div style={{textAlign: \"left\", height:\"100%\"}}>\r\n                                    <h5>\r\n                                        {/* <Chip label=\"Basic\" /> */}\r\n                                        {/* PlaceName */}\r\n                                        <rb.Badge pill variant=\"primary\">\r\n                                            {this.state.placename}\r\n                                        </rb.Badge>\r\n                                        {' '}\r\n                                        {/* Time Span */}\r\n                                        <rb.Badge pill variant=\"primary\">\r\n                                            {this.convertSQLDate(this.state.datetime[0], this.state.datetime[1], \"header\")}\r\n                                        </rb.Badge>\r\n                                    </h5>\r\n                                    <Table tableprops={mappingsCC} display={displaySetting2} type = \"CC\" databack={this.databackTable}/>\r\n                                </div>\r\n                            </rb.Tab>\r\n\r\n                            <rb.Tab eventKey=\"profile\" title=\"CLOSE CONTACT\">\r\n                                <div style={{textAlign: \"left\", height:\"100%\"}}>\r\n                                    <h5>\r\n                                        {/* PlaceName */}\r\n                                        <rb.Badge pill variant=\"primary\">\r\n                                            {this.state.placename}\r\n                                        </rb.Badge>\r\n                                        {' '}\r\n                                        {/* Time Span */}\r\n                                        <rb.Badge pill variant=\"primary\">\r\n                                            {this.convertSQLDate(this.state.datetime[0], this.state.datetime[1], \"header\")}\r\n                                        </rb.Badge>\r\n                                    </h5>\r\n                                    <Table tableprops={mappingsclose} display={displaySetting2} type=\"PATP\" databack={this.databackTable}/>\r\n                                    <rb.Button onClick={() => this.setState({showSelection:true})}>\r\n                                        Manual Import\r\n                                    </rb.Button>\r\n                                </div>\r\n                            </rb.Tab>\r\n\r\n                            <rb.Tab eventKey=\"contact\" title=\"PUBLIC AT THE PLACE\">\r\n                                <div style={{textAlign: \"left\", height:\"100%\"}}>\r\n                                    <h5>\r\n                                        {/* PlaceName */}\r\n                                        <rb.Badge pill variant=\"primary\">\r\n                                            {this.state.placename}\r\n                                        </rb.Badge>\r\n                                        {' '}\r\n                                        {/* Time Span */}\r\n                                        <rb.Badge pill variant=\"primary\">\r\n                                            {this.convertSQLDate(this.state.datetime[0], this.state.datetime[1], \"header\")}\r\n                                        </rb.Badge>\r\n                                    </h5>\r\n                                    <Table tableprops={mappingsPATP} display={displaySetting2} type=\"PATP\" databack={this.databackTable}/>\r\n                                </div>\r\n                            </rb.Tab>\r\n                        </rb.Tabs>         \r\n                    </div>\r\n                    \r\n                    {/* PTAP TO CC AND CC TO PTAP */}\r\n                    <div>\r\n                        <rb.Modal show={this.state.showSelection} onHide={()=>this.setState({showSelection:false})} centered size=\"xl\" scrollable={true}>\r\n                            <rb.Modal.Header closeButton>\r\n                                <rb.Modal.Title>Transfer Users</rb.Modal.Title>\r\n                            </rb.Modal.Header>\r\n                            <rb.Modal.Body>\r\n                                <div style={{float:\"left\", textAlign:\"center\", width:\"40%\"}}>\r\n                                    <text fontSize=\"20px\"><b>Close Contact With Public</b></text>\r\n                                    <div style={{backgroundColor:\"#F9F9F9\", }}>\r\n                                        <Table2 tableprops={mappingsclose} display={displaySetting2} type=\"modal-edit\" callbackFromParent={this.myCallback2} databack={this.databackTable}/>\r\n                                    </div>\r\n                                </div>\r\n                                <div style={{float:\"left\", textAlign:\"center\", width:\"20%\", alignItems:\"center\", justifyContent:\"center\"}}>\r\n                                    <rb.Button onClick={this.toCCClicked}> &lt; &lt; </rb.Button>\r\n                                    <div className=\"clearfix\"></div>\r\n                                    <rb.Button onClick={this.fromCCClicked}> &gt; &gt; </rb.Button>\r\n                                </div>\r\n                                <div style={{float:\"right\", textAlign:\"center\", width:\"40%\"}}>\r\n                                    <text fontSize=\"20px\"><b>Public At The Place</b></text>\r\n                                    <div style={{backgroundColor:\"#F9F9F9\"}}>\r\n                                        <Table tableprops={mappingsPATP} display={displaySetting2} type=\"modal-edit\" callbackFromParent={this.myCallback} databack={this.databackTable}/>\r\n                                    </div>\r\n                                </div>\r\n                            </rb.Modal.Body>\r\n                            <rb.Modal.Footer>\r\n                                <rb.Button variant=\"secondary\" onClick={()=>this.setState({showSelection:false})}>\r\n                                    Close\r\n                                </rb.Button>\r\n                            </rb.Modal.Footer>\r\n                        </rb.Modal>\r\n                    </div>\r\n                    \r\n                    {/* Profile Page */}\r\n                    <div>\r\n                        <rb.Modal show={this.state.showSelection2} onHide={()=>this.setState({showSelection2:false})} size=\"xl\" centered scrollable={true}>\r\n                            <rb.Modal.Header closeButton>\r\n                                <rb.Modal.Title>Person Profile</rb.Modal.Title>\r\n                            </rb.Modal.Header>\r\n                            <rb.Modal.Body>\r\n                                <ProfileModal profile={this.state.profileModal}/>\r\n                            </rb.Modal.Body>\r\n                            <rb.Modal.Footer>\r\n                                <rb.Button variant=\"secondary\" onClick={()=>this.setState({showSelection2:false})}>\r\n                                    Close\r\n                                </rb.Button>\r\n                            </rb.Modal.Footer>\r\n                        </rb.Modal>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default TopNavBar","import React from 'react'\r\n\r\n// reactstrap components\r\nimport {\r\n\tContainer,\r\n\tRow,\r\n\tCol,\r\n\tUncontrolledTooltip\r\n} from \"reactstrap\";\r\n\r\nclass Footer extends React.Component{\r\n    render(){\r\n        return(\r\n            <>\r\n                <Container>\r\n                    <Row className=\"row-grid justify-content-center\">\r\n                    <Col className=\"text-center\" lg=\"8\">\r\n                        <h2 className=\"display-3\">\r\n                        Thank You For Using This Simple Tool{\" \"}\r\n                        <span className=\"text-success\">\r\n                            Designed for Viewing Covid-19 Suspects\r\n                        </span>\r\n                        </h2>\r\n                        <p className=\"lead\">\r\n                        This project was done as part of my internship with CSIT\r\n                        that started on 6 July and ended on 20 November\r\n                        </p>\r\n\r\n                        \r\n                        <a href=\"https://www.tp.edu.sg/\" target=\"_blank\">\r\n                            <img src={require(\"../../../Imgs/tplogo-course-search.png\")} style={{width:\"50%\"}}/>\r\n                        </a>\r\n                        <a href=\"https://www.csit.gov.sg/\" target=\"_blank\">\r\n                            <img src={require(\"../../../Imgs/csit-logo.png\")}/>\r\n                        </a>\r\n\r\n                        <div className=\"btn-wrapper\">\r\n                        {/* <Button\r\n                            className=\"mb-3 mb-sm-0\"\r\n                            color=\"primary\"\r\n                            href=\"https://www.creative-tim.com/product/argon-design-system-react?ref=adsr-landing-page\"\r\n                        >\r\n                            Download React\r\n                        </Button> */}\r\n                        </div>\r\n                        <div className=\"text-center\">\r\n                        <h4 className=\"display-4 mb-5 mt-5\">\r\n                            Here are some links to contact me\r\n                        </h4>\r\n                        <Row className=\"justify-content-center\">\r\n                            <Col lg=\"2\" xs=\"4\">\r\n                            <a\r\n                                href=\"https://github.com/aquaimpact\"\r\n                                id=\"tooltip255035741\"\r\n                                target=\"_blank\"\r\n                            >\r\n                                <img\r\n                                alt=\"...\"\r\n                                className=\"img-fluid\"\r\n                                src=\"https://github.githubassets.com/images/modules/logos_page/Octocat.png\"\r\n                                />\r\n                            </a>\r\n                            <UncontrolledTooltip delay={0} target=\"tooltip255035741\">\r\n                                Github\r\n                            </UncontrolledTooltip>\r\n                            </Col>\r\n                            <Col lg=\"2\" xs=\"4\">\r\n                            <a\r\n                                href=\"https://www.creative-tim.com/product/vue-argon-design-system?ref=adsr-landing-page\"\r\n                                id=\"tooltip265846671\"\r\n                                target=\"_blank\"\r\n                            >\r\n                                <img\r\n                                alt=\"...\"\r\n                                className=\"img-fluid\"\r\n                                src=\"https://s3.amazonaws.com/creativetim_bucket/tim_static_images/presentation-page/vue.jpg\"\r\n                                />\r\n                            </a>\r\n                            <UncontrolledTooltip delay={0} target=\"tooltip265846671\">\r\n                                Vue.js - The progressive javascript framework\r\n                            </UncontrolledTooltip>\r\n                            </Col>\r\n                            <Col lg=\"2\" xs=\"4\">\r\n                            <a\r\n                                href=\"https://www.creative-tim.com/product/argon-design-system-angular?ref=adsr-landing-page\"\r\n                                id=\"tooltip233150499\"\r\n                                target=\"_blank\"\r\n                            >\r\n                                <img\r\n                                alt=\"...\"\r\n                                className=\"img-fluid\"\r\n                                src=\"https://s3.amazonaws.com/creativetim_bucket/tim_static_images/presentation-page/angular.jpg\"\r\n                                />\r\n                            </a>\r\n                            <UncontrolledTooltip delay={0} target=\"tooltip233150499\">\r\n                                Angular - One framework. Mobile & Desktop\r\n                            </UncontrolledTooltip>\r\n                            </Col>\r\n                            <Col lg=\"2\" xs=\"4\">\r\n                            <a\r\n                                href=\"https://www.creative-tim.com/product/argon-design-system-react?ref=adsr-landing-page\"\r\n                                id=\"tooltip308866163\"\r\n                                target=\"_blank\"\r\n                            >\r\n                                <img\r\n                                alt=\"...\"\r\n                                className=\"img-fluid\"\r\n                                src=\"https://s3.amazonaws.com/creativetim_bucket/tim_static_images/presentation-page/react.jpg\"\r\n                                />\r\n                            </a>\r\n                            <UncontrolledTooltip delay={0} target=\"tooltip308866163\">\r\n                                React - A JavaScript library for building user\r\n                                interfaces\r\n                            </UncontrolledTooltip>\r\n                            </Col>\r\n                            <Col lg=\"2\" xs=\"4\">\r\n                            <a\r\n                                href=\"https://www.creative-tim.com/product/argon-design-system-react?ref=adsr-landing-page\"\r\n                                id=\"tooltip76119384\"\r\n                                target=\"_blank\"\r\n                            >\r\n                                <img\r\n                                alt=\"...\"\r\n                                className=\"img-fluid\"\r\n                                src=\"https://s3.amazonaws.com/creativetim_bucket/tim_static_images/presentation-page/sketch.jpg\"\r\n                                />\r\n                            </a>\r\n                            <UncontrolledTooltip delay={0} target=\"tooltip76119384\">\r\n                                Sketch - Digital design toolkit\r\n                            </UncontrolledTooltip>\r\n                            </Col>\r\n                            <Col lg=\"2\" xs=\"4\">\r\n                            <a\r\n                                href=\"https://www.creative-tim.com/product/argon-design-system-react?ref=adsr-landing-page\"\r\n                                id=\"tooltip646643508\"\r\n                                target=\"_blank\"\r\n                            >\r\n                                <img\r\n                                alt=\"...\"\r\n                                className=\"img-fluid\"\r\n                                src=\"https://s3.amazonaws.com/creativetim_bucket/tim_static_images/presentation-page/ps.jpg\"\r\n                                />\r\n                            </a>\r\n                            <UncontrolledTooltip delay={0} target=\"tooltip646643508\">\r\n                                Adobe Photoshop - Software for digital images\r\n                                manipulation\r\n                            </UncontrolledTooltip>\r\n                            </Col>\r\n                        </Row>\r\n                        </div>\r\n                    </Col>\r\n                    </Row>\r\n                </Container>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Footer","/*!\n\n=========================================================\n* Argon Design System React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-design-system-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-design-system-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n// JavaScript plugin that hides or shows a component based on your scroll\nimport Headroom from \"headroom.js\";\n// reactstrap components\nimport {\n  Button,\n  UncontrolledCollapse,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle,\n  UncontrolledDropdown,\n  Media,\n  NavbarBrand,\n  Navbar,\n  NavItem,\n  NavLink,\n  Nav,\n  Container,\n  Row,\n  Col,\n  UncontrolledTooltip,\n  Modal,\n} from \"reactstrap\";\n\n\nclass DemoNavbar extends React.Component {\n  \n  constructor(props){\n    super(props)\n\n    // this.uploadFile = this.uploadFile.bind(this);\n    // this.uploadFile2 = this.uploadFile2.bind(this);\n    // this.handleClick = this.handleClick.bind(this);\n    // this.handleClick2 = this.handleClick2.bind(this);\n\n    this.state = {\n      dropDownValue: \"None\",\n      dataList: [\"None\"],\n      suspectCases: [],\n      movements: [],\n      error: false,\n      errorMsg: \"\",\n      showModal: false,\n      filenames: [],\n      series:{},\n      datas:[],\n      placename:\"\",\n      datetime:[],\n      showSelection: false,\n      CCID:[],\n      CloseContacts:{},\n      fromCCID:[],\n      profileModal:{},\n      showSelection2: false,\n      mapData:[],\n      collapseClasses: \"\",\n      collapseOpen: false,\n    }\n    \n  }\n\n  componentDidMount() {\n    let headroom = new Headroom(document.getElementById(\"navbar-main\"));\n    // initialise\n    headroom.init();\n  }\n\n  onExiting = () => {\n    this.setState({\n      collapseClasses: \"collapsing-out\"\n    });\n  };\n\n  onExited = () => {\n    this.setState({\n      collapseClasses: \"\"\n    });\n  };\n\n  render() {\n    return (\n      <>\n        <header className=\"header-global\">\n          <Navbar\n            className=\"navbar-main navbar-transparent navbar-light headroom\"\n            expand=\"lg\"\n            id=\"navbar-main\"\n          >\n            <Container>\n              {/* <NavbarBrand className=\"mr-lg-5\" to=\"/\" tag={Link}>\n                <img\n                  alt=\"...\"\n                  src=\"G:/INTERNSHIPFILES/CodingFolder/csit-website/src/assets/img/brand/argon-react-white.png\"\n                />\n              </NavbarBrand> */}\n\n              <a>\n                <img style={{height:\"30px\"}}\n                    alt=\"...\"\n                    src={require(\"../../../assets/img/brand/argon-react-white.png\")}\n                  />\n              </a>\n\n              <button className=\"navbar-toggler\" id=\"navbar_global\">\n                <span className=\"navbar-toggler-icon\" />\n              </button>\n              {/* <UncontrolledCollapse\n                toggler=\"#navbar_global\"\n                navbar\n                className={this.state.collapseClasses}\n                onExiting={this.onExiting}\n                onExited={this.onExited}\n              >\n                <div className=\"navbar-collapse-header\">\n                  <Row>\n                    <Col className=\"collapse-brand\" xs=\"6\">\n                      <Link to=\"/\"> \n                      <a>\n                        <img\n                            alt=\"...\"\n                            src={require(\"G:/INTERNSHIPFILES/CodingFolder/csit-website/src/assets/img/brand/argon-react.png\")}\n                          />\n                      </a>\n                      </Link>\n                    </Col>\n                    <Col className=\"collapse-close\" xs=\"6\">\n                      <button className=\"navbar-toggler\" id=\"navbar_global\">\n                        <span />\n                        <span />\n                      </button>\n                    </Col>\n                  </Row>\n                </div>\n                <Nav className=\"navbar-nav-hover align-items-lg-center\" navbar>\n                  <UncontrolledDropdown nav>\n                    <DropdownToggle nav>\n                      <i className=\"ni ni-ui-04 d-lg-none mr-1\" />\n                      <span className=\"nav-link-inner--text\">Components</span>\n                    </DropdownToggle>\n                    <DropdownMenu className=\"dropdown-menu-xl\">\n                      <div className=\"dropdown-menu-inner\">\n                        <Media\n                          className=\"d-flex align-items-center\"\n                          href=\"https://demos.creative-tim.com/argon-design-system-react/#/documentation/overview?ref=adsr-navbar\"\n                          target=\"_blank\"\n                        >\n                          <div className=\"icon icon-shape bg-gradient-primary rounded-circle text-white\">\n                            <i className=\"ni ni-spaceship\" />\n                          </div>\n                          <Media body className=\"ml-3\">\n                            <h6 className=\"heading text-primary mb-md-1\">\n                              Getting started\n                            </h6>\n                            <p className=\"description d-none d-md-inline-block mb-0\">\n                              Learn how to use Argon compiling Scss, change\n                              brand colors and more.\n                            </p>\n                          </Media>\n                        </Media>\n                        <Media\n                          className=\"d-flex align-items-center\"\n                          href=\"https://demos.creative-tim.com/argon-design-system-react/#/documentation/colors?ref=adsr-navbar\"\n                          target=\"_blank\"\n                        >\n                          <div className=\"icon icon-shape bg-gradient-success rounded-circle text-white\">\n                            <i className=\"ni ni-palette\" />\n                          </div>\n                          <Media body className=\"ml-3\">\n                            <h6 className=\"heading text-primary mb-md-1\">\n                              Foundation\n                            </h6>\n                            <p className=\"description d-none d-md-inline-block mb-0\">\n                              Learn more about colors, typography, icons and the\n                              grid system we used for Argon.\n                            </p>\n                          </Media>\n                        </Media>\n                        <Media\n                          className=\"d-flex align-items-center\"\n                          href=\"https://demos.creative-tim.com/argon-design-system-react/#/documentation/alert?ref=adsr-navbar\"\n                          target=\"_blank\"\n                        >\n                          <div className=\"icon icon-shape bg-gradient-warning rounded-circle text-white\">\n                            <i className=\"ni ni-ui-04\" />\n                          </div>\n                          <Media body className=\"ml-3\">\n                            <h5 className=\"heading text-warning mb-md-1\">\n                              Components\n                            </h5>\n                            <p className=\"description d-none d-md-inline-block mb-0\">\n                              Browse our 50 beautiful handcrafted components\n                              offered in the Free version.\n                            </p>\n                          </Media>\n                        </Media>\n                      </div>\n                    </DropdownMenu>\n                  </UncontrolledDropdown>\n                  <UncontrolledDropdown nav>\n                    <DropdownToggle nav>\n                      <i className=\"ni ni-collection d-lg-none mr-1\" />\n                      <span className=\"nav-link-inner--text\">Examples</span>\n                    </DropdownToggle>\n                    {/* <DropdownMenu>\n                      <DropdownItem to=\"/landing-page\" tag={Link}>\n                        Landing\n                      </DropdownItem>\n                      <DropdownItem to=\"/profile-page\" tag={Link}>\n                        Profile\n                      </DropdownItem>\n                      <DropdownItem to=\"/login-page\" tag={Link}>\n                        Login\n                      </DropdownItem>\n                      <DropdownItem to=\"/register-page\" tag={Link}>\n                        Register\n                      </DropdownItem>\n                    </DropdownMenu>\n                  </UncontrolledDropdown>\n                </Nav>\n                <Nav className=\"align-items-lg-center ml-lg-auto\" navbar>\n                  <NavItem className=\"d-none d-lg-block ml-lg-4\">\n\n\n                    <UncontrolledDropdown group>\n                      <DropdownToggle caret color=\"primary\">\n                        Import Suspected Cases\n                      </DropdownToggle>\n                      <DropdownMenu>\n                        <DropdownItem href=\"#pablo\" onClick={e => e.preventDefault()}>\n                          Action\n                        </DropdownItem>\n                        <DropdownItem href=\"#pablo\" onClick={e => e.preventDefault()}>\n                          Another action\n                        </DropdownItem>\n                        <DropdownItem href=\"#pablo\" onClick={e => e.preventDefault()}>\n                          Something else here\n                        </DropdownItem>\n                        <DropdownItem divider />\n                        <DropdownItem href=\"#pablo\" onClick={e => e.preventDefault()}>\n                          Separated link\n                        </DropdownItem>\n                      </DropdownMenu>\n                    </UncontrolledDropdown>\n                    {/* <Button\n                      className=\"btn-neutral btn-icon\"\n                      color=\"default\"\n                      href=\"https://www.creative-tim.com/product/argon-design-system-react?ref=adsr-navbar\"\n                      target=\"_blank\"\n                    >\n                      <span className=\"btn-inner--icon\">\n                        <i className=\"fa fa-cloud-upload mr-2\" />\n                      </span>\n                      <span className=\"nav-link-inner--text ml-1\">\n                        Import Suspected Cases\n                      </span>\n                    </Button>\n                  </NavItem>\n                </Nav>\n              </UncontrolledCollapse> */}\n            </Container>\n          </Navbar>\n        </header>\n      </>\n    );\n  }\n}\n\nexport default DemoNavbar;\n","import React from 'react';\nimport './App.css';\nimport NavBar from './Components/Navbar'\nimport MainPage from './Components/Views (New)/MainPage'\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-bootstrap-table/dist/react-bootstrap-table-all.min.css';\nimport './style.css'\n\nimport \"./assets/vendor/nucleo/css/nucleo.css\";\nimport \"./assets/vendor/font-awesome/css/font-awesome.min.css\";\nimport \"./assets/scss/argon-design-system-react.scss?v1.1.0\";\nimport { BrowserRouter as Router, Route} from 'react-router-dom';\n\nfunction App() {\n\n    return(\n      <>\n        <div className=\"App\">\n          <Route exact path={`/`} render={ (routerProps) => < MainPage/>} />\n          {/* <Graph display={displaySetting}/> */}\n        </div>\n      </>\n      \n    );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <Router basename={process.env.PUBLIC_URL}>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}